<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0108.1039                               -->
<workbook original-version='18.1' source-build='2021.4.3 (20214.22.0108.1039)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-duration' value='0.5' />
      <format attr='animation-style' value='as-phased' />
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource caption='Exported_data (Export_Data)' inline='true' name='federated.10iza9t0lel4br1gtoyvh0mhvney' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Export_Data' name='excel-direct.1ady7su0kp2fil1fgj3be19oyeu5'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Checkout/Downloads/Export_Data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Import_merge' name='excel-direct.1qdgadw1ushd5b1aaa4pc1qpui8d'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Checkout/Downloads/Import_merge.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1ady7su0kp2fil1fgj3be19oyeu5' name='Exported_data' table='[Exported_data$]' type='table'>
          <columns gridOrigin='A1:H10001:no:A1:H10001:0' header='yes' outcome='2'>
            <column datatype='string' name='Year' ordinal='0' />
            <column datatype='string' name='pc_code' ordinal='1' />
            <column datatype='string' name='pc_description' ordinal='2' />
            <column datatype='string' name='unit' ordinal='3' />
            <column datatype='integer' name='country_code' ordinal='4' />
            <column datatype='string' name='country_name' ordinal='5' />
            <column datatype='string' name='quantity' ordinal='6' />
            <column datatype='real' name='value' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1ady7su0kp2fil1fgj3be19oyeu5' name='Exported_data' table='[Exported_data$]' type='table'>
          <columns gridOrigin='A1:H10001:no:A1:H10001:0' header='yes' outcome='2'>
            <column datatype='string' name='Year' ordinal='0' />
            <column datatype='string' name='pc_code' ordinal='1' />
            <column datatype='string' name='pc_description' ordinal='2' />
            <column datatype='string' name='unit' ordinal='3' />
            <column datatype='integer' name='country_code' ordinal='4' />
            <column datatype='string' name='country_name' ordinal='5' />
            <column datatype='string' name='quantity' ordinal='6' />
            <column datatype='real' name='value' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Exported_data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H10001:no:A1:H10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Exported_data]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Exported!data_F554945397F0490685A4D014311EA4E8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pc_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[pc_code]</local-name>
            <parent-name>[Exported_data]</parent-name>
            <remote-alias>pc_code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Exported!data_F554945397F0490685A4D014311EA4E8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pc_description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[pc_description]</local-name>
            <parent-name>[Exported_data]</parent-name>
            <remote-alias>pc_description</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Exported!data_F554945397F0490685A4D014311EA4E8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit</remote-name>
            <remote-type>130</remote-type>
            <local-name>[unit]</local-name>
            <parent-name>[Exported_data]</parent-name>
            <remote-alias>unit</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Exported!data_F554945397F0490685A4D014311EA4E8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[country_code]</local-name>
            <parent-name>[Exported_data]</parent-name>
            <remote-alias>country_code</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Exported!data_F554945397F0490685A4D014311EA4E8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country_name]</local-name>
            <parent-name>[Exported_data]</parent-name>
            <remote-alias>country_name</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Exported!data_F554945397F0490685A4D014311EA4E8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quantity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[quantity]</local-name>
            <parent-name>[Exported_data]</parent-name>
            <remote-alias>quantity</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Exported!data_F554945397F0490685A4D014311EA4E8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[value]</local-name>
            <parent-name>[Exported_data]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Exported!data_F554945397F0490685A4D014311EA4E8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Year1' datatype='string' name='[Year]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Exported_data' datatype='table' name='[__tableau_internal_object_id__].[Exported!data_F554945397F0490685A4D014311EA4E8]' role='measure' type='quantitative' />
      <column caption='Country Code' datatype='integer' name='[country_code]' role='dimension' type='ordinal' />
      <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Pc Code' datatype='string' name='[pc_code]' role='dimension' type='nominal' />
      <column caption='Pc Description' datatype='string' name='[pc_description]' role='dimension' type='nominal' />
      <column caption='Quantity' datatype='string' name='[quantity]' role='dimension' type='nominal' />
      <column caption='Unit' datatype='string' name='[unit]' role='dimension' type='nominal' />
      <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
      <column-instance column='[pc_description]' derivation='None' name='[none:pc_description:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:pc_description:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Aircraft, Spacecraft And Parts&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bicycle And Parts&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cotton Fabrics, Madeups Etc.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gold And Oth Precs Metl Jwlery&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Marine Products&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Gold&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Iron And Steel&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Products Of Iron And Steel&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Rmg Cotton Incl Accessories&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pearl, Precs, Semiprecs Stones&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ship, Boat And Floating Struct&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Drug Formulations, Biologicals&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Iron Ore&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Motor Vehicle/Cars&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Buffalo Meat&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Petroleum Products&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Exported_data' id='Exported!data_F554945397F0490685A4D014311EA4E8'>
            <properties context=''>
              <relation connection='excel-direct.1ady7su0kp2fil1fgj3be19oyeu5' name='Exported_data' table='[Exported_data$]' type='table'>
                <columns gridOrigin='A1:H10001:no:A1:H10001:0' header='yes' outcome='2'>
                  <column datatype='string' name='Year' ordinal='0' />
                  <column datatype='string' name='pc_code' ordinal='1' />
                  <column datatype='string' name='pc_description' ordinal='2' />
                  <column datatype='string' name='unit' ordinal='3' />
                  <column datatype='integer' name='country_code' ordinal='4' />
                  <column datatype='string' name='country_name' ordinal='5' />
                  <column datatype='string' name='quantity' ordinal='6' />
                  <column datatype='real' name='value' ordinal='7' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Import_data (Import_merge)' inline='true' name='federated.1owrbxe0ihuycu1a3hme01t2q3wd' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Import_merge' name='excel-direct.18b65js0tcwi7g1fa1n3o0g50tvd'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Checkout/Downloads/Import_merge.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.18b65js0tcwi7g1fa1n3o0g50tvd' name='Import_data' table='[Import_data$]' type='table'>
          <columns gridOrigin='A1:H10001:no:A1:H10001:0' header='yes' outcome='2'>
            <column datatype='string' name='Year' ordinal='0' />
            <column datatype='string' name='pc_code' ordinal='1' />
            <column datatype='string' name='pc_description' ordinal='2' />
            <column datatype='string' name='unit' ordinal='3' />
            <column datatype='integer' name='country_code' ordinal='4' />
            <column datatype='string' name='country_name' ordinal='5' />
            <column datatype='string' name='quantity' ordinal='6' />
            <column datatype='real' name='value' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.18b65js0tcwi7g1fa1n3o0g50tvd' name='Import_data' table='[Import_data$]' type='table'>
          <columns gridOrigin='A1:H10001:no:A1:H10001:0' header='yes' outcome='2'>
            <column datatype='string' name='Year' ordinal='0' />
            <column datatype='string' name='pc_code' ordinal='1' />
            <column datatype='string' name='pc_description' ordinal='2' />
            <column datatype='string' name='unit' ordinal='3' />
            <column datatype='integer' name='country_code' ordinal='4' />
            <column datatype='string' name='country_name' ordinal='5' />
            <column datatype='string' name='quantity' ordinal='6' />
            <column datatype='real' name='value' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Import_data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H10001:no:A1:H10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Import_data]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Import!data_5D67D4C8CCAE43458F4A684F6E0DA6D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pc_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[pc_code]</local-name>
            <parent-name>[Import_data]</parent-name>
            <remote-alias>pc_code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Import!data_5D67D4C8CCAE43458F4A684F6E0DA6D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pc_description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[pc_description]</local-name>
            <parent-name>[Import_data]</parent-name>
            <remote-alias>pc_description</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Import!data_5D67D4C8CCAE43458F4A684F6E0DA6D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit</remote-name>
            <remote-type>130</remote-type>
            <local-name>[unit]</local-name>
            <parent-name>[Import_data]</parent-name>
            <remote-alias>unit</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Import!data_5D67D4C8CCAE43458F4A684F6E0DA6D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[country_code]</local-name>
            <parent-name>[Import_data]</parent-name>
            <remote-alias>country_code</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Import!data_5D67D4C8CCAE43458F4A684F6E0DA6D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country_name]</local-name>
            <parent-name>[Import_data]</parent-name>
            <remote-alias>country_name</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Import!data_5D67D4C8CCAE43458F4A684F6E0DA6D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quantity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[quantity]</local-name>
            <parent-name>[Import_data]</parent-name>
            <remote-alias>quantity</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Import!data_5D67D4C8CCAE43458F4A684F6E0DA6D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[value]</local-name>
            <parent-name>[Import_data]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Import!data_5D67D4C8CCAE43458F4A684F6E0DA6D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Year]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Import_data' datatype='table' name='[__tableau_internal_object_id__].[Import!data_5D67D4C8CCAE43458F4A684F6E0DA6D3]' role='measure' type='quantitative' />
      <column caption='Country Code' datatype='integer' name='[country_code]' role='dimension' type='ordinal' />
      <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Pc Code' datatype='string' name='[pc_code]' role='dimension' type='nominal' />
      <column caption='Pc Description' datatype='string' name='[pc_description]' role='dimension' type='nominal' />
      <column caption='Quantity' datatype='string' name='[quantity]' role='dimension' type='nominal' />
      <column caption='Unit' datatype='string' name='[unit]' role='dimension' type='nominal' />
      <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
      <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[pc_description]' derivation='None' name='[none:pc_description:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Br Virgn Is&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cook Is&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Faroe Is.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kiribati Rep&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Netherlandantil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vatican City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Panama C Z&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;U S A&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fr Polynesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Heard Macdonald&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kyrghyzstan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sri Lanka Dsr&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trinidad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wallis F Is&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji Is&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea Bissau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Korea Dp Rp&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nauru Rp&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovak Rep&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Us Minor Outlying Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cape Verde Is&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pakistan Ir&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saudi Arab&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;U Arab Emts&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt A Rp&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Panama Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Serbia Montngro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Baharain Is&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;St Pierre&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turks C Is&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia-Hrzgovin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo D. Rep.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pitcairn Is.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tanzania Rep&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fr S Ant Tr&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lao Pd Rp&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;St Helena&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Yemen Republc&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;C Afri Rep&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Niue Is&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;St Kitt N A&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh Pr&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominic Rep&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sao Tome&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;St Vincent&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Is&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;East Timor&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;U K&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cote D&apos; Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Korea Rp&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marshall Island&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tokelau Is&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vietnam Soc Rep&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antartica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo P Rep&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Falkland Is&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Netherland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Solomon Is&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vanuatu Rep&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China P Rp&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Papua N Gna&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Norfolk Is&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;St Lucia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fr Guiana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Virgin Is Us&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ameri Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Christmas Is.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equtl Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;N. Mariana Is.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Unspecified&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Year:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;2014&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;2016&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;2015&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:pc_description:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Aluminium, Products Of Aluminm&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cosmetics And Toiletries&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Footwear Of Rubber/Canvas Etc.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jute Hessian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Newsprint&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Other Precious And Base Metals&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pulp And Waste Paper&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Silver&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cmnt, Clinkr And Asbstos Cmnt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Coal,Coke And Briquittes Etc&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Electronics Instruments&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Handloom Products&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Other Construction Machinery&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Poultry Products&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saddlery And Harness&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Two And Three Wheelers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Coir And Coir Manufactures&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Finished Leather&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Indl. Machnry For Dairy Etc&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Motor Vehicle/Cars&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Other Commodities&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Other Misc. Engineering Items&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Processed Minerals&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ship, Boat And Floating Struct&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wool, Raw&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Organic Chemicals&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Auto Tyres And Tubes&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bulk Drugs, Drug Intermediates&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cranes, Lifts And Winches&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Glass And Glassware&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Office Equipments&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paint, Varnish And Allid Prodc&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Raw Hides And Skins&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sugar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Atm, Injctng Mlding Mchnry Etc&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cotton Fabrics, Madeups Etc.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fresh Fruits&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jute Yarn&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nickel, Product Made Of Nickel&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Other Wood And Wood Products&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pulses&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Spices&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Agro Chemicals&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Computer Hardware, Peripherals&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Floor Cvrng Of Jute&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Inorganic Chemicals&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Moulded And Extruded Goods&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Other Miscellaenious Chemicals&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Processed Vegetables&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Silk Carpet&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zinc And Products Made Of Zinc&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Telecom Instruments&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ceramics And Allied Products&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Electrodes&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guergam Meal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Marine Products&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Other Cereals&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Plastic Raw Materials&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rmg Silk&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ac, Refrigeration Machnry Etc&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cotton Raw Incld. Waste&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Essential Oils&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hnd Tool, Cttng Tool Of Metals&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Milled Products&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Other Crude Minerals&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prime Mica And Mica Products&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sesame Seeds&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cashew Nut Shell Liquid&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dyes&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Graphite, Explsivs And Accesor&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Manmade Staple Fibre&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oth Non Ferous Metal And Prodc&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Petroleum Products&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rmg Manmade Fibres&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tobacco Manufactured&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Aircraft, Spacecraft And Parts&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Consumer Electronics&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Floricltr Products&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Leather Footwear Component&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Natrl Silk Yarn,Fabrics,Madeup&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Other Oil Seeds&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Products Of Iron And Steel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Silk Waste&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bulk Minerals And Ores&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dairy Products&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lead And Products Made Of Led&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Leather Garments&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oil Meals&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Residul Chemicl And Alled Prod&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sulpher, Unroasted Iron Pyrite&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vegetable Oils&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ayush And Herbal Products&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Carpet(Excl. Silk) Handmade&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Drug Formulations, Biologicals&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gold And Oth Precs Metl Jwlery&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Leather Goods&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Optical Items (Incl.Lens Etc)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rice(Other Than Basmoti)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Surgicals&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Castor Oil&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Electric Machinery And Equipme&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Groundnut&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manmade Yarn,Fabrics,Madeups&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oth Txtl Yrn, Fbric Mdup Artcl&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rmg Of Othr Textle Matrl&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tin And Products Made Of Tin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cereal Preparations&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Electronics Components&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Handcrfs(Excl.Handmade Crpts)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Medical And Scientific Instrum&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Plastc Sht, Film, Plts Etc&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Plywood And Allied Products&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rmg Wool&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tobacco Unmanufactured&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bicycle And Parts&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fresh Vegetables&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iron And Steel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jute, Raw&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niger Seeds&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Othr Rubber Prodct Excpt Footw&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pumps Of All Types&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sports Goods&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Pearl, Precs, Semiprecs Stones&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Alcoholic Beverages&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Copper And Prdcts Made Of Copr&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Footwear Of Leather&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Iron Ore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Natural Rubber&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Other Plastic Items&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Project Goods&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Silk,Raw&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cocoa Products&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fertilezers Crude&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gold&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Human Hair, Products Thereo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Misc Processed Items&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Other Jute Manufactures&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Processed Fruits And Juices&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sheep/Goat Meat&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wheat&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cashew&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dye Intermediates&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Granit, Natrl Stone And Prodct&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Machine Tools&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Paper, Paper Board And Product&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rmg Cotton Incl Accessories&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Auto Components/Parts&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Books, Publications And Prntng&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cotton Yarn&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fruits / Vegetable Seeds&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nucler Reactr, Indl Boilr, Prt&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Packaging Materials&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Railwy Trnsprt Equipmnts, Prts&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stationry/Offce, School Supply&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Petroleum: Crude&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Accumulators And Batteries&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Coffee&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fertilezers Manufactured&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ic Engines And Parts&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mollases&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Other Meat&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Processed Meat&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Shellac&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wollen Yarn,Fabrics,Madeupsetc&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Import_data' id='Import!data_5D67D4C8CCAE43458F4A684F6E0DA6D3'>
            <properties context=''>
              <relation connection='excel-direct.18b65js0tcwi7g1fa1n3o0g50tvd' name='Import_data' table='[Import_data$]' type='table'>
                <columns gridOrigin='A1:H10001:no:A1:H10001:0' header='yes' outcome='2'>
                  <column datatype='string' name='Year' ordinal='0' />
                  <column datatype='string' name='pc_code' ordinal='1' />
                  <column datatype='string' name='pc_description' ordinal='2' />
                  <column datatype='string' name='unit' ordinal='3' />
                  <column datatype='integer' name='country_code' ordinal='4' />
                  <column datatype='string' name='country_name' ordinal='5' />
                  <column datatype='string' name='quantity' ordinal='6' />
                  <column datatype='real' name='value' ordinal='7' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='total_merged (Output)' inline='true' name='federated.03vo4a011knwg81eqtcyq053pp7r' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Output' name='excel-direct.06mp5y21f80umu1e1ou1m1nvfe0g'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Checkout/Downloads/Output.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.06mp5y21f80umu1e1ou1m1nvfe0g' name='total_merged' table='[total_merged$]' type='table'>
          <columns gridOrigin='A1:I10001:no:A1:I10001:0' header='yes' outcome='2'>
            <column datatype='string' name='Type_of_data' ordinal='0' />
            <column datatype='string' name='Year' ordinal='1' />
            <column datatype='string' name='pc_code' ordinal='2' />
            <column datatype='string' name='pc_description' ordinal='3' />
            <column datatype='string' name='unit' ordinal='4' />
            <column datatype='integer' name='country_code' ordinal='5' />
            <column datatype='string' name='country_name' ordinal='6' />
            <column datatype='string' name='quantity' ordinal='7' />
            <column datatype='real' name='value' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.06mp5y21f80umu1e1ou1m1nvfe0g' name='total_merged' table='[total_merged$]' type='table'>
          <columns gridOrigin='A1:I10001:no:A1:I10001:0' header='yes' outcome='2'>
            <column datatype='string' name='Type_of_data' ordinal='0' />
            <column datatype='string' name='Year' ordinal='1' />
            <column datatype='string' name='pc_code' ordinal='2' />
            <column datatype='string' name='pc_description' ordinal='3' />
            <column datatype='string' name='unit' ordinal='4' />
            <column datatype='integer' name='country_code' ordinal='5' />
            <column datatype='string' name='country_name' ordinal='6' />
            <column datatype='string' name='quantity' ordinal='7' />
            <column datatype='real' name='value' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[total_merged]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I10001:no:A1:I10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type_of_data</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Type_of_data]</local-name>
            <parent-name>[total_merged]</parent-name>
            <remote-alias>Type_of_data</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[total!merged_BB70228BDA3648C68395DE3554C63005]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[total_merged]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[total!merged_BB70228BDA3648C68395DE3554C63005]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pc_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[pc_code]</local-name>
            <parent-name>[total_merged]</parent-name>
            <remote-alias>pc_code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[total!merged_BB70228BDA3648C68395DE3554C63005]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pc_description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[pc_description]</local-name>
            <parent-name>[total_merged]</parent-name>
            <remote-alias>pc_description</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[total!merged_BB70228BDA3648C68395DE3554C63005]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit</remote-name>
            <remote-type>130</remote-type>
            <local-name>[unit]</local-name>
            <parent-name>[total_merged]</parent-name>
            <remote-alias>unit</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[total!merged_BB70228BDA3648C68395DE3554C63005]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[country_code]</local-name>
            <parent-name>[total_merged]</parent-name>
            <remote-alias>country_code</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[total!merged_BB70228BDA3648C68395DE3554C63005]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country_name]</local-name>
            <parent-name>[total_merged]</parent-name>
            <remote-alias>country_name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[total!merged_BB70228BDA3648C68395DE3554C63005]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quantity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[quantity]</local-name>
            <parent-name>[total_merged]</parent-name>
            <remote-alias>quantity</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[total!merged_BB70228BDA3648C68395DE3554C63005]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[value]</local-name>
            <parent-name>[total_merged]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[total!merged_BB70228BDA3648C68395DE3554C63005]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Import_Sum' datatype='real' name='[Calculation_390687296755720193]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(IF[Type_of_data]==&apos;Import_merg&apos; THEN [value] END)' />
      </column>
      <column caption='Export_sum' datatype='real' name='[Calculation_390687296756154370]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(IF[Type_of_data]==&apos;Export_data&apos; THEN [value] END)' />
      </column>
      <column caption='Trade_off' datatype='real' name='[Calculation_390687296756457475]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_390687296756154370]-[Calculation_390687296755720193]' />
      </column>
      <column caption='Total Trade' datatype='real' name='[Calculation_390687296765235204]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_390687296756154370]+[Calculation_390687296755720193]' />
      </column>
      <column caption='Type of data' datatype='string' name='[Type_of_data]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='total_merged' datatype='table' name='[__tableau_internal_object_id__].[total!merged_BB70228BDA3648C68395DE3554C63005]' role='measure' type='quantitative' />
      <column caption='Country Code' datatype='integer' name='[country_code]' role='dimension' type='ordinal' />
      <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Pc Code' datatype='string' name='[pc_code]' role='dimension' type='nominal' />
      <column caption='Pc Description' datatype='string' name='[pc_description]' role='dimension' type='nominal' />
      <column caption='Quantity' datatype='string' name='[quantity]' role='dimension' type='nominal' />
      <column caption='Unit' datatype='string' name='[unit]' role='dimension' type='nominal' />
      <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
      <column-instance column='[pc_description]' derivation='None' name='[none:pc_description:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_390687296755720193]' derivation='User' name='[usr:Calculation_390687296755720193:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_390687296756154370]' derivation='User' name='[usr:Calculation_390687296756154370:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_390687296756457475]' derivation='User' name='[usr:Calculation_390687296756457475:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_390687296765235204]' derivation='User' name='[usr:Calculation_390687296765235204:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.03vo4a011knwg81eqtcyq053pp7r].[usr:Calculation_390687296756154370:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.03vo4a011knwg81eqtcyq053pp7r].[usr:Calculation_390687296765235204:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.03vo4a011knwg81eqtcyq053pp7r].[usr:Calculation_390687296756457475:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.03vo4a011knwg81eqtcyq053pp7r].[usr:Calculation_390687296755720193:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:pc_description:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Ac, Refrigeration Machnry Etc&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Accumulators And Batteries&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='total_merged' id='total!merged_BB70228BDA3648C68395DE3554C63005'>
            <properties context=''>
              <relation connection='excel-direct.06mp5y21f80umu1e1ou1m1nvfe0g' name='total_merged' table='[total_merged$]' type='table'>
                <columns gridOrigin='A1:I10001:no:A1:I10001:0' header='yes' outcome='2'>
                  <column datatype='string' name='Type_of_data' ordinal='0' />
                  <column datatype='string' name='Year' ordinal='1' />
                  <column datatype='string' name='pc_code' ordinal='2' />
                  <column datatype='string' name='pc_description' ordinal='3' />
                  <column datatype='string' name='unit' ordinal='4' />
                  <column datatype='integer' name='country_code' ordinal='5' />
                  <column datatype='string' name='country_name' ordinal='6' />
                  <column datatype='string' name='quantity' ordinal='7' />
                  <column datatype='real' name='value' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Exported products from India to G7'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Exported products from India to G7</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Exported_data (Export_Data)' name='federated.10iza9t0lel4br1gtoyvh0mhvney' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.10iza9t0lel4br1gtoyvh0mhvney'>
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[pc_description]' derivation='None' name='[none:pc_description:nk]' pivot='key' type='nominal' />
            <column caption='Pc Description' datatype='string' name='[pc_description]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:country_name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;U K&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;U S A&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:pc_description:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([value])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:pc_description:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:country_name:nk]</column>
            <column>[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:pc_description:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:country_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10iza9t0lel4br1gtoyvh0mhvney].[sum:value:qk]</rows>
        <cols>[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:pc_description:nk]</cols>
      </table>
      <simple-id uuid='{EB0B3162-5217-42F0-AEC7-D22A7887DA97}' />
    </worksheet>
    <worksheet name='Highest Imports are from China'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Highest Imports are from China</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Import_data (Import_merge)' name='federated.1owrbxe0ihuycu1a3hme01t2q3wd' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1owrbxe0ihuycu1a3hme01t2q3wd'>
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:country_name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([value])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:country_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:country_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[Longitude (generated)]' field-type='quantitative' max='17720230.073105536' min='-20939042.386581242' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[Latitude (generated)]' field-type='quantitative' max='14418452.244294437' min='-7890474.2952506617' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[sum:value:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:country_name:nk]' />
              <color column='[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[sum:value:qk]' />
              <geometry column='[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[Latitude (generated)]</rows>
        <cols>[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{2EBFC14B-221B-4F62-8885-A7B2F4B1903F}' />
    </worksheet>
    <worksheet name='Import VS Export'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Import VS Export</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='total_merged (Output)' name='federated.03vo4a011knwg81eqtcyq053pp7r' />
          </datasources>
          <datasource-dependencies datasource='federated.03vo4a011knwg81eqtcyq053pp7r'>
            <column caption='Type of data' datatype='string' name='[Type_of_data]' role='dimension' type='nominal' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Type_of_data]' derivation='None' name='[none:Type_of_data:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[pc_description]' derivation='None' name='[none:pc_description:nk]' pivot='key' type='nominal' />
            <column caption='Pc Description' datatype='string' name='[pc_description]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.03vo4a011knwg81eqtcyq053pp7r].[none:pc_description:nk]'>
            <groupfilter function='member' level='[none:pc_description:nk]' member='&quot;Accumulators And Batteries&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.03vo4a011knwg81eqtcyq053pp7r].[none:pc_description:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.03vo4a011knwg81eqtcyq053pp7r].[none:Type_of_data:nk]' value='107' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.03vo4a011knwg81eqtcyq053pp7r].[none:pc_description:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.03vo4a011knwg81eqtcyq053pp7r].[sum:value:qk]</rows>
        <cols>([federated.03vo4a011knwg81eqtcyq053pp7r].[none:Year:nk] / [federated.03vo4a011knwg81eqtcyq053pp7r].[none:Type_of_data:nk])</cols>
      </table>
      <simple-id uuid='{24F5D380-C7C1-4026-9F03-6D637D0526BA}' />
    </worksheet>
    <worksheet name='Products Exported Yearly'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Products Exported from India Yearly</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Exported_data (Export_Data)' name='federated.10iza9t0lel4br1gtoyvh0mhvney' />
          </datasources>
          <datasource-dependencies datasource='federated.10iza9t0lel4br1gtoyvh0mhvney'>
            <column caption='Year1' datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[pc_description]' derivation='None' name='[none:pc_description:nk]' pivot='key' type='nominal' />
            <column caption='Pc Description' datatype='string' name='[pc_description]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:Year:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;2014&quot;' />
              <groupfilter function='member' level='[none:Year:nk]' member='&quot;2016&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:Year:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.10iza9t0lel4br1gtoyvh0mhvney].[sum:value:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.10iza9t0lel4br1gtoyvh0mhvney].[sum:value:qk]' />
              <text column='[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:pc_description:nk]' />
              <color column='[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:Year:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E19FEF18-BC6F-4BC8-8931-0F320789C62A}' />
    </worksheet>
    <worksheet name='Products Imported Yearly'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Products Imported Yearly to India</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Import_data (Import_merge)' name='federated.1owrbxe0ihuycu1a3hme01t2q3wd' />
          </datasources>
          <datasource-dependencies datasource='federated.1owrbxe0ihuycu1a3hme01t2q3wd'>
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[pc_description]' derivation='None' name='[none:pc_description:nk]' pivot='key' type='nominal' />
            <column caption='Pc Description' datatype='string' name='[pc_description]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:Year:nk]'>
            <groupfilter function='member' level='[none:Year:nk]' member='&quot;2014&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:Year:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[sum:value:qk]' />
              <text column='[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:pc_description:nk]' />
              <color column='[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:Year:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0886ECAF-15CB-4967-A158-301505091139}' />
    </worksheet>
    <worksheet name='Products Imported from G7'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Products Imported from G7</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Import_data (Import_merge)' name='federated.1owrbxe0ihuycu1a3hme01t2q3wd' />
          </datasources>
          <datasource-dependencies datasource='federated.1owrbxe0ihuycu1a3hme01t2q3wd'>
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[pc_description]' derivation='None' name='[none:pc_description:nk]' pivot='key' type='nominal' />
            <column caption='Pc Description' datatype='string' name='[pc_description]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:country_name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;U K&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;U S A&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:pc_description:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([value])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:pc_description:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:country_name:nk]</column>
            <column>[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:pc_description:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:pc_description:nk]' />
              <lod column='[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[sum:value:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[sum:value:qk]</rows>
        <cols>[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:country_name:nk]</cols>
      </table>
      <simple-id uuid='{42DF1D13-D08B-4E6A-A3FD-BC46EAFB6C58}' />
    </worksheet>
    <worksheet name='Products exported from Countries'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Products Exported to other Countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Exported_data (Export_Data)' name='federated.10iza9t0lel4br1gtoyvh0mhvney' />
          </datasources>
          <datasource-dependencies datasource='federated.10iza9t0lel4br1gtoyvh0mhvney'>
            <column-instance column='[value]' derivation='Avg' name='[avg:value:qk]' pivot='key' type='quantitative' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[pc_description]' derivation='None' name='[none:pc_description:nk]' pivot='key' type='nominal' />
            <column caption='Pc Description' datatype='string' name='[pc_description]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:pc_description:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([value])' function='order' user:ui-marker='order'>
                <groupfilter function='member' level='[none:pc_description:nk]' member='&quot;Ayush And Herbal Products&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:pc_description:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.10iza9t0lel4br1gtoyvh0mhvney].[sum:value:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='size-bar' field='[federated.10iza9t0lel4br1gtoyvh0mhvney].[avg:value:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.10iza9t0lel4br1gtoyvh0mhvney].[avg:value:qk]' />
              <color column='[federated.10iza9t0lel4br1gtoyvh0mhvney].[sum:value:qk]' />
              <text column='[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:country_name:nk]' />
              <text column='[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:pc_description:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{6D173E7D-9D1B-45EE-B631-9E15C552824E}' />
    </worksheet>
    <worksheet name='Top 10 goods exported from India'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Top 10 goods exported from India</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Exported_data (Export_Data)' name='federated.10iza9t0lel4br1gtoyvh0mhvney' />
          </datasources>
          <datasource-dependencies datasource='federated.10iza9t0lel4br1gtoyvh0mhvney'>
            <column caption='Year1' datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[pc_description]' derivation='None' name='[none:pc_description:nk]' pivot='key' type='nominal' />
            <column caption='Pc Description' datatype='string' name='[pc_description]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:Year:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end'>
              <groupfilter direction='DESC' expression='AVG([value])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Year:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:pc_description:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([value])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:pc_description:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:Year:nk]</column>
            <column>[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:pc_description:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:pc_description:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.10iza9t0lel4br1gtoyvh0mhvney].[sum:value:qk]</rows>
        <cols>[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:pc_description:nk]</cols>
      </table>
      <simple-id uuid='{10C464BB-9573-4770-B3F6-1933E5A38B47}' />
    </worksheet>
    <worksheet name='Top 10 imported products'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Top 10 Products Imported to India</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Import_data (Import_merge)' name='federated.1owrbxe0ihuycu1a3hme01t2q3wd' />
          </datasources>
          <datasource-dependencies datasource='federated.1owrbxe0ihuycu1a3hme01t2q3wd'>
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[pc_description]' derivation='None' name='[none:pc_description:nk]' pivot='key' type='nominal' />
            <column caption='Pc Description' datatype='string' name='[pc_description]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:Year:nk]'>
            <groupfilter function='member' level='[none:Year:nk]' member='&quot;2016&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:pc_description:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([value])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:pc_description:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:Year:nk]</column>
            <column>[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:pc_description:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:pc_description:nk]' value='65' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:pc_description:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[sum:value:qk]</rows>
        <cols>[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:pc_description:nk]</cols>
      </table>
      <simple-id uuid='{88693588-45EC-4787-B0A9-50E4D560DBBA}' />
    </worksheet>
    <worksheet name='Trade_off'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Trade_Off based on Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='total_merged (Output)' name='federated.03vo4a011knwg81eqtcyq053pp7r' />
          </datasources>
          <datasource-dependencies datasource='federated.03vo4a011knwg81eqtcyq053pp7r'>
            <column caption='Import_Sum' datatype='real' name='[Calculation_390687296755720193]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(IF[Type_of_data]==&apos;Import_merg&apos; THEN [value] END)' />
            </column>
            <column caption='Export_sum' datatype='real' name='[Calculation_390687296756154370]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(IF[Type_of_data]==&apos;Export_data&apos; THEN [value] END)' />
            </column>
            <column caption='Trade_off' datatype='real' name='[Calculation_390687296756457475]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_390687296756154370]-[Calculation_390687296755720193]' />
            </column>
            <column caption='Total Trade' datatype='real' name='[Calculation_390687296765235204]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_390687296756154370]+[Calculation_390687296755720193]' />
            </column>
            <column caption='Type of data' datatype='string' name='[Type_of_data]' role='dimension' type='nominal' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_390687296755720193]' derivation='User' name='[usr:Calculation_390687296755720193:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_390687296756154370]' derivation='User' name='[usr:Calculation_390687296756154370:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_390687296756457475]' derivation='User' name='[usr:Calculation_390687296756457475:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_390687296765235204]' derivation='User' name='[usr:Calculation_390687296765235204:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.03vo4a011knwg81eqtcyq053pp7r].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.03vo4a011knwg81eqtcyq053pp7r].[usr:Calculation_390687296756154370:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.03vo4a011knwg81eqtcyq053pp7r].[usr:Calculation_390687296755720193:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.03vo4a011knwg81eqtcyq053pp7r].[usr:Calculation_390687296756457475:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.03vo4a011knwg81eqtcyq053pp7r].[usr:Calculation_390687296765235204:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.03vo4a011knwg81eqtcyq053pp7r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.03vo4a011knwg81eqtcyq053pp7r].[usr:Calculation_390687296756154370:qk]&quot;</bucket>
              <bucket>&quot;[federated.03vo4a011knwg81eqtcyq053pp7r].[usr:Calculation_390687296755720193:qk]&quot;</bucket>
              <bucket>&quot;[federated.03vo4a011knwg81eqtcyq053pp7r].[usr:Calculation_390687296756457475:qk]&quot;</bucket>
              <bucket>&quot;[federated.03vo4a011knwg81eqtcyq053pp7r].[usr:Calculation_390687296765235204:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.03vo4a011knwg81eqtcyq053pp7r].[none:country_name:nk]'>
            <groupfilter function='member' level='[none:country_name:nk]' member='&quot;China P Rp&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.03vo4a011knwg81eqtcyq053pp7r].[:Measure Names]</column>
            <column>[federated.03vo4a011knwg81eqtcyq053pp7r].[none:country_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.03vo4a011knwg81eqtcyq053pp7r].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.03vo4a011knwg81eqtcyq053pp7r].[Multiple Values]</rows>
        <cols>([federated.03vo4a011knwg81eqtcyq053pp7r].[none:Year:nk] / [federated.03vo4a011knwg81eqtcyq053pp7r].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{322ACE3A-0F33-4771-BC07-F504A120DDC1}' />
    </worksheet>
    <worksheet name='Yearly Change in Exports for Products'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Exported_data (Export_Data)' name='federated.10iza9t0lel4br1gtoyvh0mhvney' />
          </datasources>
          <datasource-dependencies datasource='federated.10iza9t0lel4br1gtoyvh0mhvney'>
            <column caption='Year1' datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[pc_description]' derivation='None' name='[none:pc_description:nk]' pivot='key' type='nominal' />
            <column caption='Pc Description' datatype='string' name='[pc_description]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:pc_description:nk]'>
            <groupfilter function='member' level='[none:pc_description:nk]' member='&quot;Aluminium, Products Of Aluminm&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:pc_description:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:Year:nk]' value='144' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.10iza9t0lel4br1gtoyvh0mhvney].[sum:value:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10iza9t0lel4br1gtoyvh0mhvney].[sum:value:qk]</rows>
        <cols>[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:Year:nk]</cols>
      </table>
      <simple-id uuid='{ABBBD1F9-318B-437F-8867-80842BB2FB16}' />
    </worksheet>
    <worksheet name='Yearly Change in Importing of Products'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Yearly Change in Import of Products</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Import_data (Import_merge)' name='federated.1owrbxe0ihuycu1a3hme01t2q3wd' />
          </datasources>
          <datasource-dependencies datasource='federated.1owrbxe0ihuycu1a3hme01t2q3wd'>
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[pc_description]' derivation='None' name='[none:pc_description:nk]' pivot='key' type='nominal' />
            <column caption='Pc Description' datatype='string' name='[pc_description]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:pc_description:nk]'>
            <groupfilter function='member' level='[none:pc_description:nk]' member='&quot;Auto Components/Parts&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:pc_description:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:Year:nk]' value='102' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:pc_description:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[sum:value:qk]</rows>
        <cols>[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:Year:nk]</cols>
      </table>
      <simple-id uuid='{8C01901C-1CC7-4A32-9E00-22DCE4B18225}' />
    </worksheet>
    <worksheet name='Yearly Trends based on Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Yearly Trends based on Country and  Products Exported</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Exported_data (Export_Data)' name='federated.10iza9t0lel4br1gtoyvh0mhvney' />
          </datasources>
          <datasource-dependencies datasource='federated.10iza9t0lel4br1gtoyvh0mhvney'>
            <column caption='Year1' datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[pc_description]' derivation='None' name='[none:pc_description:nk]' pivot='key' type='nominal' />
            <column caption='Pc Description' datatype='string' name='[pc_description]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:country_name:nk]'>
            <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Afghanistan&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:pc_description:nk]'>
            <groupfilter function='member' level='[none:pc_description:nk]' member='&quot;Bicycle And Parts&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:country_name:nk]</column>
            <column>[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:pc_description:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:Year:nk]' value='139' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:pc_description:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10iza9t0lel4br1gtoyvh0mhvney].[sum:value:qk]</rows>
        <cols>[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:Year:nk]</cols>
      </table>
      <simple-id uuid='{10941097-6E34-47F3-8874-147C0F13900E}' />
    </worksheet>
    <worksheet name='Yearly import based on country'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Yearly Import Trends based on Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Import_data (Import_merge)' name='federated.1owrbxe0ihuycu1a3hme01t2q3wd' />
          </datasources>
          <datasource-dependencies datasource='federated.1owrbxe0ihuycu1a3hme01t2q3wd'>
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[pc_description]' derivation='None' name='[none:pc_description:nk]' pivot='key' type='nominal' />
            <column caption='Pc Description' datatype='string' name='[pc_description]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:country_name:nk]'>
            <groupfilter function='member' level='[none:country_name:nk]' member='&quot;U S A&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:pc_description:nk]'>
            <groupfilter function='member' level='[none:pc_description:nk]' member='&quot;Accumulators And Batteries&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:country_name:nk]</column>
            <column>[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:pc_description:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:Year:nk]' value='102' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:pc_description:nk]' />
              <lod column='[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[sum:value:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[sum:value:qk]</rows>
        <cols>[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:Year:nk]</cols>
      </table>
      <simple-id uuid='{002BDDD3-AFDD-46D5-BB58-4553ADF66331}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Final Project' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='142' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' preset-index='9' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='1037' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone fixed-size='91' h='9440' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='1867' />
            <zone h='87863' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='11307'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='        Introduction ' captured-sheet='First_Page' id='1' />
                  <story-point caption='Top 10 Goods Exported from India' captured-sheet='Top 10 goods exported from India' id='2' />
                  <story-point caption='Products Exported To    Countries ' captured-sheet='Products exported from Countries' id='3' />
                  <story-point caption='Products Exported Yearly' captured-sheet='Products Exported Yearly' id='4' />
                  <story-point caption='Products Exported from India to Global 7' captured-sheet='Exported products from India to G7' id='5' />
                  <story-point caption='Yearly Change in Exports for Products' captured-sheet='Yearly Change in Exports for Products' id='6' />
                  <story-point caption='Yearly Trends based on Country' captured-sheet='Yearly Trends based on Country' id='7' />
                  <story-point caption='Top 10 Imported Products' captured-sheet='Top 10 imported products' id='8' />
                  <story-point caption='Products Imported Yearly' captured-sheet='Products Imported Yearly' id='9' />
                  <story-point caption='Products Imported from Global 7' captured-sheet='Products Imported from G7' id='10' />
                  <story-point caption='Yearly Change in Importing of Goods' captured-sheet='Yearly Change in Importing of Products' id='11' />
                  <story-point caption='Yearly Import based on Country' captured-sheet='Yearly import based on country' id='12' />
                  <story-point caption='Highest Imports from China' captured-sheet='Highest Imports are from China' id='13' />
                  <story-point caption='Imports VS Exports' captured-sheet='Import VS Export' id='14' />
                  <story-point caption='Import - Export Trade- Off' captured-sheet='Trade_off' id='15' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='18672' id='6' story-point-id='1' type-v2='text' w='95965' x='2067' y='17012'>
          <formatted-text>
            <run bold='true' fontalignment='0' fontcolor='#202124' fontname='Roboto,arial,sans-serif'>What is Importing and Exporting of Goods?</run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#202124' fontname='Roboto,arial,sans-serif'>The total imports, exports, and balance of foreign trade are presented as summaries of goods and services. Exporting refers to the selling of goods and services from the home country to a foreign nation. Whereas, importing refers to the purchase of foreign products and bringing them into one&apos;s home country.</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' h='10373' id='7' story-point-id='1' type-v2='text' w='20079' x='78150' y='88174'>
          <formatted-text>
            <run bold='true' fontcolor='#000000'>By,</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#000000'>Rishi Bamb</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#000000'>SJSU Id - 015951013</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' h='10477' id='8' story-point-id='1' type-v2='text' w='96063' x='1969' y='36100'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='16'>Indian Imports &amp; Exports</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{DC9B7C73-1403-4345-B45D-E5CA6CBFA845}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='First_Page'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='26'>Indian Imports &amp; Exports</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone h='98000' id='3' is-scaled='1' param='C:/Users/Checkout/Downloads/import_export_image.jpg' type-v2='bitmap' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontsize='26'>Indian Imports &amp; Exports</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='9' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='8' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' is-scaled='1' param='C:/Users/Checkout/Downloads/import_export_image.jpg' type-v2='bitmap' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{63155CB9-BD76-4EC2-BA76-CD7683B4E2FA}' />
    </dashboard>
  </dashboards>
  <windows source-height='34'>
    <window class='worksheet' name='Top 10 goods exported from India'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:Year:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:pc_description:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:Year:nk]</field>
            <field>[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:pc_description:nk]</field>
            <field>[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:value:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{62625126-A813-4914-A513-AE6F471815F5}' />
    </window>
    <window class='worksheet' name='Products exported from Countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:pc_description:nk]' type='highlighter' />
            <card mode='dropdown' param='[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:pc_description:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.10iza9t0lel4br1gtoyvh0mhvney].[sum:value:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:Year:nk]</field>
            <field>[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:pc_description:nk]</field>
            <field>[federated.10iza9t0lel4br1gtoyvh0mhvney].[sum:value:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CCD551C9-640E-460B-B125-8841927EBCF7}' />
    </window>
    <window class='worksheet' name='Products Exported Yearly'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:Year:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:Year:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:Year:nk]</field>
            <field>[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:pc_description:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6B501C4C-6662-49DB-9002-E74C9C7DF0BF}' />
    </window>
    <window class='worksheet' name='Exported products from India to G7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:pc_description:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:country_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:country_name:nk]</field>
            <field>[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:pc_description:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7D4D1353-5D4C-4839-81CF-AB6AD8C8C7F9}' />
    </window>
    <window class='worksheet' name='Yearly Change in Exports for Products'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:pc_description:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:Year:nk]</field>
            <field>[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:pc_description:nk]</field>
            <field>[federated.10iza9t0lel4br1gtoyvh0mhvney].[sum:value:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{92588E7E-F437-4487-ABDB-28E777B49EC8}' />
    </window>
    <window class='worksheet' name='Yearly Trends based on Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:pc_description:nk]' type='filter' />
            <card mode='dropdown' param='[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:country_name:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:pc_description:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:Year:nk]</field>
            <field>[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:country_name:nk]</field>
            <field>[federated.10iza9t0lel4br1gtoyvh0mhvney].[none:pc_description:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{243BD756-B959-4DE2-913C-D7E9DE12CA63}' />
    </window>
    <window class='worksheet' name='Top 10 imported products'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:Year:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:pc_description:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:Year:nk]</field>
            <field>[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:pc_description:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{434C0FCA-28EC-4060-9B2C-0DD905DDDEA7}' />
    </window>
    <window class='worksheet' name='Products Imported Yearly'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:Year:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:Year:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:Year:nk]</field>
            <field>[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:pc_description:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0B9E0C10-6A78-40C7-9DDB-042B05DFFF2E}' />
    </window>
    <window class='worksheet' name='Products Imported from G7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:pc_description:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:pc_description:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9BF071E2-2F80-4B0B-9E94-51D075428237}' />
    </window>
    <window class='worksheet' name='Yearly Change in Importing of Products'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:pc_description:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:pc_description:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:Year:nk]</field>
            <field>[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:pc_description:nk]</field>
            <field>[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:unit:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8298C253-4534-469B-8B74-872D3515F461}' />
    </window>
    <window class='worksheet' name='Yearly import based on country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:country_name:nk]' type='filter' />
            <card mode='dropdown' param='[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:pc_description:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:Year:nk]</field>
            <field>[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:country_name:nk]</field>
            <field>[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[none:pc_description:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1E7864F1-9EB7-4270-A136-7C0D62963A98}' />
    </window>
    <window class='worksheet' name='Highest Imports are from China'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[sum:value:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1owrbxe0ihuycu1a3hme01t2q3wd].[sum:value:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{960DA42C-7830-4027-8F11-B0040B2542BE}' />
    </window>
    <window class='worksheet' name='Import VS Export'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.03vo4a011knwg81eqtcyq053pp7r].[none:pc_description:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.03vo4a011knwg81eqtcyq053pp7r].[none:pc_description:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03vo4a011knwg81eqtcyq053pp7r].[none:Type_of_data:nk]</field>
            <field>[federated.03vo4a011knwg81eqtcyq053pp7r].[none:Year:nk]</field>
            <field>[federated.03vo4a011knwg81eqtcyq053pp7r].[none:pc_description:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4FC1DDCB-F360-48C1-B305-6FC2D015F8FA}' />
    </window>
    <window class='worksheet' name='Trade_off'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.03vo4a011knwg81eqtcyq053pp7r].[none:country_name:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.03vo4a011knwg81eqtcyq053pp7r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03vo4a011knwg81eqtcyq053pp7r].[:Measure Names]</field>
            <field>[federated.03vo4a011knwg81eqtcyq053pp7r].[none:Year:nk]</field>
            <field>[federated.03vo4a011knwg81eqtcyq053pp7r].[none:country_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3BC4B2BD-DABF-4786-BD59-CBAC10E92867}' />
    </window>
    <window class='dashboard' name='First_Page'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{76235AD7-E6DC-4964-AD00-65FB64CCC182}' />
    </window>
    <window class='dashboard' maximized='true' name='Final Project'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{3FF15F23-C3AD-4C0A-A990-CC3012ED0733}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Exported products from India to G7' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Final Project' width='192'>
      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
      Wj+mWQcGgwTW9zj92BA5nfNoc4vLRUHrxoye+0aGgyHLxT5icoWNC+9m8fAWorMk8oz/7m8/
      x+e+cMZvfe42V648xrKD6xvXsW8+QqYCV+Soes500DJrBeNh5MblwHTDU1aRrY3IxWnDaSlJ
      tWKSe37p8SeZPfY8//jXf4O2rCkP5iS7j7He3+fC9gXSwRbHp6+xOWgo54HNazlbg8uMhjOU
      cAgbQTuiFEyvPE7cfjshONK2JBRjsu2nmb70cdKrT3Dn1i2efMeX85lXPsnLH/9XePkCjw5W
      bIwanpml/MrG36JLDGayhU8Nc9shF2usCwyJjDc2WdpIHG0QNIgQaWzAxcAkCHaLhKrpOKhr
      TsyXAMFGSzSBpfdMlMaqSOMct+cll3PD1UHvrZj5wOurhr2yYW77hrNCa6aJIteK0xDA94cS
      JAMhGQ5yTpuWPzg+PU8fSUzoWLQNxXiM6xoWrmFedWg8ejhm7RzPXNxlVVekqSY6uN922K5D
      CUFQmgLBWGvyEGnGE4JKiMEx9YHYVBxJzVFdsj7cQ06n+L1HFMMJIQSc88giowkRdIJKInY1
      RzYdC6MQbQkmgzQnNhW0cwgeERUoRRgNsOkQHTx5aAgB0t0pg9M5XXkV6SqOq0c8eBR5ZmWp
      gsXiOS2X2DTn+OCMrikIImNWBoq0Q+eRcrlCDcc4qYnzBWJ2xmp2iIqWarFAqpwkSZABZqeP
      uHj5GWL3Kp/53B4/+E2Gv3Dht1CJpqzgwz/wNggpSVaxeLSJe/DnEOOMqODLb36OJ5+rELpg
      flbzdX/4NIthhu06nrz+gOr+Q7Kbb+PKl2Xc/vAci6Xd20ONRzz9Ve9lfusWKnqevi55WNd8
      +fveizlbclh/mig183rJzugJtL9HoiJ5d8Si1jRHrzO6/g7c6pR5MiTcuwuDDW7t3cPbPUbF
      DjakDIczxgXIKkdUS6g1tmqgLhFS4aREDDcoU4M6O0EnEhZrfJIjB4PzuI2hVZFRjDw/zbmb
      Co6OZm89AFup4qwOSBc5sh1jrdhINEoI9puOLywqLuYJSkhyKXj7dIQDyq7rHZZCM29bLmiF
      VZK9qmbuJFIrFrEPOF3NCoiuT0SJhOMs5bhu0UWOUYrrhUN1njJ4gu/4/MN7aGUwoyG11kzq
      mlRoBhtDtGtZ2N6fNDQwjhGTGiYq4W7TciqGbAXPie8Y7l7EOkcoBkCgyXNEsHRNdR4nCtho
      kVlOGA4Q0RFt2j8Y14GISJURB0nvApW9b39eTHjSOGK95vp3fh/56QGDV1+jDEsK2XLzmfew
      MSy4c3vMU+894eVPpEyvPcETTz7FS69+gdt3OnYe28G1e1RtrwSvbtwk2/TQOZaJgMuXmRx/
      nNY+znh6ndIbRJC0LbTVGrN5kXJt+ZUXZ/zzH7nBxjQB2dcuXt7wONuQGE93NoDxpC+n9RE1
      HJEO+wT0zpWMG6ngT2WKzjPkE1dJv3CHbbvg2rMdL/2eRHnDky+0/OmdMZ/68O+xfLSHLgz3
      41UWdc1Hf/VDrO895N3fNWRZdqS6Q8YZCkErN7BnL3FylHLh5tO0baAtV2ylKYsusH11QGol
      bSZZ2StoNcLV92jTAY/0NuQ7feLOWcTla6AkSZLipSJB4rsOW6+QQRLXK5brCjEaofDs5Bn5
      MGfpFIXJqLembz0AlQ+snQUiMkpW3tF5ydhIKq1QWWDeWroYWNvIZmrIjEIDt06XaKVZe8uF
      PCcTgkJrQtOhEsNZVWN9xLuG+y7iosTOznqx6rwWxEjQQWCiYyjB6oTh9kUGWmJDhGpN5Syd
      tMyPagiC6aDgtFpxUK5IEoOOkiDBCSiFAiWR6yWEgE0yhhFQmrheEEJEIyhEwEWLD55uvTxP
      bPVpLUEkegsmIyRJD359hNUpsam5PxzxXDcnNh3i7P/k4Uc9u/YS93AsXUr50ueRaYLyCbPj
      6wzHCw7v3aa+9zky0dB5RdeuMOmELF2zNYk8WC/Y3XyCi3/lu6l+57cZLM7YU8/z5JVnWC8W
      jPIGk+5y3C4pRlusKstrRwuOyhEv3btOdjwg0567Byc8eWFG0yoSLbl9OOfqFQVSE1zF/p86
      1i8O6YIiCsv3j+/wty5uYYTA+iX/w8tLrh++TrZxxsbNMe7NlLtHlzGmxs47mnmF6ALtfEbI
      huhsgkuPGQ88afR4oXFRkqoVKnp8vMDmoCKGyGQoWC8rDnSC9B0XkntUxxKh1gS35mQ2YzAe
      M0hrmmob4W3vnULA8R4hRjolEdkQnya4LCemhqg0iRpyTQfud5YuCE69QLWevFmyq+C6Tt96
      ALoYuZQlVD6wco7jquNO45hZz65RbGcpo0Symygq13vofQgclDWlD7hgOSgrjuqO07bhQp7h
      uprTg0PqrEB6RwIs2rbnzHe30UrgXWCSZ5xYx5CIcw7Ztkjfc/naNVivuZYVHCUpjkjTtrQ6
      pTOKobeYyQZeSVrbctp2hKpDpQbOFpTFCBMcA+cxaUbTdhQapHOIpmIVBFEpVJYSo4C67DPQ
      001YrxFCE7Oc2KyhXJ+HWhPQjtI6QpqhlOG1T0SKYcGUUy5tzPjM7DIj7nCavRubFOzfu4sd
      jJi3HTIfM5SO8WiG1hqEoukMw1zSHp7SDibMPv1x0tmMeDwjrM4oD99kUTv8wwds3XyBs0dv
      cvM938zBw0N+9UN3+MsfeDtf9cIUVIpJEh6/IMiTBiMF2jguXh1wedcTwgAlaw7WW/g3W2Kh
      KLoJN69qNp+CgCT4jA/cUHzmDz7J2UXDxac9/kM1XduwQhCrmjDOCdUce3KGnbbUQbMYFJTL
      BWXXcDSTTKpD5FhwcrrEdyvuH+yh9u5gZc58/x4bwrNuPJ/7vCRBIEYJdbNiXSUMhWBtNjks
      U8Q4kmlFkxWIMEBFj/MQcXRNCeUanfU2C+cDr1tQziIRuMVD9pJuOJ1QAAAgAElEQVQc7WoO
      JxuQ1G89AK+vax4syvOAdORqUbCbBd4xyXlzWSOj53PLitY61uuaTEZOO8dGlnHgIsNQ03pN
      Ky1Xc8OZC+zmI65PNrlVVhg94LisuJomjIZDXAgsXE+3vn58gkgTNgdDholi31ny4YgYPEdd
      pKxXnEjFwMAqSLzSyHpNvfR0XUnIUrRJmIfIMMuI4zG26xDCk3UdReiwLrAsV7RKQ7OGjS3k
      cACnZ1A6fN2DbREkZBnq+ABf5CjX4O49RLgOhmNimiHWK8iHPNp5jIP1nyCMhwhnyYiq2WP1
      yqe4ID5FU824kn+a8uw2+0NJ4T01kkU55ySe8W9+JfC25x+yWCmGecP9h4HTiWe/PKb66B+R
      +Y5T0bL8/36WD3zNuwhqxGg04k9++VeY7lyhqloO7n2Wj99yfMtXjXj9/hohe+DeVgvGw96K
      pIjcPqmYn+bM7YKRdjx60JLPNgjHDkLJrCx5XHu60Ge5p0SO9h3LNUw3Tnj7NzXsTk9ZlIrp
      qOHzt2d8xL+T4/GTSN+QZClqMufo7Hd5dPCQshuyqiRv3Dnk47/5Bie//zG8ixRJhnMzPnw2
      4MWLT+JtYLKzSdtVzF7p+IWHF1g7wXg0wcglZ++7gL887IsV5jP86pRQLYlCwngTkeZIpYky
      kAhJwBMEjIcDiuGIpp7guo5FY7DWsZF8iTzA9dSQDlIW3lF2gfurhqmSHIaODQOLtuOFUcHK
      BboiZ+UCTwIHXcs7hyNK25KYlKWznLSOp1Tg0aLk1sIhpUSHiqt5wWlVcfv4Dtd2thgieGOx
      YtNZBjJyOLdEEdhEE1XLcV2zlWXsTkYsmgZnW/K6pTUSlEGNCkbOMF/NsNZSdA3r1ZKwdRER
      PInvSHVKmeRUnUXnoNsa5zycHOJbC1IiijHI87UnTYipJgiDcAE/GMFoQvQddA10DkYDWC5Q
      8Zj/8HsCdTNkOQ+kuaFSno/83hGXrlzkNBtxMW94AGyXLZcfGzHUGTsEGi141zfu82XPX+Dw
      sGU6zFCh43//7ytuDgashWZz9zKFyXjw9BNcuXSF0XSHy+/8AN4LHrz0h9iq5eSN32e51Pwf
      //oz7F6aUESPkR1v1kc8tpkSgUkeeP3I8vYrmjpoLk8dn/pswB6kKJWys7PBcXvKV7qKVQd4
      w92TlgTIM0Ndt3zjOwN6+hSH+wcoIRFxxv7Rf8AiGaB4xMZgg+gHvPeF32Pr6lPMz2YMMkNo
      Ba8lnrflijOTc+PiLsPkaX7m9x9S1RPywuLkDutBypn0BDdAxhZtEoy8waIqYf8eLkkZbmwQ
      Ll1iJQ3aWUK5RAQPvh/0SMDbGuEcC12iBIwnQ2YVGO+IvmVYr996AL5QdsgQSaNCGdiWir22
      5YLK2C87bIjcOVsgtGbedFgi14ucs66jPTtjWZfcrWqyNKVxHjpLrjR6mKOjgGzAKTBMEp65
      cYO9sxNCgMcmE4bDITZ4rLfYdYUbDymXK2Sa8rCtCaclLivAW3SWEW1HquB0ueK4axC6vwYk
      ixKztYN0Da6xSAWzIAnBQj4lqEDQmhg1MnqSrRyLJPY9G0jbElcrRLR94ex6BdUaVIKYbEGe
      90FTF2DrAjPxPMp/luhHxNhRmDW7m5GmnLPuxgzyAZ1rCMEBjrpaoTcSfOjtH8tVQbc4A5vQ
      1pLMCPJBJNqI1QpxtiJMUxIXufn+v0i5Klku1wihMOmI07273Lv7GteyMRdDzmBfMtKaMi8w
      2TFCRNoOXApaCcYDwepE4GykDIGVjWxpjfKRuuozHcpK1tbhoiTRHm8D9lzddtUhq9YzzTze
      id6XI494z3bNiX6cw1mLMQGa1xDiCnW9ghhxQXNQR0TqaLavcPTK57GhZnerozUZZbQs6siu
      PiDbvMFhpWhQLMsasfscQuf4tmFx7w4xTWC6g69bpIRY5Mg0ZTQa4WVC4S3lekG9XnOyWOJ8
      IGYpKk3Y8YJiMnrrAajbCq0UjeutyYvgmGjFwaqkjRJi4GqW8fJqxUUhaJDcWpVMiTxaLhDj
      Cc9ubFKWJRjDttZYBz448jzlUVVzLcmYjFM+f7akSwtkdAjXcHvvDC8kRkoGyrB3uqDwLbGq
      UEowHI+pgyczKb7t8AJ0vaJrW8R4A5FmFOslKsloU03oOtrmDLd5AXX4kNC2xCTBBYGoLXI0
      RvqWbr2Gpuw7gFzfzSNG437Xdxam27B9CeoV8fQh3Jkh8gEMpsR6xfFqQfWUxaQJyzKiTc1G
      EQn5FpdGnoXM2TSSNn+EjQl5MWAdAtPn30798oucrWYs64S8GLFel3QyIQ41TTIkzyVzUXBh
      awN3eotk8TFeu5ezeekGSWr6Spk3XuSNk5YnzRZtGzDW4nTGYblg4SWbw0DpJBMiqRKsW8Oy
      lUxt3/2jN3JaDKchUCE5mfX/f9Upqrqnm23oqFvJrE24tD0gNDN00dF5kC5wudjhzoO7mMcs
      6Xqf43nB5QtX2DteMB0PaeqMTFcUqaJNJ8S2JLE10yxlZ7rNerGmkxblPEpmFMUItTgkaxtS
      GXHrJdnFKXKQklUBvThBLhpUnhOCR+29zlEbUKNdpBDIfMxAGWRqMKHm0aojLKDINUfFhBdw
      b60Ef/v/+ztoG0k0RB8JSDZU331z1FScdR6BpnUdTYhsGM3qPBk2MIajpsEuV2xPRogk48w6
      LuFoXMSHPhBedjXLZMiiawhIVLRsZjlnSDrria4lGU3Iw3ncUmuGCBrXEmanYFLmaY5rGwbB
      401CqFeszmZ9/8xwg+gcsakRqUGcHBNHY0SewWxO8BaRDUDCTlPzjDtgtDEkEwk+T7BFgVgv
      aR7uce3ZayjdEWanqOhRSU4gsv/GATeuXUEPU/TJPt9xeY+N6Yhy6Xj06DaXLmV84rUBk8kW
      MstRocF2C2Z/OueJ7DorHxhfvEIaJSI8YDqA2+0xNy9MyboV9/eHbMQxbdXiJyMOm5JXDx/y
      9X//f6IuZ9guoqs9yjDgV//V3+VX/7Tkqx7bZpQoBqkm2oZX783pBi2jQYIksDNSHC49u5OU
      2aLjwqbg8FjSzSI2SVlZT6Ybbj4m+rir95wsQaSBH/vLAUlB5xNW7YR1IxjngeVuwT98zz/l
      oZE8pXLSGLnjHMPUMzk75FfDAdOtbRCRIB04B2iq9oj7v3HCxYcn+EQSshFJ1yLakoXRpDtD
      BsMcqXKk1OhyTfQdVTln5y9dIb+41bNCXywYjpHDR0u6D58yZAeRjAhohO0IruGeDfyPl1/g
      t2vH6uSM8c7mWw/AX/zF3+WorJiYhCRYitTQeMUf3L3LaDzi8ijn3rLk6WKEkJFZ69jMEk5X
      Kw69ZDvXHC6XSKFQzpMMMoQPeG0wzqPzDE3ktGzoCKTSYPKUplzShh7R542lNpouSUmWp7jj
      I0gybJoSiwEDqaliQCuNVqL/NAeH0ZK6bUEoDIIoInmS0toOu1wjE02SpzTLFapr+E9vBP7B
      c0dsFinSnBfpxYjtGmy3ItvaQAYJQeBdRCqIMlLNagbTKVL+WZ9bn3kg8nB/xoVLG2Q4iKrv
      VRESomS91zD7+X51EuH81jbpQSfMbY3ikHFT/3v1yJIoQBUF/+zl24jM8YG/92PM7t7m0a3P
      8K4PfANv3HqNj/zWv2AySPnOrymYjCaM8hGTQcJ/9Hdf4vUlPHXtBsvlnLGKrP2C5zYLUJCK
      yEHd8NVfoSFAmgg+eytQeMnGZEpVrTiZtyxnLf/N3xSsq4Q7RxGR3GT/ZI/Htgz3nvgA/+Zr
      f5B7piDyxSa7+GeVgj88f41/PD5B+YqIJwoDQEBxehKpfuELFL5FqvOWuCAARZskhEJTJAl8
      sWdI9E87EBh+9Yjh07uI6CF4kKpvM/Geh390TH43A5n2PUpSAQLlLH904So/UVximHyJSGQS
      HDeNxCeK/dpz72hOUPDOi5cweKwNXMwyPn+4z1nbUmxs8mC94HJS8NQ45+TkFC1Vj7LTwNJ5
      TpoWIR0xtIj1ChsDshhgrKNJBUnVJ69caKF1NErQeYdalNh1jb5whdhUCJMjtaYOHo4P8fMj
      /PQCUUpIE3w+Ig6HpKt13xPqHavZWR86Mf1bsT494is2Df/r+zveuQNCTJHSAYEYArZdg4Zi
      e6tXfKUialAJtI3FLToG0zFS/lkrfV/DFzx7R2dcvjRFi/4gRFUgQkkUkuqk5vRnO0Snzq/w
      9H3vZXBEBz7MmbZtfxeBVOd/tEToyCvLlgenRxzEBcUv/jhKaVof+cxvv8aj/Ud8YT/yo9+Z
      kCUpiS6QQnG28Fgc7zNj3lFWbI0GJNbywg8NeOZ5gyBHqJqTecKVixYZNQHDae359D/PUc0S
      L8CPFf/uWCHnkZg11K1BhDlaJawazyR4TDlDTtLers15B2HbApJ/sfEEf212ny/flD29HNV5
      d6vgwgXJw2+5if/Qq0hnQShEFAgRyLt+bVtNBONM/Xu3uwgkivUfrmiOJZvv34EozgudJcZo
      rn/dVQ7eWNJ+tCR3Y1B9swk65c+fnfDc7IR/Mrjw1gPw4HROVuTcmR8zrGo2tjexUXOwPCNV
      KQ/bhq5rKCYTHtcZYTHDScFgWPD64QEhwM72FGEblkFx3DZkRQ9cvRmjmoYsTdkdFDSdpWtq
      1tFD1zGyntiVCJXR5ikkGYOLQ7oAQiewnhPWNcI7xMYWcWsH5jMYDRBCIk//f7reLNay7D7v
      +6219njGe849d6xbt7qqunoodpM9kN2kmmKLgyyaUuwoiqMIebCSwIASCIkdBYKD2AiMxEDk
      SAESQXZiR5ZhK1IIWLIGihI1UuLUbPbczeqq6pqr7nzPfPa811p5WKclP7BfC4Vbdc7da+3/
      8H2/7wg7VZStDhQ5Nm5CFGLHYzxdMuh2+J8+1eEnH5ohtcVWgCww0qB1SZkviFoK5UsoM0dq
      EAKLJJ0vMBm0uh1srSnLEi/ykCqkrhIOj0/Y3h4gbYm1A6wVlEWXMKhJjo4Y/pqAQi5BsEt9
      OQIlfPaLU84yw+h6uXSzWOGoXKLV5Suvv00oLM+dX+OzT6Wk5SqHowlg8E3Am/fh0fNr9Ft9
      mo0IXwnevDpy3uZFhawTTBZQKfACibUNPN9gTZeqytF14Ah7UtNtKVIsjdpQm9zBywJBe2hI
      dw1bfYvX7DMaLgiiBfVawHGV0yjnLGQD0Aiko9shqLTh76jLfCP7LpES1FqAECivxtSK3Uca
      3DreRr58HyEV2Nq9MY2hYSGZpYxNRa/RcuRB60C7Uir01TlHs5rBZ9cQBFjrI2yKkJbN8xGz
      9YDDr4zoZV0sxvmyhWAA/MJs7wOa4DDipCx4tN3mIAg5XOQ04pjddpfXJ1M2Wk02oz5ebXn7
      +IiwEdGRisnhHiaM2W63ya1DkkzyktU4wA8CmvjU0zFVo43MF9w6OSAAvPEx2SKhbrQgjAgG
      m9hOBzlfYGdTciEoG7G7WUIfEfnY2QIxGUEQOvf+wR42bKD7A5idwt0bbvvbaGGVQoYBP7Id
      8vNPl+xGiTNfW4OgxmiHY7ReQWu9h13e6A5z676wycEpkfJodpoIBUKE+IEzVhTZlJPJlO2t
      AYg2VjQR9gSEJfBPyZKM0y/WkLg6/P3ywC4ZNqNywZlgAnmJlM4yKYRDzkgl+ereCYs0QViP
      ZJwgRJdSlyR5QCeCaZ7gC8O7tyuK6gBlDWWpufLelAiPlWbM6iNbhNpQJgV+XJMVHkaD0YLp
      3OPsJlhRo5FYrTFtj1p28KMt0mTMajvh3XcTeucEnu8zn+8zyxQ9v40iJEfQSE+hswtGuAMu
      5bI0lLzVXucXDk74+xsTLBIhIjQW6RmstZz75EPcOFzQvjNEegqrlOMPWYNvNXXpMwwtfU8u
      04ner/tB7Kec/tYeg8938ZoNxF++lSXdlk/0N9bZf2VEeN1DqXgJIZZoob73ATjfbiJMyDiv
      eLTZYBH63Jsl3JeCxxoh14+POG202Ag8Lm1vOl2/lSxaTWJt8K3T0qdlQRx4+FKRJQuS6QQr
      LFmeEkQxzTgmt4Jq4xzVSuJecX6Toi7g9BhpKhqeIK8qmBcQxohkjk1TrPIQrTaEIVYG7kMX
      Ofa7r4GuYOciot+Hezc5Mz/mFz6/xg9f6mG0xRiBFIo0E4ShJU1KmgPjvMBF5tDgwjpQKx7j
      vVN662dAeGgjMbVGUoE0lOmC8WzG9lYHCBBmAUxASAQ+RZaw96/m+JO249kKx6aUCBCSrEho
      BBNkXr0PPnTv+WViTBU2+dNrr2JrsH6BFYq7hzntVkhRh2hStK14+tnHSLpNVNThJKvxpjln
      vTtEqUB2a+7dHyEKn+D5LsfyYZL5IdpqlCzYm1To/3dM2BgQyAgtLStxzs1kwUZtCdbP8bGH
      N9ia3eLW3i3uJh7rqz2y/JhGVIGI0NTMi4rA5BTWW9bqDsdujUUYzc8NLvHZmy/TX7yHKRKS
      2YLDSUphJRsrLcK1FepJxEoCQvrM4hay28VbLJBZRrbIGEaSfruLxkdWGUIaaj9EZprh7w7p
      fk4imhF1KQgCMKIAAbsfW+FoJyf9iwUt2kv0jP7eB+DaZIyqDVUc8frBIaKCj2wMIJkw8yIu
      7u6y4iuwgr35nLdOh1TtJlGtSbOMUAgiA51GTHOZ7ee3WtyVCl9aYl9RjacsFnNCIdDGgO8h
      0wQ9fQBhhDBgOz0W/x5h3x7tu4ZmsIayFnF4D3PwAJSP2LngmqAzu8ioARK8W1f4ry8Y/sdP
      b9GUiqosKEtHZEuSkjjIMEbT2QwRSLJMURUxUZgThHMWc0MyC1jbuuBqV7nMM9ASvIr5dMGi
      mrO13XVvDDNGWIUVAShBXhU8+NUR3qTnyM7LEbJYZt4Yaoy3oFsulshJ11No40CySgp+594x
      ptYO+a0M4zKmEyUsih55ukCHFY9dXOfty5/hel3jW+hZ6GYFi9+e8sisRKQgdIVAs/PkWT71
      hIcgRvkWa2KS8z7l9AxeEGIbMb6KeAwDN65zjgV4OaW9Tz+uuD/usb055HBqqOqAlaZlGii0
      dTKS9uyAsrUDtcEK42jWuIOfSo+f6e7w1R2JF7eoy4yHsxyEphGG+I2A5KmK+//6ZeJZgppO
      USdHBLGjyyk0KQEnZsyg1QUhXb9UVg6PX0gmv3dE4xNNwt11/FBhjQDjHGRbWz6zHy44+vN9
      uvM1LB+gBTquNN3AZ3oyxDc1uys9dJ2jVnr0kozRfMrI89i//4Cg1SZoNLgYNyFPWUwz0maX
      zPO5lyaEzQatvXscTk6xnS46CMnTzMHxk4RqPMQ2mthGB1Z6bD6ywzzPyfI5RhtsmS0BUgbZ
      aGM6XWSSYIXF9Faxm7sQBFijkekCTwh0GPD9zYpf/PQOl3vOpI4AoQTCF/ieJg7meE2L7wNV
      gZAKX3YI2xrhGSanJYgOaxsR2tQoUWPKFkkaIlVGejDHtGq21zugCwyrSJYMHFGjK8vtX71L
      eLrN+1k6wmrn55WuCU7EmL6XYmsP6y+jpI1FSYW0gokf8/KNd8CANpZ8Cnk75a1bGiszbh/D
      eFbz+KeeYyuQpH5EVBlsrdk/PGX3RGMoEFriOVsPsrPupkpyhrUVaEtZGGKvprYZlBXaK/AN
      KG0orRMJekZgqppLUvALLxlUfYjVmuPDFq2zEWy6qLtFtsBfgVK4qYsLb5B/mV75yuYF/tmt
      6/z09gJfSjpNV2hWdYWpPJptydbfeoyTX7tKVGg8YR1B29TE1uLXIUmaMtGafqvrwk+WkyGJ
      xIqA5BsZenZA+OwaUlqE1GDd5KnbadH60VXuvzrEe6v43mPQz/z673EyS6ixxGHEmlLslQVK
      G8RiwVFVo5VHpy44xdBSAae3b6GjmOb6OmlVofMEpTUmL7CNFrLMMeMhtsgRvRU84dHs9il7
      K9R+QDdoIKuM0XiIThPsbOJGga02tDrLaA9LYCzV9BQ7Gjm0RKON7PUweQp1QcdU/KNnFD/1
      rGNrKus8sxZXU+s6ocxSwjbOd4tASoWQvptTYzneO6WzOiBWkuXVjpANUCHWVIyPDzGeoN/r
      IWWAtelf3uqCAm1r7v32GHGli15y/YUEWePeAlKQ1hO63hBZ5mDNMqtMLoPeFEEn4l/cGnLz
      9n2q2lJqQy49WpcqOFXE0qP2Q0ya8rm/95+Q+CGFrOm+coOBMPiFJbZNlBKUx3dYpJrB57Z4
      5JMvEEUCKxSiTpF2jjY5ey9f4cylIZ7vQ7QCosKgyaYl/+jkWV6+/DdJleJC2OSwsrxNjTQV
      P/6lL/Gh4lV+5kf+HkY4iYjX7FIHPfcwWZbfoQJrkBZa+YLvDP+Y81t9tHF/Ph9leErRHsQI
      Zdm/Nib73VvEQiJViFVgpI9AIHRBGoRo39LrrmCQoAS6rFDKw1qNNeCd9Vl9cQ2pJEJUgO/C
      ZZYHczj8ADDWwXDEbr9PUeTY6YgbBsZKosdjEhVAkWKPDxArPTob2yxmU6rVNaQxiCThXBBS
      9Qck0xkjI6AukXlOtLGFWtvC9wJSa5gXCSYvELM5p8UeFBlCG2yZw9o6stPDO7hHeetdyBbg
      RRSNpcGh24G4CVpjhsfIsuLHNgv+ty+ss91SUJfUZY2xDqGIkmSLMdLPiFvg5uuOvowwWFFR
      FTnj05zV9Q03oHn/BhMSYxVCZwwPjvC6ipVmE6kTalMjhEKJHCFCjPB48CfHcKXtwiDsMg7F
      4nhBAkqT0g4m+FWFES4h0qWhuIQxIQTXiLl68x5YS6ktma4h9Dm7mnLwQPHIh5/mzt37PPTY
      GoUsGKOJtcfu3imhqRBCIsQJAIG1dENB6+EesT/H1h6o2JnLdYkvLc1dn3ilsUyqzN2TKyTh
      WoNHW/CLK+tYa3jLGicBsRJhff7suef5vl/+FR5LT7nS6LmQj3SKilfQ9bJ4tWDRjiIuLPO4
      yX9vz/Fr+X3CuIU1inZHkyV7zI5WCBoh2492uDHcIr9aEeYZ0lT4y3WKARraUBjLaDqk3+1h
      tcBTrumWQoEC/aDm6EtDVj+3QhArhMgweChpsEIw6H2AJXInbvLqu1eYS4nsDQgnp6RFjuqt
      0zU1W70+nN3lJElpKUnc6tCKYwbNFpNkwd3xBJFX1FGMqDXd9TWUCpjnGcbUSA369BAzny1r
      RYFot5zUuKqgEcNoiHn7NUoB9NYQj3wYG/iIPIOicOVMloMv2W1L/o8fWOGvnwucRt86xIgf
      CKxRWCrKxSFxr42ggRDu1sG6bacVlmR+SpFL1rc3l/E9DnL7l4fA5ByfHNHoRzTidYSZY70m
      yqQIobBCYkXO3ZcOyP8iIPCcl8KtdpbpYdJS6wwhpgRl6nRH1iWJGeEmJ1YovN4qv/fKFSSG
      Wi+xNCiaaHygqmtmR/fB99inw70r0Gw3yU6HkOfUEqQ0SCmR0jGWci1o9rexInBvGrTjkooI
      pGUifDatByZAeDFgsMJ5p59TE6e41Hq59nDvOisMdy5c4HcXG/y14ctciT6PsB7GlKh8BuGq
      +zl2md8lwRqNsIYvP/Q8v3PzFj/+sEVQQxQStC9hZAtb+2gUq7sZx/uvEI2aGAlY5aKYPA/q
      isgarIDxbMJKe8UNHoRYYvkEQnnIVDD68im9HwwJ2w0HJiPAGoWQ5nsfgKuTEUUQEhnDRpkh
      trbxy4qZ7+EJD6+ukFbSqEruT+bQ6tLMU94+3MfiYUyFTFNEs0Vje4uqKEmKBfVihkjm5HUB
      ixxWe8jNNYIgokqmmPEUm8yQURNvbUC1OsAsFoj5BHvtLcSZh7CNGOoCOxyjfJ+/+9EG/+C5
      Fg2hnUx5GT1krHNvVcUczIKw67ibqGB5IxtXekif8ckRgYrora/gsrrEX00xrMVScXB8zMpq
      l4YyWD1120f0kgtUgy45uDpH/1GLKHQEs/eXXFrnKNEAoLITVuUcq5fbUiWwZjn9ER5SSt7I
      NAfHpxgrqI2hxkDcRFk31rxfax4KG/hVxU//7/+cVqdHsZhy9MdfZnrjO27vAQ5DuLx9F8bS
      bTrCtwx6kB+QlhWBmeFH0vGMpCDPajw5x1rL0Uyw2S94zGvQKGakXri8EJa3upAYXfG1Zz/H
      J1//M7z1H6T23JvDJiNktOqgVsuPKo1F22XcVF3w3628yGdGL7G+2lpujyuUnTqbqWnQ2dnB
      fKrP3fFLDFKB0GCk2wZbW6OVRNSQ5QuM1ay0+u7hVwLeh3UhoIbh75d0n0toPtQAESFUAz6o
      Cc69kK2tLp0wYH82o20sylOIecLCwr4uqbIU1WwhlEd9fEAmFY1GA9VooaUkWt8CaxhOptg8
      Q2YLZBAQrq2TagFr2i3GRkNyKSDLIYrxNrYRdUF98wZ2McMGEaLdRew+BEf7bhnWbPNMM+f/
      /g8afGQ7XDq33HjRtTQV1laU0yFeFODFHta6h7nOMqQPQmqM8Djdf0BvdUDgR6DdNtouCW9C
      WUCzd/+QlbUWsTRYKxEUWN4PtC5BwOndCZN/VyHrklIXaF2BNWjpEyhLnR6hjWHQH1DP+KuR
      Zy3cOFv4CGExK2t8+WvfdnFLtV1mDEs8aSlrjScDvMDjeDRh8OGnGWydQVcFNAMWb78OyiJK
      xxmyUiKp3QSrrWgoBcXU5Rf4LZpMMJWH0YYiLTGDVZSfIYxAiJz1lsDWMQ2/5vFij1e9C4Ah
      rmu0lFTLrmfy6U/x5j/+FT7xydt8rbPrRsgaHpnf4ai7y0RINoXib8gp10SfG3XNnjak65v8
      4tcFf/dRaLQClCjRlaGuQ0xVEIQLGs0Kednwxqs1Z/sd1LSi9JvYRhsTRlTzEboeYcsR7x2c
      srO2RWQ8yrJBFbYc6W+egp5x7ysJp90hm+fa9AZtPPUBUojNfofTyZSTeUJVVRyPhnQbTaLN
      dfIkw8xzJ4k9OaIbN2lsnsFKga1cUotnDVlRIbF4oU9tDE2r8cOAyekJTMcIz8PqGrEyQBQF
      NptjkzF1s+PEUmUBZY4o3JjMKgO9NTrZlB8ff4e//7c2WbAYaqkAACAASURBVBEHzI89FzPk
      RRhTMp7njI9KpoeHPPrMKi3RYJEprK5RInPBfOOKuw9SJicLnnyyz/F0ge8LwijARRkZsrTi
      6LDmzWsnfPwjawTFDNtxwlAlFNKXpIVlkRq+88Yho5dSLjbXyRceanMbHTmSsTw+QsqEwyKl
      wPBQekQ18yj8ELt2BmMq1HRCIFPqfsy37j1gnKRoagpj0RrKOMSkM3LgxuwCzXNQRh7Pfe5F
      8jx1KY5pTXL1TQIJSIXB4jea6DTBIBCdCGnd8scIhaxPMdJ342JZU5gK6mM3cfE0gngZ8qKw
      1vJUcY9XG+cRCHLpch8jrVkxFUc7Z/iquMTfPnyJr7XOuX9fCeLf+SLn5pqzG5e4ksAfhA10
      XnCfkotxEzW/wa9fu8ndk5v84PMxNtylE51y/0TSjmMaccF8VnM8nvBH3wI5Kjn/sWe49o3X
      2H72CQI/5P43XubhTz3P/W+/yoGwfGzQo7mxis4V/uYWeZFTXX+X7oeeIL9+hes64af/i5LD
      43N4VN/7ABRpRieK6EqFynM8X7AwAjufU4QRWatBVGvisIGuU9YCRSducrxIsFlCWhb4eU42
      n2MXU8LeCpw5z3g2dg205+N3uy51ZnaKnk6gv4YIIxgeO/3NYBO7toZMUwh8TJ4gJyPy431a
      zdd549UG82KLsCE5PdonChsEUZvIXuOVK6ApGRaSk/k5Ir9meDql0wnxog794Bbv3oObt0FL
      n6PZRXa6Y964Ydne6NBrSPLyCE9VfPGPM9ZXHvDG7UeI9FVG5SXGC58nt9/g9vAxBuF7/NbX
      LCevS86tzPHPXaB1b493rr3LxUuPMVjf5O53H0Ce8MrBPmsGdl54jqOXXiG6+CirzRbH771N
      sLrD9CuvEXVi1qIGRaYpjXZ6psgnmTrDjoy7bK1K6sUhz37mh5c5a5bZrVuwsUFlStQ8QdUF
      1XyOENZJxrs+Jp8hlECKEEQbTI4UEqsrPF0zH1ZMkw5KlHhKEzUipLJExvIR7oD8HFZXSzkB
      FMChChC15uiTL9J97TeIz/4oWRRgMVxdPU/eCFlRLbQ/41RJrCn40IWLKK3Quw9hTgw/sHON
      rY0ZtagJlWGWQDMGpZyV8/JFw2//acg5L0BPMzbCAFFq/GzOhx5/nF4rpnPpUWZ7N9kOA+JW
      n/noFiZtEQc+gwu7hJtrKO9DzCev8/DZnNxGePbOB1Ah4pCDRcpofABWEfVWWMxmlONTTLog
      6PY5u7nN5kqXcj7j5p07vD2dgXGmcTyB0BZ/fQ3xyKPEswmTq28i0hRaK4j1LapsDuMDqLWz
      Fk5O3ahzZR1b54hk5KYm7S725AiRLTCNNvWHv4/6+AaP7PrMi4hOC97NYWO9R6vtsxit8R++
      mPJ7L1VcfkhzOlmwuurx8iuaMxsNvBCGp/Dik4KDY8PWoKAVn7K7esIs3WZttSCQcx4cSbbW
      DK3Y8OTDlrw6JFlIzoiE+ycegfLY6WsiIfjoRY8/fEXTHCfEZ2vi0QTPGIK6plsXfOSzn2H6
      za/xytEh53xJO83p1LAwBpsk/PCTz3IofQIV8Vp2ivEjqtkDKmvIwgZmMaeoDV4AySJlODd8
      6rlnkEKhK01d5MxuXMHkKYFeJhQrD43FF8vfRbeLFR7Cek45WZ8ihedYR1JRG0tj1Sds5UiV
      k8xzwmiMCvqAz1P5PddbatzvSVcu9kgp57761Av82f/wy/zID17hN8KnsFKQGw9RVOiwIihr
      PJ2Q15qr168xaPeYVzny+ATvEiQJaE9TyoAsnbJ26SfwgpjxKz9HbS1iUSIqqPb2sUVJPp/h
      +z4dP6K9scP45hEtqWhQ4c+GNHXJsCjpCotRiri/xvi9a6z0CrKyQWEEvvmAHuDa0QmL0ZAa
      jZhOWNwpiJpNLp69QKvTZqEti/mEb7z7tkuEREAjAq+DXOnhpQnSaIqTE7h+jTIKYW0H2+2i
      xifo+zdgMQU/cEOQuIEabCNW16nzBDGT0IsRiwQ7HUMUw+55BBYzOuV22SL0pkznR/h+BP4A
      bWvq7AGTvMXmypj5THA6kqR1AzXaJ2icIc0EG+0FrXiFVnNKWljyVGFpczwa0oh9ZlPDzlpG
      f2WbRlBxbgNu3bdsDipGsxX8UBJ5CVUZ4nkVzQjObxXsAVvCQ/ses5MR0WCLRaV57zuvUr93
      G3X3PpWunKT6eMSoLKgEyELztbde46HPfJ7j/XuU8zlElkVVO05RE2aTlIUVeNoQTmbcOTlB
      Lq4yPLhKqxVRVSmPJR1apqY0Bk+A1QpPGMplAIcXu2wsoZy02IgBnrSI4gR8jxAfFViErrF4
      dDotEAFWGKTUPBmcEugcoySehTwIXSNsagQSfWabbzQu8g/ufZ1/23kWJcGUGtHv0xAheeyj
      jse0wxizewa7KLFBC6/OwfrEkcfhqMlOK2JNebT3vkYYRmzsfpjRDD77dMKGlMjVFg+O7vLs
      58/R29ghbPTQ2uPjz38OI0pWbULpDdh/4x3evDVCl02SbI5+5y3unRyxfrYmDAx16SHkB2iB
      iu++ig4iov4qKw8/wubKKuV8zsFiysHenFwo6jqFsEHQbqEaTQptIF1g332TIk3cFKQ7IHr4
      UWQck967jb3yCloXiEYXe+4i+DEiihBxjM1y9PEDsNI1hUWNaXWR/hqEPoyP3PJrNuZa1mLv
      6BAV7XC0f5NO+wIPjkoGcQJqi0UyQsqC9VVHrZDasLriM59bGt6UJNxB+QtasaHT9PCikmTW
      oNWEvQc+dd9gDQih6beVM350Kk5nfRpxxXQxpy4/wxO7l4maAWe2PH75/4zprK5CWVONTjCe
      RzY75fe+/PvI7jkqWdK+l3CqBc1ui/lBQKOsyaRi4+GPMNk7oNHf5keiBzyxXtF4oYvAx/Yv
      UGiNkgIxfRfPlIwWLY5aETtPr9PpCHotRTbedhtXYQjkEF0klIuSt9+esxlt8bjqU75RUDdC
      /O3HyOZD5NF9POuzmO7z3junfPXeGf4ifJErckAtfSxtNB69VsAjTY+P3tdc2z/gUv823/rk
      9/P+rsACQltmP/BZitf+NVsPT0hlgzJLKeaaofWoy5R8URJ1G/gPDhFBiD/MGSRjjC0ZTw2L
      PcOHPv8fEe84tLq1FqtCds92eOpDoK1AK0l1fJvOp88Sxz7KEyB8kDGgMHVJVddcfuYxPi0r
      fvWffo2jWzXByhaTq9d5dk2SZ5K8VmRZ63sfgMbzL9KTLn09GY9559pVxEqHMGxQ5mPqIkFI
      Af0VqkVGNbkH0xkc3YcgQq5t0Tp3nrawDIdD0rduYaVAXbyM2TiDmZwgjg4QQQHts9jhKdaP
      nKWx1njJnDJLUI0ORhdw6zbMptheH/nQ4xwt1tgf3uKJx2E+WaUdRCTxlLjZp+E3kbbDSqvg
      +p2cM5spe8dtl6Qoc27cLYnbiuORYX1FcvNBzcPn5oxm7u80mjOu3fPZHhQcjzQbq5K33qt4
      +ExElhnCIGVV/nUun3kKmRpIDaG19MwcDhKWGy9ElvGNmw/Yv75P/5ltCuNTlZbLH7U88fiQ
      33zQxEiFpaa/3mV4fMRTu31+YiNC1gsnFUFh6jfdsk5X2KbCklL4fYYvnOPsYx7SA2vXsLsl
      delkFMLrUFdtoKREcMmew9YCphlyMie/v8eBjVizM5Sn6IomL1zY4X9tfZg/KJ+gqGosOQiB
      QPNgVPHWqABSEIKO3XaJN/VyrPp+vNPnPs1Xfvqf86NfeJV/Fn8GSleOKQEyCCnNgqbfY6g0
      USPEemCLEmtDFmWTVjXm+Pq3OHv+E9iyROkaSFDJyH2nUqEsKF2TvDoh+OTW0pSvsbYEFSOD
      iMirnPDQKP7z//av8S//xUswhVmZs7YK3772EM99eB1ffQAVIs1TKi+itBpvpYcfNaimI7Kj
      Q4JWB+mHWF1j5zPk6Sl2dEzYbKOe+QSlCjEHt5l/+y+Yhy23sb30BH6nTX16iLh1BVRA0OkR
      +jB/cAeiJtaTUFlstqDeOANVhbl9FeYzRKuDbTVhNsEc3yfXmqtpxVMfu4xdXEcqSZ6NmNkB
      q+s++URzYcfjcC6o/AFbgw5Bo8N09iZ13UbXJcKz7K4ZDiaKWRrw+MPbBM01ZrNvEcgmlRaE
      nmCtK7h233JSXkaJIdvtL9BZrCPH+0itEWK56TXarcyMRmjNg8Typ1/8Tbq9Lu045PKzj/Od
      W+/yyhXF6DTHa8TIqmSaJ7z58mu0um2evHAHUS+QosRaH5ZbbDfatQhbYazHUaHZvtRDytBJ
      i5VEKIsSEikFQmr38KgQ6bcRdYQUHgKLJxWRFDxqBVY0ENYghKAfdpkVUIhwmezuEiVXPcvQ
      SNePWUfTO5r5iKrCqGXKdRghTI0drHJ18wn+05vfhNXvR8wXvHDxIjf2Dnm2fIO/SDYoiorV
      GqrZPgk1sWe4uafR+DxlSvIb32a28yTN/hYUidvL5CkyT4Ea6YUIbfAOj5h8q2bwqV0kFmEK
      14OqJlaGCDwQJb7U/OTfeZ4v/tLXsb4mCCSPbO2zmM6ZJB/wBljr92A8YTadMJ9OwfewjSbe
      6oBqPMVQI9KMftxg8yNPMw8CksN9RnfvwPAIun3EuUvYMAJrkUJTLxb4YURd5NjFlLLXp+6s
      gwywd99zCYmeBxcexd69hjjac2VI2MBOR4BxClEE5doON5N3Sfb/gNniPA/tJMzmMRtrMWGQ
      EW48RNS6w2/84YIf+vgRpycZ/f4+RZEReB18pYlCw+bA542XS77w8YwkLfDFG8znkiCUtFoK
      pTWrK5L9I4PMb9CwF+leB7+8vVyEmaW60/WFGIu1llIH/Nvf/QZ+bjg4OGH/vfd4/b33CJUg
      STXH84qti48zncwpjvfYPHuWXTXjI/3lzWWlc5NZF0slxNJ2uTwM8vF1orjrUlcEbqlnLNJb
      Kk6lBK9GKo+gdBsH6S3DPN7/Wab+936uM+k06hrCpXZJCaxVDK3Fl4KeEpxWEoukljGDacJp
      r4NxVjiHuLSG6Ys/wMFb/5Snn3zA60nB16+9Qyfu8+fBZYpyD7sY01vd4HQ+xUpDI0340DmF
      bWygXr6F99gPcPra79B84ScxVY1X5VCVgMHTYKzGygAbRfiHCdM3D1j58AbCVCA8rMlcWba0
      j0lriIXlx/+rF3j78Lu0W/sklUdaDyir+fc+AKd37pHnKa1Wm9aZXYpsSnF8Ql1kmCBmZ3Ob
      i0+fZbH/gCt3bpGlC0RdI+M29vIZbLLAa7WxnkRnKUzH2Lqims7cRnN9A6oS88a3YTFDlBm2
      3YMzDyEnQ5iMsV7okhOzBSJuYYoM2e05h1c647VpnxtHc24/KNg7mlOLHkdDwSSxdDoBa23B
      JBNsrI85Gq5T1zNK3abVXsGYFGkDttYr5nNJp1UxymIWhQTVpt3tkmQTykWTWZIwLyW7zSYr
      h2fxk/so65hFTi5k338y3cOkA7703TuM9w/JURTCMljp0vhYj9dfP2WhDTIrqacTVjZWWdzR
      7FeSn326xtYJQpjlje9wKVJojAEwaKOodYQ62wXj/lxK4aQkAoQjX2FR1MYQBAKTWWi48G6p
      PJdiA07zYzRIzz0w0pLMahi4QxRYxxS1aGoLw4rlktBSopmdCug5gaFVavn5DfXnPsWf/Nov
      8SOjb/J6WSGv36N8/DEGtWXfalYrxfjWbWzkQVlSVJrJVJNNx+zWpWvQF6ec3H2Vjc3LaBXg
      Gb2UUYBTfS4PXOBz8OY+ouezcnbgRrSmQKCwXsstTa0GUxDKmn/8P/8U7/z5v+HkYEy6eI+7
      k/Pf+wA049hFA50ewHSCSHNEb5XooUcZbGwQZBlfu3Mf3xRUWYKcjLHGYLoCMa0RrTYaYJaC
      ybFLE4voreKtbWKyFDMdQ1Vhwxh5+WnwPbj6FsYYKEuHHOkNEFq76cXOeawE9m5DZXlg+2zE
      +zz52V0WswVJEXD9QcFzW6fMik1arSdQHEAFUqboyhA32szmKbtbgkl6kbVBTZJf5+Y9hd8q
      aKmaoLnCdLbg/I7PnIjdrQ6PrCX0rlwgyG8shQAuHMQgliUKbvNqJN891bz+yjtU1pIKS+VZ
      xGJC3JOsdD3uH9dsFJoQQ3n1OrXy+Gh7zkd6GaK2GFpgUpyGBsBHiHppAxRMasHmpb6Taygn
      UX5foiPlkl8qa3wJla3xq8DpVJdqVwBdVwjA80OXUilceGGzzpHKsiYEp9ZghEUY94n7SjEx
      Go1xz9Qp+A9bPlHf4jWxS4rjsJpGh+sXnuK/vP4K4WiTcrvDoMrITUE0GxFHCj9qkgxP2DJz
      mkLy+h2FCg2XggidTbBGM3/3z+iunCOKGmgkQpfYqnA6LgQs0eerK32KN+fMmjHtXhNBCTpD
      2BpUw70JACEsgbRc/v7/jN/6+S/y7tWU3FbfWw7d+pl/SJ5nIAVhb0D7zC4dWxFMxxwlBUMv
      RN64gp2eIsIIc2YXsXkW0gwWc/fQohFp4nDi3TVEq4UdHsPRHjabIVQIm2cRzRiLwp4eIHsb
      ztXVXXHl0NEe+CE029hsCocHCD+COKKRz3jhzS/ziY/2KRKFUorpvMY3I4S/Qhk2efedB+xu
      CtYHEZOipCYmz2C9l1DWbSJhuPbemGY7YKvXQZdzUr1CVtacW5uxKJqEKuJnHnuG2PMJkjGy
      Wjjjt/RB+eA30HETKk06HPNLv/sdilnKBEsiBJkKyc80OVkk6NowzDVSCIJGC5MXTLTlt/9m
      h2e7Y4SwWFw8ktWCQrbR4SaiSvHLA7TpcNjtsPsfX0ZokEq5Ob5e0iWURgqDsTXGepyOM3jJ
      p9NsOCugdKI9YZb9gRBoXS1n+YL/5UHJz239mEPG2OWbaJmZjApAen9JfYhjxfrkTznn+Rir
      +W42o1SCleyY8Mt/xhfOjvjOXY+1SBDGDUKlmC4Seu0YKRRlOqKoJS/fsjy0Ybk06PGj611W
      uyvIyXWQCtnZ4uGP/hjKWIyUyCrDaidhd6WcU38WVY1pBax8eoewuQq2RBgXrIJsO9mJrUEX
      IAyL0vKzP/8yf/DVK9/7DSD7A7rdFcRsQjUdM/qTL3EiFWvPPo/wNOLqm9hmC3HuIjbsIIXB
      3roJYUToWcxiSjWeYpVF9AZOo7N/FzE+xmYuI5ath9xDXhSI/oqzziFgdcctxQ5HmFaMaKzA
      5AiR54gz5yDLsFKR1xV+2mbrj06Yn/0Q8XBIWcNW9xxNzzId3sUmNb9eBvSVT6wGVMqjqBdk
      xw3OtZqkiwMOF4qPTSouFxk26rARNhgnC6qJYm1zjR/fWWFleBPhN7A6AaFRWDDKoU1qgb8Q
      aOPxG988pVykZFgyoAJEUPHMo6DRaGP51a9B11gajSaT+YLPPrrFs4M5dR3goalqD2UFJT6T
      ztNMtp5l697vE5YPyFpryCfOIYkwokFdaqzR1PgUuSYMwRM1oPB8S5YL1uMYz28BFqE8l2jj
      x++7ZpFB5HLUdI1fFlg8hLRLUaBESMOaLziuPaywbuIiBHUtmL32Dq8+eIDxFN65DZq5JWn4
      HJmI128Knt+tWWtbxrqFxGc1ME5FJaEjBLk1PHkOPv04lGUTX1uqxRilnUShnu5zeHCd7d5Z
      hKdALHseXYJxojprITAWMy4YffuEtRcMnorcVMh4IA14TTebEyCMoak0v/CznyAtPkALFJ/s
      M3z9m+iyQjZb+Gd3WVvZYHbrBslkhLACJkNoX0T2utiDPSjmiOEhRZZAGEGjA2sb2NN9xPCW
      M6HHbewTH3Ubxft3Xflw6XHEbA7p3B2Ia3fdyQ1CVJpjZvdc8VeVLpUxDBDTCVZ5HLZXaRaG
      UPms1iVpu0ccNTmvLPv985wPZ/xLM+dGe5VHB5ssqpLptSmPPfoo/X6fn3jhv+H/+81fwfvz
      l9mWmrLVp60MSZbQXt3kC2t9zqmha3KrmSvBTO1KiWUTaTRYG/KN+4a7dw6pLCQ4mYAFPCxJ
      lnO0CPj4Yzm+Z/BKjyBZsC7gpy5pRFXgU2OMwhJS+Jukg48wHzxO9/C7+MkBJSH3Np7j4plD
      lOc55atv3f8lT5CewJcFSA9da6wUZKMSz5doXSBlhNV6WappsBaDCyg0AgyGgSkJfUuRO5rD
      QEkm2rKoAKmX3gZ3MOraoC59mvTO/4PwI/KjY2Svz2y8gNGMIyyesu47sCVC1FRWsBIXpKVB
      ejCbWpq+YJEZRGXwBuvY6T51XSMQSKUYXflD+i/8beIadOAjrUXghIMs8+YMwh2EoznD79Ss
      f+I8Eg9whiZrS6RcMoKEQqCJdcUv/cOPfUBE0mSE//BlRLOFKEpEkXH4znewi5nDVvTX8J/6
      JPX9W5hXvu7c/2HsjmOzBRceRfgx9u5NyErsmfOwugZljTi8B2WF3NrGLBLEeIzRldsMZzli
      64zDnJgaIxQicNpvG/dgNoHpKbYswWr2m03EzesEVUFxdETQ36RSEg9N8xOfZPvkDmdfeon3
      lCEfDjmRFb2owXg+4lBP+Mb/9U/IGoIXraApEhfmlh9Rek1+6PLDPG7uAgbjN1D1HKzbkgqM
      24MsfxkHRcCfvPSOQ+EAxV+ZILlwSXAyrxn0Yipd0G96JElNWNUEYchzm4pC7+AxIW+dJ412
      SVfPsx+tkoqA1WCdWe/7yIuKveKID3cDrC2cJh7l8guk71Dm0gNb4kW+s13Oj5guclqNpgMO
      KI/3Pfcol35phECXKVIKdDGjNIETH6I5MYCUVEikEK60EAZNgEUxbK6gsgIVSDQx6XwOkQ8e
      1KUgrQSygrxUICVJ4dFp1Ph+QCucczJ3CaDSk1Spxk72qNIJgScx2oAQKFlx/8pXefRDn0EW
      KSifuqqcU1xXlHVBiMB4ARhBlW1w+sYVBk9ddumbxrhGWPjOAEWArVOEEDTkB6RERh95nuTO
      TezJASZuYo4OXU1//jL2zA6h8qhuXIPjPdjYgapCZgnEIeKRJ7FX34H5DDpd/IuX8HyP7M1X
      3Fiz1YFm7JCFgw3s9AT27mCDGNHvYW9fw8YxMhNOKqFrRFUBIzcRqnE32eoaRXOFK2+/yfch
      Odo8QydqclRnHM/HlFevkZ8ecz4vmft9NtbXMIsZbb9kMTylbqzTbYKOcsaB4n4KcU8wPx7z
      w5/8IS52NfPGc/jTW0TTZZQpbtMq7NLniqUyDf7dN+9CXVNbKAW4St6ZQO5fA3FB0w8EvrJ0
      OpaDE7DG8k9+cBdR7CPlFCMi5Ow2vg7oza6Rn/kUAw2D0dfxteF49UPED+ulQS18/3LD1uWy
      ocXxMP2l8cyP8GREO2oBOPCAMMglTsTqGmk0VjnJtMRDpClCWWxhl7J/S1e5wJLY5qzFMZGt
      +eascE11e4tndizrmz6qFyN9S7WYInNFfiTIctdEt2zBStuj60M17dJv+LDYZMdOibsgjnP2
      5xlFP8e3OVpIjJEoIUEI8pObHE0eY721Dgi8wHckaKuIwxirDZ5QGA8aowOKRcR4cMTqVtsd
      diRWZyBjh1b3IjAu2+17B2RkKXR6mChCjIZw4RFkdwU7GsKNa5Snx24OvrGFSOfYNMN2VxC7
      F+HoAabWqA8/g2g00Fdepzo9wbb7iEbs6ua4A9MT7HgEVQFxE1HkiHni5A/zMXT6zlKYLLBS
      gK4RwoPIR/gOgzKvS/ajBuN7t5GPn2PwxILTr4ypzz+EN58jn3+Ky196wB+OjshiSXF4RB2G
      9Dptnn78CerZnDyCb7xxD8+z9CJo71zk49kdquYq4egGskyw1mCVwzticSZsE2Dx+JNrM4bH
      Yzd+FCCsoKXcK1ljSYzg1qnHix/LeOxhy6ef7+CpJqFVbL2TIIyPpKISDSabzxLlI8LpddZO
      +gTTm8gqpQo7LKI1dnvvAR2srRDGd7QIrcgygTAa5QsCH4SvEI2IxdhQBBVh0EIodzJ0EFKL
      EKEEfpVhywopQwohGEQ+LZszk+8/FpK5Fdi6RmrB/WzGw94QXwwotUEIn5///9s7l99IruuM
      /869t6qruptskjNDzktDjWY8o0hyZDmGbQU2bFgGAmSVwEgWQZBl1tlmHSS7LLIyAvhvSGIn
      MeCFbcRKFCux5Yci2bKkmZFmho/hq7vJ7uqquveeLG4pQADpL2B/ADfsBsGuvufc8/jOd/78
      Dtu9h/SyCcbAsBeJ8SkmJzX/9MNHfP/HLb9XOMyTiNGAsWdQW4KPBK3xJ8q8gREzzi6WrO41
      gGJdGu43yQbY/58fsP7lP8WpgazXcZBIyX83Lx6zHmIcvXpB/dacs9Ea/aGD0CAakkvKBqjY
      bvTzE+jQzKf4/QPy0Yjy2g0WRY/mV29j1KODAXrtaXQwgEUDpkJu3k1rKw/30cMD5PJlwuET
      zAfvpbnd67dhMU9376APRwdoUSBZRA/GMJkhV67DPPH/9dK1JEfua2QwRGdTGI6gHCTRqKjo
      dIIveuxf2sLNKnyTEV+bU2E4W9lgs+hzcDrl1jO3kZ0PmMXAlhpGgx6T8SE/+rcfYNRw5cZT
      LDLLXrXgGYWv37oEusB5j5vtAy1ifDrdxqYhLjXE6Lk/6fH62/exGbRdaa6bcKQN6bvZyzO+
      8bs5VzdrjKxgGFCWlrX3AqbZJ1pLCI5YOC7u/hD8FG9LyulP0CZirJJPJ2TjX3Lh8kU0mk6w
      OKnWESNFGbq6vsFrpMgjvpmTh5LcFYhJIYyi2KrCyjwlk908siL0IlzsDynamlN6aExZTOwG
      jQJKUWQchIyRTijxeITfTEdsX3gXI4bcClENYgOD9ZrPv3yJb377Ib8ceV7s+ZSQdnLwTnwS
      0IhQKqypUsWcjJIizrvN7IbgFWtBpObx/Z+yffN30KZGRTDaKW3EiGKxxie1kLKPW9RMfz4m
      /+KIzJIS+1ghrQdTJn3S0Hy8AcSomBs3aHd38RGoDL3NTTxKbEOqS+9+mA51noMz6JMd5OgA
      3byGLCrk5BiubKey1XyKiIHTM2gWaJEj0yN0fIT2QbUCGwAAC9NJREFU15BbL6Btg6yVSUdm
      fJySzBiJdY0M1mBlFZmdpRi2WSDdOqE3C8fxygqL27fJ3n47KcGFlubxLvOq4dr+h5TrsNi+
      S1wIT4YZg4MJ7aU1olVenx0zvDBkPt/ga9cHuPYQsULwcxCf9gNIBLVAg6glhMA8rvKPP7mH
      U4hOWHTxf+yeX+uFiXXcfQ7ubFcUvUCWBTK7wC5KssP0J422iHVIOEqtfLHY0KJaYMwZhIB3
      Of2NCVG3EEnNLoNLnjlrsWJQr/gYcaYlNI62l+NCitSM0t2g3XwzQsSm+DguUnlThKFRFjFy
      QVoOYyA97ACAqOIbGMaa7XDMg/wat3TG9+Z3+dLgv5IkSU8JQRFa6sZx57JyZzvnR+8rn9nO
      iW3y7gbFiqAmiY8Za3Gac/j+FP/CVcKDh2lm2SgxJhqIlZbZ419wsnmb9WKEZD2ib7HGYGIg
      xhrT1GgN2BwnFq2UwzfGXP78KH1WkxMBianhRvYJVAisQQ4OcBcuUqyuMt/doW7aNKU1PUHH
      h0izQK88hQxGsPsYhn30Uy9AXaHVPCVZIYBvEnGqblNza9hH9/dTwja6iNm4CKdjtJ6jaxeQ
      8TESPLFZdGoJAptX0PFhNzdw1AW/ihweM7t8hb3X/5Pt/hpHVc1w6wrjnV1iqMmevwvGc3n/
      A74SK96oUugyrpUXDbxTz9k+8gyyHn/54kXK+lHKdaKSxU4tggjq6CQNiAjRrPCdt06Yn04x
      BhYI8+42Vk3e/yzC4oLj5ecaijKSZZA7MFmg/4HBSEXwRdLm8S1IuqaRDI2O6CuUgKplHnoM
      P7WGNp7QputeJdBUBiMDXLZAbEQlpNDBwfT4BBMVHxRLUp/GGGI30B6jEopVlIiZ7hH9jJya
      2WzKpOx3ByHx/cGkChig7gJzzqhizpuxhJgTW4vPwIUkkOWspd9XnG156XMb/O0be0xr6KtH
      VHEmhYjdqDzRezR6VqIwW9SoW2PgjzFB8RpxeVqEbVXYe/P79L/6J+STCc6VqSqn2ilPSJoZ
      dhZMnoTW2pyDX07YfOkaxBaj6dklx5b/n+za/z//gxH9m58iqxfMdx8S6wr8AsZ76Mk+OlpH
      bz6XxKxWV+H6TfCpFU5skdkZsrqOiGJmEzjeh8tbaVh7MoV+iaDIrbvoo3tJRPXGXTg+St1h
      MZD3kLKPbm6ie49SM+NoF22r9HpWohe3WAxXWGSWW8cHLIqCQj3HvmV1/wC7v0+hcDnABztH
      OKvcPzpksJpx/+CQiV+wLpF/uH2Vi/GAYIYYBZUyDaprRKMgbao7owZ8zlu78M57D8lJh3/a
      fXRVaKJSBzgS4TPPR0YDTVsvXVJqyKqMwXGAGHG2JnMxeUCnWCeIiVhXI/kQa3LUGMZ5zoUb
      l8AJLgecgQAuE1xRI5kirkfeL8DlGGc5PV5wdX0Tm2Wd4GxE1GDVYY3DZTmlUfq+oeiv4lau
      EqMhbxdg8nT4RRInyRhUMtqonGiPHb1AHaBSz8/aDfb9BhptMqr4kdNQYrT8wZdWaFBeO3UE
      U4L0UHGoyTsahsXkGSZ3iDXEXx9SbSVd/xCVqJ2GalRiCNCO2fv16zBYxfcyYt5LFchiCC5H
      xCLRYkyGKUqy4OHejKP7adIQTbe6hjNoP2FPMJljtvshIctg7yEymYKvU/LRKbFxYQuZHMO9
      96A/SGXOJzvIYoHmPWR6hBzsEft95DNfTPu0fIDjA3RRI2vr8Og+PPMCzE/Q/Q+T9GBvgDRz
      yEt00Ef2d2F1A52epFKHplow1Ry0ZeHhO8Me++Exa701Hu095qj2TEcWe/KAH/pj2Ch5/LNd
      nroy5tmJYDut+PXo+buvv8yN8BCxfYzWRNsHP0uzwZpqydXms/TGDyG0HPmcf/35++RGqRVO
      oxJdmsn3Qam94VShuOZ47qlIniu9lLuTOaX8sAQ/x0ibwhEFMQ1ikjpEcmUOiVXitXmH3Bwi
      HUEuAjbLUeNxsU06ptalEPMjVWUjaNXgrCG2bSrJ2jwFaUpS2hMH7Sx5YE0z2JtrBeViyjzG
      dDgRVpxwGjulauNQo0zYRHOH+BYf4c32DlfDqzi1GOPS7mQRVOD2ZXjuzoBXH1W8MnRpdtxk
      aGyJxCQZKelWcgKrQKU1Z3aFoR+n8McoQSKKx2GYP3yD2bVnGbiyK7/nYB3z0QiIlJMJhCRr
      74oBoW1p3ppzNsjobwywQkep+IQqUHxwjzA5Ao3ovEIGfehvJq7/6ipyfEj46X9Ar5eYn+Ug
      acFnOZoVUM0SpeGzL3dNrBa5/w46O027tYoCQkwluPkEbdoU9+eDVOfvlUhs0PEiqQRPj2E2
      xqgkGcRyAEWJUEJb04zWuBUqVq/cQHbfxQwvsrq2wtAIJw+m5BL471lg5UFLvrVFJpZqNuUv
      Xvkcn9Z3UkUTi6IYXaAuA5Mz33ieWoRcatpLt4nTmm//+G2qqmHg4DBIauppsu0mQKWw4yx/
      9OnAxlqk3xcGJfR7Qj8K/ZOOvBaFgIUIRpXoP5JiSd7TxIoYMhY+o39nM5UmtUVNhoQKv9CU
      I8V0azi7SIm6M0TfgrcEDRibJ4l3k2OkU6Z2ZVIqNKSbOEA2GODF0psukMwlY0SZxnRziI8g
      lpu58uyg4Uk1443TtA/g+/Pn+HL+KgYl+khslKIgkfFayze+NuSvvznnkWZcN4JmGTGA7TSC
      BJ/ymMxio9C+O8X+9hW4NyZExce0kUhIIV3PwqP3XuP2S7+PWbREa5F2TtnWqDhiaNEsyaPE
      vAd5jqsXjH8j2JeUMk/qH3ySOjTDYZruOjqECxuJZloUiCrxN++kRtDTdxFn0bU1OHwCVQWn
      E3S4iqyvE/MB5vAJjEaYe+8ma8976OkE6ZXw9G3kg3fR+SmyqFKTxgG2jzQNWhRweormSfZE
      ihW0yFP92eVJaOrkABYVj0zBVuZZ1cf4wnNq+ohXPvviHXZuXOeF2Smv/vOrPFUaQvRcamY8
      /7lbfNk+QAikJQGAyRL/RTyIo1ftUtRjpG6IoeDfd3vs7BxSCJyp0HSHv26VJgpVVE4Qbmxb
      trc8REM1V3KTFB4Hjwoy59GghGyd2g7pt0+SeGvnvbVbHjGre5QOxips377eHV6LGEPwBmNr
      mrbAB0vmWtoGWq9kzpCVikxrNESCthhrMUYJYoDYlRZt0klCMC4jhAZnI8PQgg+INkk5jmSw
      dD/TKIzbDLU5V0tlpzX8It5EPCxq8DHQSJ7COFEMgT/+aslf/b3y2jTyhxtZ2t5o0q1VxIoY
      haipO62q9OuGdnHCCSNWwziFYjY5BmtImz2fvMf+h7/iyvXfwjQN5EWaAbAG8TUhGDg9RXQK
      KCYGevMzDn9ScuWLl8isT+XkjyPD/c2/fBdfLWDrCpxOQAXxNXE+T3Imw9U04J73koc/O4OV
      UfLsBztoOUSMg5UBOj2F2TS10ctBeqC9HpwcIf0VtE3it8krRugPUhIdY0pQXE5sF+mKF4Fe
      kd7b1N1EkmK85wtnO1xbLZnjaLXHPCjl7Bh79Rni4Q5vnFRcC4oWJaPc8pVnhhhfpw5pd5BT
      l61TccJ0OY2i0dHaIT9+Z5cYUm36o6Q3RCFoUl5oI4yN8PwzwqV1ZdCHshBiMORWWTkscNQp
      RpaMqBkm1klFGek6lomuHJqkcHba77P+4k00JlXp1IiIRN/QNHk3tSWkafVI5kCzjIP3x6zr
      MA3CmEQcS4c4fcfJ0E16xl3TywfPt07XOBo93b2pOxAdNyj9Lqbn0i2wAIMzjj8rvscgb3BW
      sDbRtI2JiS6thm99dwIzzyurFhWPkRysRXyTnBkp1v+I33NmLP2rK5ijaapZWUPmEu3aWIMS
      UVNy6c4XkGae+hym40wbR3R54jLR/e/Bp42c1hBWYWW93yXDH2MASyxxXvCxVaAlljgvWBrA
      EucaSwNY4lxjaQBLnGssDWCJc42lASxxrrE0gCXONZYGsMS5xtIAljjXWBrAEucaSwNY4lxj
      aQBLnGssDWCJc42lASxxrrE0gCXONZYGsMS5xtIAljjXWBrAEuca/ws34Rdg/EfB0AAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='First_Page' width='192'>
      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
      AkBYf5aNJQ83AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Highest Imports are from China' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO192XNcZ3bf7+5Lr9hIEJQoguCilRpqVml2ezYv4/F4Ylc55ac8JP+Dn/Kc
      POTdlSq74qScSo1tpRJnxrI0+2hGmtHII0oiRYrivqEB9H73JQ/N8+Hri9srGkA3un9VEgF0
      9936O+c7y++cI2xtbcWqqmKGdnieB0VR4DgOwjCEruuQZbnrZ+I4huu60DSNHUOWZUiS1PEz
      URRBEAS4rosoina8LooiO54gCDuuMQiCQW9tbKBpWtdnsx+QVVVFJpM50IsYR5BScBwHkiTB
      NE0oisJej+MYQGtRxnGMOI4hCAIMw4AoigCATCaDMAwRhmGqIARBgHq9zp6/53ns2LTYBUGA
      aZrsmDwMw0Cj0WBCQO9JE6RxhKIo8Dxvx7PdT3RXaVMGWsiiKEJRFMRxDEmS2GJPvjcIAqiq
      CkEQ2IJNW+T856MoYp+j323bhmEYiKIIvu8D2BYsOlcaRFFELpeDbdsAWho1CAI0m81dPom9
      hyiKCMMQpmn23Fn3EjMBQGuBeZ7HTJhcLgdRFCEIAvL5PICdC1sURfi+D0VRdpgmPHRd33Gu
      IAigKApkWYamaXAcp22xK4rCdg9JknqaCaqqwvM8uK7LBGjcEUURPM+DKIoHKgBCo9GIp9kE
      iuMYlmXBdV0ALS1qmmbXRU0g+73Te+M4RhRFzDThtToA2LYN13URhuGOz0qSBEEQUCgU2GfT
      jt9oNCZm0XcCKZqD8AemfgcIwxCO40AURURRxBZjGIZsFyAkF3yaXc6DBEsURWQyGbZbRFEE
      x3Fg2zYEQWDHIROM/7nRaMA0zdTFIQgCFEVpu+5JAWl+wzDg+35fCmcvMNUCQNo/jmPoug7H
      cVjEJWl3R1GEZrOJTCbDvqw4jpkZBLTsffoydV1nXy59lswhURThuu6OHQHYNrXo75IkdRU0
      XdeZGUW+wCRAlmX2LA8yEjS1AhCGISzLgu/7EEURkiSxCI5lWQjDELlcjkVkfN9ni5lfkI7j
      QBAEpoEdx0EURZAkCaqqwjAMuK4LSZJg2zYTtmKxyAQoCAKIoghd15lw+b7PIiT93IvjOABa
      wkXXrKoqwjAcSxOJlEU/Ps5eYmoFIAgCRFHEHFFVVZkTTKZJtVplpouqqrBtG1EUtWltWZaZ
      CcXH5CkUqWka21VEUWTHpt/513nIsty3c0jCG8cxNE1jkSxCGIawbXusBCGKIjQaDaiqimw2
      e2DX0d2IPcRQVRX5fB7ZbJYt7qQ5QrsEb5c3Gg3UajVUKhUArQWe3CG6nRNAx6QXOc30Wr92
      MZlcuq6z3Yx8FUEQmLlxULH2bkgqlP3G1AoALQ5aLBSXJkeXnFDf95nmV1WVxeppkZL2VVW1
      LXpEC5lCk7yDS3/3PI+9Zts2arUaarUaqtVqm+ANck+dQDmDcQOZgAeFqTWBeAiCAE3T4Hle
      6k5gWRYsy2r7m6IozKSgxU8mFJkigiAw4SkUCm1an2z25LEIFD0yDGOk9ypJ0lhFjCiKFQTB
      geQDZgLAgUwFcmIpFEpanBY1ObLkcPLgeVW0owDt9IYkOtnme2GyZDIZ1Ov1AzU7CKIoIpvN
      ttFF9hszAeBAkRig5STbto0wDCEIAnK5HKM9dIIgCG28qjiOYRgGC09KksR2GjLBOmnjbgm2
      3UCWZWSzWdTr9ZEfe1CQj3WQTvBUCgDREcIwhKqqqXF2URTbkjXDhOqIHMebMZlMhu0kdA2U
      cCOfJAiCtgTZqHFQSScevI/F51L2G1MnAHEco1KpMM1LCxwAI8HRz8QDGjVoq+8kVHsdFx8H
      AaDoFCmag8LUCQCwzUQEtinJ9PdCoTD0AqSQHpG8KCZfr9dZzoFyCnw2mbBfC5OujfhP+w26
      Z1EUO9I89gtTFwYlM6OTE9hoNHry6Snaw0dy+ByBbdssmkRFK8R+5OkKYRiyzxBtmlidFCpN
      0qlHAT4ku9/IZDLs+VPE7CAxdTsAPfgkknz+TlEbWjwUpuRB2WCiNAPbGWd6Lx9JajabrDZA
      FEXU63UWEcpms228/t3sTGn3ehBal3wv4kiRCXSQmLodgBzPJCjmLssy6vU6007JohTP81Cr
      1ZhJw7/GV25RdpgPgwLbYdIwDFkCyDRN2LbNahJIwKgoB8COPMRuQAJwEEJg2zYcx2nLXB8k
      pm4HSNP+fGUVvU70CN/3kc1mEQQBWzS0qJNVXbqus9csy4KmaW3lkcTsjOO4jbyWFg4NgoDR
      NIgi0S2XMAkgJdNoNA4s7p/EwV/BPoLs8CT4InaCZVlssXmexxZ5WmSIFnGtVmv7exzH7EtW
      FIVpXMp80nvodT4hxjvJdC3E+RmFENAOtVf5hjTQ8+iVT9lPTJUJxGdmCYqiMBpD0iGjv1Fh
      C/F7aFHz9bumae7g2pCNm8bp500r/rp4Aluz2USz2WTXMUpGJ13XfqPRaEDTtLHQ/sCUCYAs
      y8jlcm1sSdL+VKDCgxYeLxh85ILfMWjRkpNL4U4qrO8G2mH4Y3mehzAMd1zDqCInyXLN/UIY
      hqjX65OxA1CHgTSzYTcIggDNRmOkx+wHtODz+Tz7mTSRpmmsiiv55fC/U58gAGyB8u+jCq1c
      LgdZlhnrM/kM+WPywtcpREl/I3ZqvV7fFYuShDSTyWC/+kLJssx8GWLBHjQ67kO+77METhRF
      Pbsf9AO6+d+8+n1Ur1+Fdu45fPIzLyEG+qp8GhVkWcbc3Fyb/SvLMiscoTDlMPdLPYTIxian
      utlstjW4yufzLJdAMX9Cp4VB10QONPUaGuY6yfGn4hlalHsJniHbbDZRKBQOfCfoKACSJDGb
      VpblXV9opVLBr175HvTAxdmggetRAPHy2/j59SvIiAIyL7yE888/v6tz9Is0x49vjULpeb44
      hd7Dg8oNk8qhU/6ATA4SjmazmVoX3C9IWJO9ifoBFedTBzyepLdXIO4VtYEZhx1gz9uiBEGA
      8uYmXv3Hv8eaX8fzi/kdX7oXRXhl04Z49DEUhAgLx1Zw/MlnkM1moagqyxwO8+WQk9mPpqQv
      hTdHPM9DgzPXaKHx7zUMg0VnkufY3NxsywHkcjn2eapJTgoaD9qZ6NxpIG0+qFPLl0pSKHav
      BECSJGQyGZYsJJ/poHcAodFoxGT3jvpioijCj//p/0C7fhlniyYUUYQhp39JcRxjw/GwqKtw
      wggfNlx4mgGpMA/jiTVUb9/A4qnTOPvs+b4cN4qsUJG7qqqptbfJa3Ach2VzaWEmF2ea1hZF
      EcVise3a4jjG5uYm+11RFOZ/8CD6A52TzkFZUwBttcRJ0GIalFfjOA6rcyDfYq+cYlJiRAkf
      hUk9CsjNZpNpgDiOoapqR202KO7dvYuV0k2cXNqOnXfa9gRBwJLRWqCGLOHZQuuLj5wtNN8r
      4ZQsovL2ffzizm1c+NLvsoWRRiojLg4lpizLYpQDoh+TU0p2KSFZotfNISUQqYt/3XVd1hWC
      +D/kbCZ3M4oWUXKID7PSgqQuCvzz4s+XdMj7AV1nFEUwTZOZgHsB2sVIKY1LfbLMt9QAWlqh
      0Wggk8n03SGtE0p3b+Mxub/Pd3rwogDklJZWW9IUNG5fweVLK3ji5Enk83lGF7AsizWypS+S
      L/pwXZc1ktU0jdnftm3DNE1mR5umyUhonYhoyWZUPLUX2Ca5aZqGbDYLXddRLpcZDSDN+aMC
      HL74hu9RRMLMC2fyGINqb03TmNClVbftBXhzcRyQ6gRHUcRitWlhwW6wbRvXrl5FZWMd87ev
      ssU7DNLOS38KwxCVSgX5fB6iKDLiGB87T4IWPWlSek+9Xmd1vRTFoffzygForx8gE4LMLSqo
      J5/BdV1W8kfXRiYKKRm6R747XL1ex/z8fNtzSHPa+Wc0zKKikkQATKCT3fBGBUEQWj7dmGh+
      Qtd0HFF7i8Vi37bl1UvvQ3rzh/h43oSoCgCGe5idIinJ36vV6o7Xu2kyEg5+wVFokZpcCUKr
      JyeZI3wKn/rZULtDCiXSNdNnq9UqYz+KoghVVdtozo7jsMQZAPY+PnHGPwNyIkno+HYiFNEZ
      BpRhJox68VOUim8bP07omY/2fR/VapU1L+31gGzLwoIsQxzyQXbSdNwfun4+bfFTSLPT+9J+
      DsOQNa3i/QyK5zebTaiqmkrppV2BFneSg0TMTr4TAk+roEgRD2KP6roOVVXRbDbbmKbkvGez
      2YEWGvkBnueNjBpBPg1lw8dx4RN2XJkg7KxF9TwPW1tbqS1DkvjkS59F/OJX8L4dIRrCpuRT
      /90SQqQBe70X2G5q2+08ZMKQtqeoBTWytSyLJQRJYzYaDfZcqLNBGIZsMgxRHKrVats10LXS
      c+Z5//yMAB7kP9Dn0qrKKHM/SE8h/nyjaFJlmiYymQzzfcZ58QMddoC0hxBFEWM7dsvaiqKI
      M888i7u5PG5+/7tYzY22rw3Qe3BEx0+mhC95c4jgeR4qlcoO04LvIk1IclvIjCHTiux/vvaV
      5/XQQuavi5r08kJLtjnFzklz030RqMic73DRDXyXun54S91AIc5xcXD7wQ4B6LWoKNICtKIh
      nST86MoKrq+s4frV93A6q+NEdtSCMDjS7o20fRofJ/n+btwb3nTiwdOq+Uww/U7FNTzS6MKU
      rKTF36t9Iu1YvYIYZNYOm2jkMQ6JrUEQx/Hg9QBhGDKCnKIoqQ5ytVrFB+++i2NPPgNb0fGj
      X/4UZ+fz+PRC9sAeUBrdmCrASAsSCxPo3shqWKSR7MjkIuEiQl6nzxJnp9FodDwegYh72Wzn
      584zY3eDUXWx24vn3u1cXQVAELZbBtICIjsXaG235XIZxWKRRUvef/dd/Pa1f8bzOnB5/RQW
      jhxBHSJy8qhswXiguBKvySkiQVlI+vJVVWUcFf5z9Jl+kLTHOy0qfoHS67lcjvkavTQ2RaH4
      Y5EZZ5omknmdfsLYu11w1Bu1X3uf/I4kC5V8GMrL7DWiKOq9A5BHz2tGHmRC+L6P11/7Fyzd
      uYI/PmJCEgQcqd2BX7mNtdUl5JX9L4BImjFEL6Ddiy/KoJDlMOAXeze6Au9T6LreVlhPC6KX
      DU5BimT9ANBuOpGp2ut4ZJKR5u1XGOi4ybkGvRBFEevLxE/RTNKj96Ng3rbt3gJAvWyAlsNE
      FUpAq1MBOT2SJGFxfh43L9k4qkrIKjLy6t4kPegxpdEg+CgWH9kh8PW8lPwJgqDNGey1mHcD
      /piyLEPXdaZgOnVvpgVCplJSCdExPc9jodsgCNoSbZ1AO0ej0UgNCKQhOVp30OeUyWSYtucj
      YiSInueh2Wx2Nd12CzpPqgCQJuDnWtFFUp8b8vjpgYmiiKc/+WmU7tyCYpVa2heAH8e4agVY
      1SVkOhDhBoGQYgDxD4nXYkmHk26cdgJiJfImwzD2cFIAk2ZX2vvonGS2BEGARqMBwzB2EMX4
      IX5p507T+v22Qiczl5zmXjY4X+8wDEhB8RqfT/wRr2kvtT8l/8IwTBcAXdfZ/NZkNrJQKDDO
      SpoT9tSLn8dvX/8xEARw/ACypsIxVByv38dekK6TX1hy8fGvkRBQgTt/3fx/vdApnMr/2+n6
      eNBipTg8EfGIC0Qg7hHxnijXkEQYhqjVajBNs68QKH8/acnCNOzWSeUDEDwlhV/wlDneS+1P
      betTBaCbM0YpeQBsW+YXztFjx7D07T/jFmKMWzduovGj25hTR+AHCAAZQbTYOn1x/A7QyVzi
      /90rpDniRHYThG1uEgmEZVltk17SMtLVapX5LGlzywYVAEVR+vKBRhExIgVCLSrp+ZBg7CVZ
      Lo63R8vWarXOiTDi0He6AQB47ZV/RrW0jtW10zj33HkU5+YAbFMPRFHET3/wA8Bu4MwIzJ9O
      18prJYqR81q628NMM1F6Pfzk+wZNyGWzWbbtEzs1iiL2dyqIT+ME0e+5XK6tXlvXdUbBGCZB
      SL1Ce937qLo5kFDzvKhhu3D3C6q7cByHNR7reDdEKe72QF783OdQ3tjAez//CYxCgQlAHMf4
      3sv/gFppHRe0GMtSDEPbG4c4aXPT+elffnsl7ZXmRPKfSVtwvLbiteCgiy3JtqQoGp8RToYU
      065JkiTout4WnaPmXsPU9iqKwnaBbpGsUU2soXNQE4G93IUpa16v13fUJewQAHLAyNbsJvHF
      4hyKxTmsnj7T9vdSqQT9/k18Zd7EsGzQQZDksvP8nuROkCYA9BoJCy0s+jyZg77vM8YonWcQ
      ZLPZjl0nKERKcfAkSAiSplShUGhr1EtO9aAQhFYtRLfBGXzrx1Fir01Qz/PYVJzk989WN4XD
      yMMf1tnxfR+Xf/Iazmf7T2R0WpSp7+X+3+lYtJj6DevxoKKTbDbLGJI0yYQwDGGsH8eOhI0P
      44qiyAp5eCeYaoApn0FljWkJpn5BlO9OptBBtjEnDJqgpF6uyc/ROpEp3JmMuQ4rldVKBf7d
      W8gfLfSkLifhBCEqng9dllBMySEknVbe/OFvsJs5lLYLJB1jTdPaTIxkUcygXwKAvmLaFCEh
      kCBIktRWqyyKIiqVCqtZICeW8jXDKi8SwFH3gRolBr0vCrfy4fA4jtkzFU3THGnCoTg3h+D4
      Sby/VYcf9S8ATT/Aq40IL9/eQtnx8b+u3sWbD8tww3QaMZ8pTNrkyYXOJ8TSTCUeuq6zhUSt
      CXvN9O21I/ST4e0GPlLC32eyoxxhN98lCT5/f0A7m3VSwGf36X743EMcx5CHaawUBAE+uHQJ
      Tz79dNsXG8cxHMfG8ulz+Pm776DsBTiqKziZMyGLnc/hhiF+sOVgQRFx/vg83tus4kaswNLm
      8ODOOtbyJp6ZawmpgJZUW1YThmF21eZpCzMtTs//jQrqR4lBQpKDwLZtWJaFfD4/Uu4MFd1Q
      NJCfYTBp4P2htITlUHckiiIM09wRbbh//x5e+Zv/ivtXLuGFj30MqzkDr94vo8vaBwC8Waqh
      cO4ZnNBliABkRUG9XsPy8lE8960/w/rRVbxe8/GWJ+Jyw0PpVz/D3//NX6NWrbZp+rS4/6AY
      xr5P20l47JYmzLdz4U0+0mjJXYCy9cOCdlhqtUK+waSBAgX87wSKdo20MVYURbh1/TqMTAaF
      QgE3r30II5tD/ZV/xOncTi0YxzE+snxUzjwPVZFx7cevQjyxhi985auoVWs4tbbGbDVa4OWt
      Ldy49B7efustrC7O4Znf/QYuvv4z2JaFF7/x+ywilBYeHRTdkj5pCbXkz8D23LHdLCDXddtq
      n5PI5/Ntu0y1WmUF77s1bTvd56SA+qgm10KtVms9n73uDLexsYGLf/tXyJgGjsoC7jVtyIKA
      s8UsNEnCDzfqeOoPvoN79+5CEER88jOf6ZlsieMYpVIJ7//gFXz0sIS4VkbJcfHSF7+Ms+c/
      tuO9wM7oUD9IE4Dkg+yVGaWFOGxqn9iT3TQ638ImiiJsbW2lNuo6jOjV4ToIAsY+jeOYFXHd
      vn0bR44cgfSXf/mX/3Evt7dms4mbDQfLL3wG90QdFdWEU2/gTFZDDKAsyNgSVAiShJc+97m+
      nEWKXC09sYrG/Tt498YtSACijYdQ8kUU5hfa3ksLj2cc9oNklrhT/qDbwo7j7U7IwwyGoC4S
      3Xg6vHBQQ2O6tkmr0uoF+g4oJ9OLNi0IAisMUlUVxWIRuq5vZ9n3egdIwrIsvP23f4XnMgpe
      twHx8TX84qc/wac++zl8/RvfGFhjeZ6H//Kf/xPW10uI4whrx4/hm3/+F11pHLst/h40XEyZ
      5IWFhaE0Mmn1TtEo/l86F/1LY5YOC2jGG7FXaZfr9j1QVw5y5Mm5r9frux+QYVkWGl2yhzzi
      OMat9y5iUQLedCU8/pnP46O33kQWIU6efGKoxaGqKr74pS9DEgWYmoZqpYI71z9impn/j65h
      FBqxl+bnQbvHsD3xRVHc0deUd4bTohuUMBukQ8QkgO6Ppm9Wq9WeeQvK7hMNm3YDURR3LwBJ
      bncnhEGAf/3l62i89TPchYLzf/htnFw9hbqs4qt/+ud48qmnh76Gp559FidPPA5JVdH0fFx8
      69c7msmOahEMYkLxoC+rVCqhVCqxuQD9Iq2jWtp1JHMeh2nxA+07OAl5vzkW27ZZwzKKcO1a
      AHRd7+q0xnGMSqWCt374KuTf/gLvuQKe+NLXUZybgyhJ+PaffAfPPf/8rrRyPp/Hl7/+exBl
      GXYQ4c69e/jZy9/F7Y+utS2CtAWRtkt0Av/6MGYULU5q68jb62lIanb+nP2eu1vr9UlEcrYZ
      P3ywF8hXIqKn53mjcYI7sfmiKMLVdy/ie3/3P3Dt7j3YC8fwe9/5UxxbWWG9dJaPHdu1SSII
      AhYXF2EYJj68/D7cIIQWehCjECtrLaJeN+pDvwJA70/7t1/w5w6CgPUa6uSs0sKn5lrJY/S6
      VjIXxqkh7W7AKzEyg6iOotf9UUtJwzDgui7K5fLejUm9deM6Lr79G3x46RJOP/c8LNvG0eVl
      LCwuAgDmHlGnRwVBEHD++efxi5//DBulddy3PZwxs+w1oP/McDekvX+QhZX8fBiGqFarsG2b
      USb4xUq1s4MmtvjroiEftFtPqiBQEQu1syGiIrWp7HVfFy9ehGEYOHPmDAtKjDwKFIYhSuvr
      eOOHr6Fw5CiOHFvB0888gziOUavVUCgURnauJOI4xtbWFjZKJeTyeWbrDWMPJ0Om3T4/jEPM
      nyeJpaUlNpB7c3OzK725k3Cn+SqC0KI872Wx+V6AntmtW7fgeR7y+Tzm5+chCALbGfvJtfzd
      f/9biFslZE+exulz5/DhBx+MbgcgTfW/X34Zjz/+OL727e+0FU8IgrCni5/OQbwYXddRr9fb
      hn90cmCTf6fFzy9sqg3ox55WVZVtz2nnSvuZBz/SqZ+F2ikxl7ZbUdvFcZnQ0i8qlQoj6VFv
      pzAMoes6LMuCZVltjFgeruvi+vWPMD83j1zkYiGy8OBXr+NTR+Z2LwBxHMOxbfzi9Z+jVCrh
      woULePa55w7s4ZLmFASBDZXotnjTFgzRLvjX6fNpDhdlGYkxaRgGUwhp6MdWJVOF7xrXz3HS
      dqqk37G1tYW5ubmeI6PGCTRsnM96U48nYDvhmBSAMAyxUSrh1huv43hGw8qxJWR1DWuLLRN8
      IAGgh1ur1aAqCmRFwfWPPkIQBDhz9hx+5ytfHdHtDg8q7KF/BUFgDne3ECYvBPQevplt0tZP
      5hXoM1RQQxlKXuhIEJM7UvIY1N+HSGjJegTCICZd8r00G2xSkHav1E6Gnil1LyeTnmgkDx8+
      xIKu4MnlpR3H6CkAjUYD9+7dxYP7D1CpVLCwuIjy1haOP/YYnn76aZxaWxu/qR+P7H4ArPDa
      8zy2IJMRIdLeycXJIylA/OvJkkzHcVhPJernkwxfJhc9f1xic3YbW5QUoOR18u+jvyezxZMC
      vpWipmnMxEwrVErOTHBdF3euX8Mn89nUY/cUgPX1dSzMLyAMI3z8E59gjsY424/89QmC0Fbm
      lyYEaZ8nJLV/mmDQQuVNLX4wdqdj0+/Ja6Gu0aZpdtT+9L40dMp38OOdJkkAWMQmse40TWMJ
      RfqOaO7Z1tYWNjc3Wx33mlUsHn08VbH1FIDV1VUAYOHLSYMgCDsqqshP6BbZSdr7aZo/7VzJ
      96e9lhTQtBxFEARsHkPyM/zfepl09K8kSSgWiyxyMknmT9q9E7+Hr2GnwMHm5ia2traQz+dh
      2zZq8raFwj+vW1uV3gIwzpq+X1Cdq+/7LHacRJp26ORMdnomyb8ntfdunmXSlKHrTZpiFOKk
      HYni5fQf1Vb0cz/jDIr4JYMSNO2+WCxic3MTsiyj6u1sE9N0PVwJ5L1LhI0TZFnG3NwcarUa
      I0LdvXsXPjcXV8CjxfXoZ3B2cruN3Xp32pppLUzOQY4ibJW3MFecw/LKysjuJ2nzA9u1vMl+
      QjROiX6n4vpqtQrTNNkcr0kDv/Bp4r0gCIz8J4oiFhcXW5NBC/N4734Ja4tzMB41WzA1FYWo
      sf906INEFEW4desWHNvG9/7xu/id+VYb927YtXKMY9wRNIRHjmPh6DKOP/44oz5kMhnIsoxa
      rdZxJnH7teyM75OPo6oqc57jOEaxWGRmDp9V3tzcbPu8aZqpQ/nGHbTDEbeKNxeTCIIAVz64
      jGOVh1hb2h4/6wUdmuMeVoiiiA8/+ADxpbdRqdawvFJAsY+OdUlbe1Dqw2kAsXUfty5exwdv
      /xL3JR1PPP0scrksTpx4go0/TXN408KzyeMDYN0rBEFgAyuSPglFwuh3iq50ym+MO1zXZU1u
      08CbirWNDcxHHm5vVbCQNeGHEX589fp0CQAAPLG6isqVt5ETAV3aNhe6OZSDxNs7QRAEHM/o
      uN2M8MJnv4BsJoPfvP5znDq1hmaz2Tari/9Mr+xzHMd445XvIwp8PPu5L0LVtI78JGo8C7QW
      D3WZHsX97TdI0Cnjn7wPXmFsPrgPvXQXkSzgjXse9OXjMLNZLD77wvQJwNrp0/if37Xx7595
      AuqQocBOC6wXyp4Pv17HlR/9C84oEU5GEd75wSuwalWUtso4/tzHcO7pZ3Yk1tJA579y+RIu
      OJuoeh42NzZw7PhxVjVF76NplDwRjmgFe9mGfK9BCiKbzaJcLgNIb33y5o9/hG8dy2G92Wq9
      UxFEPPn8BbiuO30CIAgCVN1oc1aBwbV8vxEUfjEv6Sq+vLLQ9vpPrl9FtHAUddvBlcuXcWL1
      FJaXl1kuIRmxSlI3mvfuYF5XYAcBNh85gsQwlSQJsiyz2tlOx5l0UItI13XbND89+/MvfQ6/
      uPwezJXT0E0Tnz65Ck3TWi1fDvjaDwTzmgJ9RO3a+9kN0pxXALhvObihZPHsqTNYK5ewKPso
      ra9jeXmZjTmi9L4gCKjXqrhx+RKCMATiGFG1jGdhI9IVHDE1vP/hZRjnzyOOW92QySGmFoqH
      GbTwk2aQIAhYWFrC4pEvsyQg5YJyudz0CYDrulADD0DnYd+Dol+TKGnju2GMtUdM+VgAABd1
      SURBVFOn4Lz7Fj69kEE9iHDNsVk0h0ZRiaKIcnkL937yL3jRECGJAkQAgiEgjhVc3KrjaqTg
      Y59/Eaqqol6vI5fLtXU/OMyI47itdX1S0dAuWCwWGX+IzV07oGs+MJTW1zGnjUncWxRx4sxZ
      3L/2HjRJw42mh8rFt1A5ucoG3D148ACIIjy4dRPPyDFUznGP4hhvNwNkX/oK/vjJp2AYBsIw
      bBteeFhAbE9SCnwFGOU20igwRCzMZDLIP6oRoUJ6y7KmTwDW79/D2ezoenUOusj491uCjBNz
      c7ittEKWTxZMROUGELc47+WtLVx99f/hqayK85qCOb09ZFt2feD0czj/wsfZ36il4WEDNbhK
      CwoEQYB6vc6y/IZhYGFhgQ0KpOZZZCJls1nUarX+5gQfNswtLqF00cPxzN40rB0EOSHC9WvX
      sCS1hMINQ2wurGBRUfDWG7+EeP0DfPVoDlpKtCpGS5ge3r/Het4cZkRRhI2NDdbNge6XhgfO
      z88zKrrv+20ZcfqZzB9N05DP51GtVqdPAI4uL+NdZzwE4HFDgfreL3H00TARSRCRKa/j+vdf
      xjNKjGJ+Z5LO8kO8V67jRt2GtHICgR8eKlOnE1RVxZEjR+A4DhP4ZMiT6CCGYaSS/fjmA9Ql
      buoEYP3BAyzq46EtBUHAsrn9RcmigBcKeteQ7K2GjQ/MRXzqy5/G2XPnJorVOQokC3l4ciBp
      9k6OPxEByURUFGX3fYEmDU+sruKOePDan5AWukvDnYaDlz+6D0uU8Iff/CaeO39+qhZ/GIaM
      usFPz+T/42eYpT3HtNYpUycAgiDAWDkBN9z/ZlHd6g+6veaGEV5/WEYzjCA8+TEcXV7ey8sc
      S/CZ7WQxTzL6w//Lg2ap8ZhKAXj6s5/HKxUPr9/f2rfzpvFU+s0+u2GEj2oWyrGEs889v1eX
      ONYg271Ti5hOHSF4UPiUEATB9AkAAGRzeax++rNYzu5+5u0gC3lY5FUZC7qKcy98AnPz870/
      cAhBdQ3JhmpUBpnP53fsDMR4DcOQNQrmW82nzgmeFlx44eP4xW/fwKk9PMcoBeNcwUCFG9U6
      bRCEVl+pfD7PqN80UpYfK0s1wvQfPyRvY2MDi4uLME0TmUxmNN2hJxWiJGHlC1/DPW9vfIF+
      i+77xdWqjXq1MtQQ7MMEokGHYQhRFFkDMs/zUC6XUavV0Gw2Wbg0OcmTaBOEqRUAADh55iyu
      6UWs26OZi7tXptDdpgNx4Qi+/gd/OBXcnl5wXRe+72Nrawvlchk3b95EpVLZMbQR2B7vGoYh
      C3/yptJUlUSm4e7du3jvnXcQb9zHBdgoyIPrhCTbsxP7c1DEcYx3mgH808/ixS9+aaJamewF
      4jhm3TIoLCoIrYZYSeJfMjJUrVZZ6SfPjp16AQBaEwPX19dx5+K/YqV0E1YQ4njGQF7t30Xq
      VDY5rBC4YYT37RCPff2P8diJE0Md4zCBCvrJ/qfFL4oibNuGJEmMAJhmYlJztFwux3aE+fn5
      mQAQ4jhGvVbD9WvXoOo6bl+5DOnBbawpMRY0BdKjYccPLRdeFOOIocLsUVPQrcyyG6I4xi99
      BRf+6N+gOOI28pOIOI5h2zYajQb7HWg9X2p7qSgK6xHUCbVaDYqiwPM8KIrSYtzOBKAdNDyt
      WCzCcRy8/+67aNy5gchtFazHxUUsraygeuManm2uo6B2jj33IwBRHLOWLIRN10f9U1/BuaeH
      Hxt1mBDHMcrlcluTYFEUWWuXfjPi1D1CVVXWP3Rqw6CdoGkams0mq5c9ffYswrU1AO2aZ/nY
      Ct750at4MWpAgIAgjqGKKXOFAQRRhCCKIYsCBAj4140qmkYWrmYiCCOEtTI+ldfgAziuK7hR
      t3D0kLM7dwNRFFv9fgRhIBYsfS6b3e4TOhOABKhUzrIs1l7Etu3U9y0/dwG/fuPHaEaAuPIE
      Hnt4HWcy219IHMe43XTxWymL46fPwi1vwSlvwBFVCIsr+NaffAdAi+D17sV3kM9kcfn11yDF
      QOnmdaydPr1v9z3OoFAnRX9EUYSiKIzv3y/SusnNBCAFmqYhiiLYts3aKvKNq0jLLx45AvN3
      fh8xWtPar/xWwcbdK1g0VHhRjH+4WcKF3/0avvXCJ1ia3rZtBL4PiStaURQFFx4Vtfym9BBn
      r7+D1377Fiof/ySKxeL+3vwYgXoZ2bbdVt+8G/o39YWliNpMAFJA0QVKsBSLRbiui3q93tZs
      CQBMzn86+/wFXAojaBsf4bX7ZXz93/0HLCeIa4ZhAEZnCkZ2YQkPLvl4ad7E/ZvXUSxe2Jub
      HHPEcYxSqcSUDjXBMgxjpLmQ6Q4sd4GmaSgWiyyLyDtb3fg/x0+fxq99BYKsQFEG1y+nzpzB
      dXMBIgBviqkPjuNAEAQ0Gg00Gg02c6Fer3dtGd8N1C1jlggbANSysFAosLpUyjimxZypk1sc
      x1heXh4qedWo1/FP/+2v8dlvTmcOgKI1ZHqSo0vPslwus/6ng+wGcRyziZJ0zJkA9EAYhmg0
      GswhphR8GIZdm0stLCwMPTmHNNVh6+zQD+I4RqPRgO/7rG9pMsy5vr6OTCbD5gMMUhgURREa
      jQYEQWglxUZ9A4cNFBUis0eWZczPz7eNYUrDMJqfzpH2pU8LaOEDLbs/TcNTZ+1isQjf95lv
      1g9o0J5lWdja2to/J9hxHNRrNSwutQaVTZJmE0WxbUEqioJisYiNjY3UpljDcnZI4/EjVmm7
      ngYeEGV8Ca7rtsXsCYzH86gvqOu6qFQqyGazXXfdOI5hWRZ838fS0hIEQdg/AfA8D0EY4tdv
      vAEzl8PJkycxyaaXoihtUyDTWpHzE995EKmL5gHzRdqk/Ym267ouLMtCJpPZkfSZJCXSD6rV
      Kra2tpg279e+p7nH9XqdUSKSIL9C1/W2UOq++wBxHOPqlSu49P77+OrXvtYWRpwkxHHMhrCl
      +QI0lSb5JZIWqtVqiOMY+XyedYHrdB7XdRmPhQo50gq8Jx2NRoNVb3VDtVrtOHSdGgqbpskU
      CykRmpHGY9/3VUEQcPbcOTy2tIAfvvz3+336kYIfPUQMRUIQBGxcDw8SgDhuH1/UCZTuLxQK
      bYJSrVZx79491Ov1Q1Mkk81m+6I2dBocDoA5xbVaDfV6HZVKBa7rpi5+4AATYeeev4DVp545
      qNPvGhRFkGUZjUaDfSn8MGzLsiCKIuvFT4k16txMhdzdNDl9jobdUY2rIAhoNpswDAONRgO6
      ruOjq1dw69YtfOrFl3bUzk4K+tnVJEnq2JCYaoTDMITjOOw5EDFxx049msseHNkBeRzjCCrP
      o2HclmW1TSqJogj1eh2WZbH8QLVaZYt3bW2tr9bqbYkbrrU3DY4WBAG+78PMZLFy7BjECTeN
      0uoqeKiq2lbhlQbDMFjDXFIiY7UDHBbQgjQMA4ZhsJQ9P6yBEmO8qaLrOhRF6au1elIA6P0G
      R6lQVRVPrK4CWB3tDe4jgiDAxsYGHMeBJEksSMI/H+L+N5tNRobr9Px6zYIGZgIwMtCXoOs6
      G25BZo4oirAsCw8fPmQt/GzbxsOHD9vCfJqmTU1P/zSEYcjGtnqeh83NTaZgSOPTc+YjcPRZ
      3jegZ09Kp1MYeSYAewDSUnxMOpPJYG5ujqX3m80mMpkMm3JIUZ6TJ09OrQDwnRvailYe+T9p
      mt7zPDSbTSiKAtu2kc/nIcsyFEWBJEltnaKTO8m+5gGmHYIgYH5+nsWjV1dXUalU2OjSQqEA
      RVEOZW//fuH7PkqlEoIggGmaME2TDfgD2ifxxHGMra0tuK6LlUdDyBVFYbytOI7xq5//FLpV
      BzJ5ZI4sQzcM5PJ53Lt1ExAlyIhnArDfkCSJRSYKhQJqtRpc12Wv9Qvetj0sWWLaOYkFSrwg
      oBXL5/Mqvu/DMIy2fAAFI9bX11GrVnBaCnHq1ONw/ADV2joaGz42PB9r+QyiKIYqSzMy3EEj
      jmPUajVUKhWYpomlR1SRTqAOyZubmxBFkcW3ydfgjwtMXrY4CALcvXsXrusil8ux2V+UOSef
      qVKpYG5urm0kLCUNfd/H7Zs38KWCCrmLUonj2Q5w4BAEgVEm6vU65ufnO+4Evu+jWq0yivb8
      /Dyq1SpzrKlYRBRF1gufwqSTYlpJkoSlpSU0m014nsccY1mWsbm52cbpp7AyRcOI5bm4uIhG
      vY718n2szKVnjAmT8VQOOVRVxfHjx1GpVHDjxg2cOHGCJXv4oXA0DI4ffM0zJ8mU4mHbNkzT
      nBjqBPX51zQN165dY+Fjio6ZpskIcESd0DSNtUmkEUkPP7qKCyeP7QiB8s/ggwelGR16HECh
      vmKxyKgS1WqVbe+3bt1CtVplFArTNGFZVirVIgmKOD148KDj1PlxhCiKWFxcRDabRalUgm3b
      8H0fntdqY6nrOnK5HDKZTNvsAEmS8ODBA6wZ6Rl28p2qlo2HijkTgHGCJElYXV1FNpuFYRhQ
      FAWGYbDMMT8LV5Ik2La9Qwj42QP0X7lcZpThvW7lPioQ1cRxHCwtLcFxHPi+v4Nh63leGz06
      ftRnSetg8nlBgDtbFVwulfH42SdnAjBuIHNH13WIoghBEPDYY4/tmHySzWbZSNRGo4Fms8mE
      Ifmf7/ssRFir1djOQv01xxWyLOPYsWPIZrOYm5tjFAgefGZc13XGwv3ICfD2RhUNZ9ssdIMA
      v96o4U5uCfHR461nuK93NMNQ4Bc//zOFDFVVheu6HVmhURSxmoKHDx9CVVXoug7XdWEYBorF
      Yk9S3kGA9wdqtRqKxSIsy2I5E0mSUK/XWcESHwRYPXUKQRDgze//X3xCVRDFMd68cRcnXvxC
      W73ATAAmALTwu9m0SVoADY6mDndkPkVRBFVVWThVEASUSiVomobFxcX9vK2+QbkT0zRRr9fb
      8gGd6gJIMZz6+Kfx6o9/iFoQ4smnz6NQKLS1UZ8JwASA1+w8qzHJmnQch5lOVL9Mv9dqNSZE
      fME9UbTJJBpnGoamaQPXSq8cP46Vf/sXAMC6y5XLZfb6TADGGBTzplg/z5Xh3+P7PsIwRLPZ
      RD6fB7BdNMI36KWp6pVKhQkSmQ0UZj3MSVFBENh8gSAIWj7UQV/UDJ0RBAHu37/PuDFpJlAY
      hnj48CGWlpZgGAaq1SoAIJfLQde35yHrus6SRpRtTlIoHMfp2WJ8kkHKgHwGXddnVIj9Rj/8
      f6ClrSl8ycfAs9ls28JuNpts/i1f+DEMP0gURWSzWSYEh00QiFtUq9UAPCo2OuBrmjr0G4f3
      fZ9VNBmGgXw+zyi/lAwCWjWw9DvlB4Ylx1EFW6VSQa1WY1TtwwKaMsML98wE2mf0uziTNr/n
      eZAkCfl8HrVajUVxRt1Ai18kNHqoWCy2cYkmdWcg3pXv+8y3mgnAmIKiMUEQoNFoQFEUxoTM
      5/NwXReZTAblcnlPiG68AJbLZVbcQ32MNE0b64hRGqiRVhRF2NzcxNzc3EwAxhFU7EHUhUwm
      s0MD0ySbRqOBo0eP7sl1kKan8CEPis1PCsuUIAgCa6toWdZMAMYVVFuc1v3A931YloVcLpfa
      OnA3IPs4OQchiTAMsbW1BV3X27pTTAKov2upNGODjiXI8c1kMqlxec/zWIe4vbyGXscnikW1
      Wp245ly6rrfa1x/0hcyQDmrAmwxHEt99L+zvYUOfyZYvkwBy7mcCMKYgspthGG2aeBwLW4bN
      Oxw0NE2bCcA4g9iQoii2tfZQVZVVQ/FxetLEw8buhxUsalsyaRBFcSYA4w5ZlqGqatvipGk1
      juOgWq0yQlutVoNlWahUKj2Pm1zsu1n8hUJhIncAYDYkb+xBu0DSzNA0DZlMBoqi4OHDh/A8
      D7lcDrlcjtGgBz3PoKB+RpMWCiXMGmNNCBRFYT1vALSZONlsls0LoAoynviWlikelQ/B9+Cf
      RMRxPNsBJgXU+oN2At4vSDbPpSqvKIoYr4di+snqsmEjPxSmHTeHfBB4njfbASYFiqJA13XG
      0yFQUQvfPpBgGAZ0XWdT75NJs90sXtptJhm2bc92gEkB8VjS5l/RAA1g5xBvEpBRx+knffED
      rWx2RwHo1Vd9hv0Hjficn59n7UGIttBtgcuyzOoLRkVvnnQBoNqJVAFIm3w4w3iA2hzmcrm2
      8kfqDZr2nQmCgEKhAF3XWbPZTsfuF5Ps/AJAvV5vdZQ46AuZYThQQowSULzS6tQ9QlXVHR0k
      0o7bz7knXQCy2WwrhJv24qQmNaYNNHPA8zw4jtMWKSLz1fd91igXaAlKt++3H7P3MAzuJnNy
      ssV4BgBoqwVOdoyg6A91Uy6Xy10nLPJU6E7oNAB80jDjAh0CUAt0+pkfDEc1xXy+IEmrIPS7
      oCkcexgwywQfAvCNsmhMK9BqcUIt1JOoVCrMkU4myDppfiq4z2azh0L7E2YCMOEghzaXy2F9
      fR1Hjhxhk1Soq7Rt28xsyeVyEASBNcfiI0dppo8sy8hms6x36GFa/MCMDDfxIAFwHKct00sL
      mwShXq8zLhHVxVKHNGBnW3UqGJmfn2cF8Ich+5vETAAOAaIoQhAEzKRJgoZJ0DwyoD2SE0VR
      W2iUWozT5JXDtuh5zARgSkAkOV5AHMdhiTFe+1MXisO88AkzH2CCwTfGJb5PMsTJ/0wNtTzP
      g23b0DRtR0UZMNi41knHTAAmGNQdrtFoIJfLtS3m5ESZOI6Rz+dZx2mg5Sfk83kWKqXPT3qS
      axDMBGCC4XkeW8ydpiGm7QY8nyg5YIPapU8LpkfUDyGiKEKz2WQUiCTSFr9t22g2m20RIzKb
      FEVBLpebqh1geu70EIJo0Gnav1O1F9n+RImgxS+KIpsnPE2YCcAhQFq2t5MQSJLEiucrlQrC
      MGR5gcM8HKMTZgIwwaBpJ/2Ab3QLbHeeazQah6K+d1jMBGBCwWds+amHQHpNADFDeSIbOcPT
      uviBR1Ggfsf2zDA+4NmevUACQZredV1GgThy5MjU2f08ZKAVTqOSuhkmA77vw/d92La9IwrU
      idEpiiIbbkEs0kmv7NotRKBlF/JVQzOMN+I4hmVZQxW4W5bFyinHcTr8fkMEWmQp2lJnGH8E
      QQDP8+B5XmoOoFtFVxiGs++ZgwhsO0OVSgWe58H3/dluMMZwXRdhGML3fdYQKwm+Moz/LmVZ
      ZvO+ZuCiQJRUqVQqrOPwDOMJcloFQeiozfnySLL9dV1n9cEztCAD2yl1YLsD2ewhjS9IAHzf
      70iDIGQyGei6fuh5/cNCBLZbRFBn4cNS9X8YwQ/B4BvkdnqvoihjOVVmXCAHQcDS4bIs99Qo
      Mxw8yOzptPglSWK7xLSHOXtBtiwLvu8jn88jn8/PHtgEgLR/Jz9N0zRGbJtp/u4QgdYDUxRl
      Fh2YABD9IQzDjhEgx3F2DLaeIR2iLMtTyQKcZFBkp9MOIElSR+GYoR3yYejzOG2gqYydQqDU
      x2eG3hCnpfr/sIAGZUdRhHq9vmMXmPF7BsPsSU0Y+KJ2iu8TVFVFPp+f7egDYCYAE4Q4jtmA
      bHKGecyieINjpiomCGEYtoU2kwLQbDYZ/WGG/jATgAkCcXoEQWgbiEGwbRvVavWArm4yMROA
      CQJNewHaJ0MSBEGApmmzoMYAmBmMEwRieNq2nfp6Pp8/NMMr9guzHWCCQJo9DEPkcrm21yRJ
      mmn/ITATgAkCTWkJgqAtCSaKIht8McNgmAnABIGcYMMwUK/X2YJXVbWr9k8Ov5hhGzMBmCBI
      kgRFUWAYBhRFgeu6Pef+Ai2H2XXdWeODFMyc4AkCmUBxHMM0TbiuiyiKYFkWJElCoVDo+jn6
      eYZtzARgwkB9fcIwhGmakGUZQRB03QV6VY5NM2ZPZcJAi5m6vVHYk8yhGQbDTAAmEIZhsLpt
      z/MQhiEcxxm6WdZuEIbhvp5v1JgJwISBH1itqiqCIGCd4h48eIBqtcr+tl/XM8k7z8wHmFBI
      koR8Pg/f92FZFnRdZ71/9rPZ7aT7FjMBmGDwPT5JC0/6gtxvzATgECBtHsAM/WGmLmaYasie
      5x30Ncwww4Hh/wMzc5Uz6PiNDgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Import VS Export' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Products Exported Yearly' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9Z3xc13Xu/T91Gga990KCIAD2XkQVUlSX1WzLJYpbXH5O4jQ7cW5849ex
      E8c3bnES17jJsmRZtiyqUBRVSIq9EwQLCtE7MMAMps9p74ehQILoICgxEZ8vonDO2XufM3vt
      vfYqzxIsy7K4gRt4l0J8pwdwAzfwTuKGANzAuxo3BOAG3tW4IQA38K7GDQG4gXc1bgjADbyr
      cUMAbuBdjRsCcAPvasjv9ABuYDQsy8K0LEzTQhAERFFAFIR3elj/a3FDAK4TWJaFZzhMbVMf
      9e0eBv1hFFkkO9VNdWkm5fmpOGzKOz3M/3UQboRCvPOwLIuzLf386PnjdPQPoxvmqOtOm8Li
      skw+uGURhVlJCDd2hDnDDQF4h2FZFudbB/je7w/TOeCf9N6ctAQ+++AqqksybwjBHOHGIfgd
      htcf4Scvnphy8gN0ewL85IXjDA6H34aRvTtwQwDeQZimxStHm7jQNTjtZ1p6fGw/1IhhmlPf
      fANT4oYAXAMYhkkgHMMbiOAPxdANk/E0TX84yqGzHcxUCT10rpPhYHSORvvuxg0r0BzBNC26
      Bvwcq++mtrkXjy9MTDdQZIlUt52qkkxWlOeQn5GIJMXXnX5viN6h4Iz7GvCG6B0MkuJ2zPVr
      vOtwQwCuEpZlMTgcZseRC+w80sSgf6x+3gQcrevmub113LK0iHvWlZOR7MQfiqIbxoz71E2T
      4dCNHWAucEMArgKWZdHRP8yPnj9ObXMfpjm5LuMNRHhuXx117R4+ce9yZEmalTVHABT5hvY6
      F/hf8RUtPYoV9mIGBzCDA1gRH5Y585V1Rn1aFt2eAN/57UFqLvROOfkvPQfnWgf41tMHCEc1
      XPaZO7ccNoX0JNeMn7uBsfgfuQNYlonpaURv2YvZXYPp68CKBcHU4jdINgR7EmJKEVLOUuTi
      jYhJeXM6hkhM59evnuZC59Csnu/s9/PCgXry0hMZ8M3MrFmWl0JGsnNW/d7AaPyPEQDLsiA6
      jFb/ClrNU5iDzWDEJr4fMHtq0M89T1RxIuUtR1l4H3LprQjq1U+eEw09HD7XydV4Ec+29HPT
      4kIcqkw4pk/rGVWRuGtZDsrAGTRvK4gyYloZYkoRgmyf9FnLNLACfRi9tZj9dVjhIQSbGzG1
      FClnMUJiPoIkEVey3h34H+EJtvQo2vkXiB39GdZQy1W1JWZUYFv/Z8ilN8+6DU03+Nrjb3Ki
      oeeqxgIwPz+VBYXpvHyocUwIxJVQRHgov4N71F2IvlZ4S/wECSlvGeq6zyLlrcSyoLXXS+9g
      kPKCNFITHViRYbTTvyV25lksXweYlwmcICIkZKIsuAtlyQcRE3Nm/B5WdBhzqA0rOoylhREk
      Jb4Tu9IRkwvj/38d4roXANPfQ+SNf8Zo2g3WHOn1sg2l6kFsGz6HYHPP+PGuAT9f+MFO/KGJ
      d6Dpwq7KfOmxTRw408FLhxomPEs4VJFHU49wi7ETiQl2C8WF466v0+ZYyr/+ei+e4TDLy3P4
      q3vKsPZ/C73x1dET/0oIIlLOUmxb/hExtXTSA7plmViBPvTG19Cbd2P212PF/KDHuCSYIigO
      BEdKXBWdfzty4bo52YHnCtetCmRZJkbXKSIv/jVWsG9uG9ejaKeewug5jeOeb834fNA54CcY
      0eZkKJGYjscf5oO3V5OZ4mLf6Ta6BwNomoEgCDjtCvPzU9mS3Uf56VcQmGQR0IJEXv0y7Qu/
      yoAvjG6YtHX0EHjjd9haX4OpFDbLxOg6TvT1r2K/8+sI7kzGU4dMbxux479EO/8SRIcnbY9Y
      ECsWRPd1oJ9/ASExH3XFH6NU3o+gvvMH+etSACzLwug4SuTlL8795L8MZu8Zwtv+DMe930JM
      KZ72c0P+8Lie3dlicDiEy65y34ZyNi8vYWA4xHAwiiyJpLgdpLrtGNs+hTGNHdAKeZjn30NV
      yXra+4bZmtmM2r6LKSf/ZTA6j6HVPoO69jOjdgHLMuNq1KEfYQV6Z/GmYA13EH3jn9HOPIv9
      jq8ipZfPqp25wnUpAGZ/HZGXPo8V8lz7vgbqCW//OxwP/BeiM/Wa9zcZREEgwamS4FRH/d30
      9xDrPz/tdpK9p/jio58jGAxhe/334JveAXsElol25jmURY8gJGTF/xT1E9n9DfQzz86srfE7
      wOw7S+ipD2Pb9Dcoi977jkW3Xnd+ADM4QGTHF9+WyT/SZ28t0d3/ijWJVelypCTYEebQUpI6
      RUiDFfZe1K2nBys8hF2ySGEIYfDCrMZkBXow++vi/44Fiez8xzma/JdBCxF941/QTj05t+3O
      ANeVAFimQezIjzEHGt72vvW6l9Hrd0xLtclNd+OchQNrPNhVmfyMxEnvERQ7iNK02xQUB4gS
      5nAXlj7L0GnLxBxqxdIjRF79MnrDK7NrZyqYGtE930Q798KcqpXTxXUlAGZ/Hdqpp9+Zzi2D
      6L5/xwpPHZqckeKiLC9lTrotzEoiN31yS5SQmIuYkDntNsXMhSDbQY8w41DTy2DFAminf4de
      v2PWbUwLRpTIrn/BHKi/tv2Mg+vmDGBZFrGjP73kzX0nxuDvRj+7DXXlR8deu5iobgGSKLB1
      ZRnnWgeIabM3zSqSyO0rS7Gr8kgfmm5yvKGbo+e7GPSHcdlVFhals7r0XtTBf59a8ZJUlMr3
      IAgigj0pvnPMcoiWFkY78UTcmnOtEfER3fV1HA/9EEFSp75/jnDdCIDpaURv3v1OD4PY8V+i
      LP0ggmwD4pPyQtcQrx1roq7NQzCikZxgp6IonbLcFM63DszaG7y4LIt1VfkjB8CWHi/f+91h
      LnSNDq/Yc6qV3zhS+CPHclaJJxCFiXtUl34IqXAtAGJyEYI9BUubhRok2zDaDmBFvDN/dpYw
      Oo+h1+9AWXjf29bndSMAev0OmM0PNcewQh6MrhPIhWsxDJPn9tXx2zfOEIpesqT0DAY43zaA
      XZWxqTKRaYYxXI7ctAQeu2MxCY74atc7GOBffrV3wvwAb9jgR5GtiNkJrNT3jNkJDMmOtvBR
      otUfwxbWcNoVxIQMpPyV6Oe2zXh8gjP97T+LWSaxU08hz9sSP8e8DbguBMDSo+it+8a9dqI9
      zNHWMJU5NjaUXXKchGMmdkUY13x2ridCabqKbTYhw5aJXr8DuXAtLx1s4PEdNZgT6NGRmI4o
      CCQn2BkORie873IIAuSlJ/LeRRLu4XNYWesQBKht7psyOSZqyfzct4UVH/gIaucezKEWvGGL
      o74sjsYq6KtxEju+B7sik5eRyPrqApZVvA+5Ze+0zjYjUFwI9iSs4c5JbzMti44hDUGA3CQF
      SZxYQYvpFhbWlL+J2X0Ko+8sct6K6Y/3KiB9+ctf/vLb0tMksIIeYod+MG5w24WBGHdWujne
      HiHTLbP3QhCHKvLTA0OYFjgUkXM9EWyKwJuNQVKcEme6o+QmKxxrCxOKWVgWKJJAz7BOOGZy
      qDmML2xwridKUaoyVohMHX/hHXzjqUPE9MkVaAtIS3SwaUkh/b7QpLuB26liV2VCEY19F0Ls
      uRBh0B+hojCd3+46S9c0EuOjmkFu8TzK191Dg20VPzyTwusdLrr9FoFwjHBUxx+K0Tng52hd
      F01DAmUlBSQM1U7vfCXKKIvfhzXUghWePNI1olv84dQwAwEdzYCcpIktYxcGYvT6dLISp7ae
      CbYk5OINU491DnBdCIDpaUQ79dS41053RdjdEEQWobYrypnuKJ6AQW6yzLICB6/VBchOlDnV
      EaEi28abjSHsikgwavL7k8PUdIZx2kTSXBJvXggRjJmkuSRquiK4VJEkh4TLduWqJPBmqIpD
      jdPTf0MRjY/evYzbV5aSmexEkgRsioTTppCa6KA4J5nNy0txqAqNHYPEdBPLgnDMoK7dQ+9g
      kOaeIYLh6RkA3E4Vt9POd357iLZe34SGHtOy6BkKUh9KpbKqEnfgAmihiRu2JcbDFBbcRazm
      KdAnzzrTTQtvyKAgRcUfMdh2epiDTSGKUhV+sn+Iup4oEd1i2+lh0lwSsihMSwDAQq1+eBr3
      XT2uCxXI9LZPeC3JIfHRdQnYZIE/nBqmKFWhIFWhrjdG+1CMnESZyhw7HV6NpoEY8sVtWJEF
      lhY4KE5ViOoW+5tCdPk08pMVClJVfBGTFIc0rtpiRYdpbG4Dpmd7N0yL9j4fW1eVUZydzHs2
      VhCOauiGiSSJOG0KgXCMv/7PV8Y9MB88244kTl9d6/YE+PnLJ+nzTi+fuKUvyJPtJfzV3d9F
      qd+G0X4QM+gBQwNJRrAlIuUtQ6l6GCl3KUbbQYj4ptV2fV8URRIoTlN5vT5IZbaNnmGdZIdI
      Y3+Uimwb71uexGDIIBKbnjXJ7DuPZRoIM/B9zBbXhQBMpp8uL3CgynFd/85KNx1ejUy3TE6i
      wnDEoCJbRhZh84IEOrwauUkKpmVhV0TSnBKSKJDmkujyaawtceJSRVRZYGWhA1FgRGBGwYhh
      RIPA5A6qy6FdpirJkojbaRt1PRjRGBonXxjAMCzMGdCceHwhPDPkBjp1oY+za+az6uYvYEW8
      WP4erFgAQXEiuDIQnGlx86MgYA53TatNWRS4pzqR0nQVw7SoyrFhWpDllpEEgTUlTnKTZFyq
      iGlBTBHZVjPM/Yun+K6mhhXsQ3DPPCx7prguBGAyZ41TvbQyOlSR+ZmXJlaS49IKYVcE5mWM
      nnRFaZfsyWVXXHOqk1vUc5JVmEG4f07a5M4shyrjdtrwBiJjrtltMqW5KZxp7p9WX5puYkwz
      BfMt6IbJgTPtrFiQg+TKAFfGhPda01z9FUmgND3+jSVR4L3Lk0euPbZ2tKPQoYpENZONZdMI
      hbaYnel2Frg+PMHK5JlMbzsEkZXV85jEqDEKGclOSnNTsKy4ZWjAFyIa00fk2jINkgQ/G+Yn
      Ml5U5uKyLO5ZO39afRVlJSHPMiG+ayBAJHZtc6Ung00RSXVNc8013h6H6HWxAwjOtCnveeH0
      MH1+nc0VCRSmjGO5AWK6SfewTlHqWE9iVDdRpGlSjUsq84py2bREYtfJ1klvFQWBBzZWkOSy
      0dDh4YmdNXT2+ynMTuKPti6hKBlih3+E3vga7xXsqFkr2TG0gLBmYlNkFpVm8tkHV2NXJNZU
      5nHo7MSmx7x0Nx+7Zxnffvrg1O8wDiIx/SINy+QHUcGRPOn1txDVTfr8Ok5VJNU5O4aL8Qcg
      ILxNkbnXhQCIyYXx7KFJXO4OReTRlcnsOOdHkQQ8QYN0l8T53iiri534wgbH2sK4bSJ2WSTJ
      IRKKmfQHDDxBnXM9UXISFZYX2jnTFWV5oZ0U5/ivL9iTEOxuPnZ3Lt5glJMTpD6KgsDda+dx
      55p5RGI6P9t+krMtcTWm3xcCy+IvK5rg5K/B1JGBhx1D3PbIFgbtJSQn2CnISEQUBTr6/Syb
      n4Oum9R3DOK/jPfHpkqsXZjPh7cujjvflNkdDu02GUWKP2uYJpGojm6YKLKEXZURL2554jR1
      7/q+GOe6IwRjJvctSiQ9YY6mk2xHcMxNrNWUXb0tvUwBwZWB4MqYNMnifG+Ehv4oldk2ttUM
      s6UigdfqAiwrcPB6XYCoblGZbaPbp3OkNcSKQgdHWsOYlsWKQgfekEl5pkpNZ4QWT4xFeROr
      XWJSPoIzjSRB5G8/sIGXDjXw8qFGvIEIpmkhiSJ5qSoPFA+xKnkvVvMQvsSldPSNzo5q6/Hi
      c9aQdHkaYnSYHKGXwnnrgHioxemmPn7w3FF6BgPYVZnVC/NYX12APxTFZVcpyUkmPcmJJIkY
      pklOmntWjHIFGYkYpsnemjYOne2gezBAVNNxqApF2cmsq8qnqjgDOTEHFMeUnnlRgKX5Dpo9
      MWo6IzT0RVlR6OBgS4gku0Rljp1DLSHWljh59VyAZQV2tlQkTLlTiO5sBPHtmZrXhwDY3Ijp
      5RiTCEBFlp3NFQkAaCbMy7BxuCVMt09DkQSGwwbdwzoWMBgy2N8UQpUEYrpFf8Ag0SHS4dUo
      TVfpHdY51RHm9oXjH1ylwrUIQlzPdtoVHrm5kvdsWEC3J0AoopHkUkhpfBLtyI8xm6NEJBXH
      4j8iJ61qFGNbXmYSifmV0PXGSD7zWywMbyGqGTz5Wu0IO3QworH3dBu3Litm9YpSroQkimxY
      VEBtc9+USfSXQ5UlMlNcfOPJ/Zxp7htziK5r97DrZAurK3L5o80LcScXYU6RhGOa8GZTkKUF
      DiQR7qpy0zqoYRjgssXNoB9dl4IANPZFGQgaGBbIU2hKUvHGab/X1eK6cIQJooQVC2A0vznh
      PRkJ0ogb/a1/v+XFXVZgpyBFRZUFFmbbyEtWyEiQWZRrJydJRhIFyrNsWEB6gkSiQ2JxvgNF
      GueXEGVsG/8C8WIm1FuQRJGkBDvpyU5cVpDo7q9D6KL51jIQgz0UbXg/nT4dtAjVGSaPrski
      O68QSw9jhQYRnGmoqz4RZ6SwDKyoH2/I4Nk360bRopimRXF2MhVF6eN+i7QkJ+fbBuj3TuLU
      ugIFmUnUtXlo6h6a0OgW92cM09w7TGUm2D01k0afmpbFknwHJekqhhm3yuUlKTQPxkiwiawp
      dvJczTAuVaTLp5PllukY0khySDiUCQ7yghj//om50363q8F1wwphBvoI/erhKd3v1xpiVhXO
      Dzw16TZtBgcIPf0Ylrdt5G+COwfHvd8ieGEv0fM7sEX6EIwIyHbEhEzE3KWoVQ8iZi/C8rYT
      2fP/MD0X0HNW87W6pdT3Xdo5JFHgb9+3ktUV2XF9+AqHkGVZNHUN8a2nD9LRP0lS+kUUZCSi
      mybdnsC0v8P6YpU/CX0NxZpbDtIur0ZOkjzh95Vyl8VDopW3hzniutgBAATVhenvwew5/Q4O
      QsS26QtI6VOYJBU7RAMY3afiqo2kIuUtRz//EjS8jBz1IBjR+DUjihUexOw/j9Fbi5hShNbw
      CvqZP0DUh+ipx128jNohJzHNQBYttmZ1c7P2ElbdNqzhbsS00lETQhAEUtx2ygvS6B0M4hkO
      j+vRVmWJlRW5lBemc6K+e0a5Mb1BWJhukhFrmf5D04DbPom1SBCxbfhzpKzqOe1zMlw3OwCA
      OdxF6NePzixycQ4h5S3Hfvc3sYJ9mIFeRHsyQmoJlprE07vO0tI9xMfvWcaOI02ca+pikb2d
      e4r92Gx2tHPPY/kmDul4C4I7BzG5CKP9LVOmgHLH16lTV3CqsZcS/SxVLf+Bol10Rgki8sL7
      sN/2JRBlsHSQbBimhccXIqoZNPd4OXyuk57+IWIxHZvDQUFmEuur86koTOcbT+6n5sLMWRzu
      XCDxoeB3EKLTc4xdLaT8VTge/vHbdgCG6+QQ/BbExFzU9X9K9PWvvj1ZSJdDtiMkFRL+3ccx
      B5tG/iw40zEqHmL/iTw6hnQCYY3a5jhVyxncKPkruCfwq2lNfohnnVmKHTGjHHO4B0EQMetf
      ZEFyLdWr30vsyBl07bIJZ5nozW9iDpwndvxxTF8H0qYv8nyjyo7DjaiyxKObq/ncJjeBXT/C
      0DVsGz9HQvEqRFFgyB+m2zN1lOl46IilYS3/OMLB71z738OeiO3mL7ytkx+ukQCYpkVU0+n3
      hmjuHqLbEyCqGYQiMURRwKbIpCY6SE9yUpwdN/HJsogoCChVD2C07o+zmL2NEGxu9PPPwxWs
      0lZoAOH4j/ls6hoGt/wtT7wxOknkwulD6Or4uQwTwRzuxnbz54kd+yWWtxWjeQ8GoNdvR3CO
      c/A1NbTuWmJ1ryAIFt0HfstLF1aP1Ap77s1zVGc9h9J7FAWQjv0AoWgpoBLVjFmnbYajGkLV
      +5C9Dejnnp9VG9OCpGK76fNYaeUYhokojp/ncS0wZwJgmCbdAwFOXejl8LlO6js8hKbJnpbo
      slFZlMHqhXksLssi7Y6vYQ53YfadnavhTQohKR9ruGvCVU7AIs93kBJtL8cKq0YdPCvVNojN
      0CavR4gd+e94n5fBCg5gRQNxVecy34HPVc7zdZlIka3cn3YeJWshUtMlzVUShdHcm4IQj6iM
      eFHUvFnXErDbZGTVhv22fyBi6uh1LzMTgq3pwBQVTic/wOGz2XTufg1RFCjKSuK25SUsKEyb
      UZTsbHDVZwDTtDjZ2MPLhxo53dw37Uk/EZIT7FQWZ/CeRU4KTv7TNWcKkMtuxdLC8RDgKSC4
      c9De+yy/e+4lAl11pBQv4T7XAZTG2ayOAuNOJklFXnA3RvshLC2ClLmA/QmP8P29PmRR4K/K
      61jo38nexEd5vqcImyJx99r5FCgesi88jk0yEJypGC17saIBLHc+3/fexf6+RGbK+rx1VSmf
      fs8qJFHAigwT3fsttNPPzOJdx4cuOXkmdhfbvQu50qVhUyTuXV/Oh25fdE2FYNY7gG6YnG8b
      4PEdNdS1D1wN+8YoeAMR9te2c+iswJL8j/A++5PkRWoR5njlQVRQqh/Ctv5PCT714Wk9YgX6
      cLW+xPsjP8Cy9SMG9yGKWbMlXRgfgoht9Z/Ahj/H0sJYgT7mdXRSnp+KacW5QrUhky1L89lY
      tIVjdV385MUTBCMa2Slb+b/355O466+xggPx9oYa2Szt5rh4NxFz+j+3IomsrcwfSXMU7InY
      Nv9fxMxKYod+gBW4GspKASGril8H7uKVnvEZIKKawe92n8NlV3loU8U1U4lmJQDDwSi/2lnD
      G8dbpkwZnC0M0+J4W4hz0j3c4cjiPQkHUIyZu//Hg5CQiW3DXyAvuAsr6p9B5KGF3rwHgn3x
      9Xu4A8s2O4JXISELKzA2xkhMLsLorwPFyQl/Ns6QD204ALjo8vj5fwPzSVM/zS2eedxWDNv2
      1xMIx1NJuweDPLu7lscuy/oSgMJEnSLLSV3v9Nnlls7PpqrkCi4i00TKXoS6/I/Rzr8Yr9Ew
      Q+ItwZ2DuvSDtKXdxmv/fZCpVKpt++rYtKSQjORrQ6Q7IwGwLIszLf384LmjtPdN7YCZC4QN
      mecCa2iUKvhExgHSA6cnLYwxKWyJKFUPoC5/DNGdHf+b6kRwpGD5p5EEIspIucswWvfHxyDb
      kYtvIuZtmxmjhWzDtv5PiZ14fIR+EECwJyMmFxB55f8AAmS9nz3yRnadHCKqXaKK9IVkmrfX
      cKppYIzKGbVnIiVXYHQcvdioRFLFrXw4bS3f/t2RaRXZLspK4sGbKtB0A1kSkSURSwsTO/IT
      YqeeglgIJBkppxoxqxqj6xSmpxFTi4KpIWDGlS1BAllFUBOQ8lfF6dELViPYkzi0s2ZaOQ3e
      QIQzzf3csuwdFgDTtNhf285//eHInFGDTxcWArW+ZL7Gg/zFLR9hXuQIevMeLG/r1MxnkoqY
      Woo8fytKxV2ISQWjLguyHbn0ZmJ9Z6Ych1SwBnXx+xFEGaPnNFLBapT5t2MMNmFceH3a7yOm
      FGP0nI5P+PT5CI5UxKQ8lKUfInbsZyPClEUfe2vaiI5jxbGA43VdFGYlocgipq5RpnRyj7sF
      QUpGcGcjOFKQ59+OuvSDLFJc/MUja3j8lRoudA2NW4dAkUTyMxMRBIF/+uUeAJaUZfOxu5eS
      2reH2LFfxNnmAEwNo/0oYnoFjvf+jPMX2tm19zCJ+Lh9cSapSS4ExYWYmIuQlDfGvNk7OP3d
      fDaBf9PFtATAtCxePtzIz7efHPfHeLvQ74vw9Z0mX/jAY1Sv+TTWcCdG71nM/rjFw4rG7d2C
      zY2YVICYVoaUWYmQkDVpUQZlyfvRzr8wKrRhDGxubGs/g99QeHFoGbpQxT3FlaTYHdhWf5Lw
      QMP0fAGOFDBiaKefjguvKKOs2cqJhLupOzrInTm34O47D4LIoVg1wejE39sinn75D48uJ/ba
      V5innUJpNi6VzzC0uMArLgRBYHFZFl/80Eb2n+ng4NkO+oaCaLoxwk+6pjKfHYcbaei45Ig8
      eLYDnz/I/yk5cGnyXzYCo+Mwfb29/NeLZ2nvMxEEN/7UPD65dDmCKGBZcTY90bJG6fE2dfrK
      h129drnB0xrFG8eb+fELx6ddCfFawh+K8Y0n9/OlxzaxoHAhUubCq25TdKbhuO+7RF7+4rgR
      kEJCJvbN/4iYvYif//4wrx1rBqBjMMwXPrABMasK+x1fI/r6VzE9jeObUwUBIaUEpepBYod/
      fGnnMnX6T7zID3ucDGk2msoy+Yf3/xRFlujcdhaYPCHH4wuRdfrbJOjHxxh5rJCHyMt/j8OV
      gZy/EoiXV3XZFZJdNsJRDadNobokk1uXF+MNRGnpGcuE0dA5RIMjxPgBIgIDvjADvvi5w7Kg
      qXOQN2va2H2qldYeL3abzMoFudx7sT6yIAhUFWfwypGpmasVSWR+/tQJU7PFlAJQ29zHz7ef
      ui4m/1vwh2J88zcH+KdP3EZWytzohlL6fBwP/xj9/Et0n96Ff9hHUaYLNX8FQsV9+KQM1HCM
      /su2Y48vzJA/wvGGburbdfyhD+HW61honWGJvRWbGQTZhujKQCq9BaX6IQQEtBO/wrqsskoE
      B+GLy/aQP4Iuu1HtCqoy9fokRQexOo9ObOE0NWKHfoiUu4z2/gD//eJxapv7R4VSn2nu5/C5
      TlYtzBs3xNqwIJa2CAJ7rjjrCEi5S8lNMCnLSaK2xYMkCfjDMb73+8Oj2ursr+Po+S6+9Meb
      yElzs2phLpkpLvqmUG8WFKYzP//aZYdNGgzXNxTkX3+9b8YMBG8HghGNtj4fG6oLkaQ5shPL
      dl5usfNvR1y8NryApoT1lK+5k8d3t/DEq6fZX9tBcXYyvmAUmxKPr//NG2d4s6aNpq4hOnwm
      TeEUDkfKOWKtpHDtAxTe/BHU5X+EXLIR/cLrxE4+gSCKoEXicT2iij1vEYGwhh83D21ezoKC
      NARBIBLTOXi2Y9IhV9na2aiemDx/WQsRzLuVbz9XS21z/5jAOYu44HX0+zBNxhxOE102Pvjg
      nTid9vgOZ5qgOpFyFmF0HkesfYIlKX5KNzxCSU4qh891jnvA9YdidHkCbFpchF3CZSEAACAA
      SURBVCpLFGcnc6y+e0K1OjPFxRc+sIHkhGuXMz6hABiGyU9fOsHppmtXouhq0TcYxGlXWFg0
      McPB5bCiAYyeGkxvazz2R3UCAsZgE9qxXzBICt/edpZgRMdCoGcwyNnWfk419lykNYkQCGv8
      zfvXoSoSu0+2Eo6OxwQn4NdEjrRplJTNIy8nA7OnhsiLn8caasYKDaIu/WDcjBgLIHqbWCzW
      siWtjQWLViAlFYAgkJ3m5mRDz4SWG4dN5mOl7aSHpqgeI8i8HlrMG2cHJzU6RmIG6clODMMa
      Wb1tisRH71pKdVkO3XIp+/yl1FoVGOXvISPRjtW6BywDW6CNBZsf41hrkLOtAxP24Q1E2Li4
      ELdDJdMtUZUpMtDfx3BYQ7NEQECVJdZVFfBnD68hN83NtYyKmHCPPdHQw+4pEsLfaVjAM7vP
      sbIil4LMpInvs+KHtcirX4nzXVpmPDllzadQFr8f7dRTaCd/TcgTQDcqRz3b4wmOMjQN+cMc
      r+/h+f31U5rxwjGdH207RklOMsmx0KXwBlNHO/P7MbkPkr+dyPa/w/HwTxDS5iH11/LnFS18
      z8qnoWt41DjcTpVP3reCKnSirz836Tg0OYFTHRGmpcVa8Pcf3khztxfLslg2P4eCrES2H2rk
      iZ01BMIa4EJsGKLaLfIZ2YlbDI1wC/V7J9+xNN1kyOcnfegQ2qmnyBtq5S9VA19RJj2ZWzim
      LWTt4lIKs5KIxgx00xjJY74WGHcHiMR0vvvMoetS9bkSMd0gHNVZW5U/4T2Wr43wc5/F8ndf
      PKBaoIUwWvZC9mIazFK6/CJlt3wIn26n8aIVJC/dzaKyTNr6LkVnpiU5GfCFRg59UyEY0Uh0
      qlRWLSTo8yBoIaSE9DFxQCPQw0TDIZ5oSMXd9QbZg/tYd99HSHAnIkoiZbkpbFlRyifuXc7C
      ogxEZyp6/cuTUh7Gyu7lpZ68aZV1tSx4z00VrF6Yx8KiDJLdduraPHzrNwdGUapYFvRGHQSS
      K1m3ZhW2DZ9DdGdT3z7A+baJy1vZZIG73MdRD30Tayi+AwpaEEesj/ThExi6hubK5wfbz/Pi
      wQYsExYUpk2PzWMWGHcHOFbXRVPXO5uZNRPsr23nkVsqJyw1pDe+fik04HJYJnW7fsN3+7YQ
      ja3gI+0ydlWmoiidNZV5bCySMNsP4ByMcmgwHZfTxl1r5vPsm9MvWAdwrL6bRJeNXR03UZK+
      mUcS3kTxTGwB0TpPcDSwgdxVm3nDv4CTvzyKPxxnYU502sjLcOOwyQgCCIk52G76KyI7/mHc
      OspiRgX2NZ9CbTw2rbHKkjCG5Xn3yRa0CfKPjw6lE110LzaXDTM0yJrMAC+IAvoE202pO0zq
      hd+MK7CCEWV5dBf7Ospp7o4bN/bVtrO1OpUE1bwmaZJjdgDDMPnhtmPT5p28HmCYFoZpsqpi
      /Hq/Wt32CTPNhgwXh7RFaHo8tulYfQ8DvhAZCRKr27+DfP53LJLOc+s9D3HX5o2kJTp58UDD
      hBNi3P71OAlua+8wLX0hKuUm0iONE96vJKSSc/PH+cXOM9R2hAiENWJ6PKzZH4pxpqWfA2c6
      qC7NJDnBgZhejpS3LL6raCEQZQRXOkrVAzi2fhXJkURj5yDN3VOT/eakJeAPxXjq9TPUt3so
      ykpi7+m2SZmrOwb8vHignkWN3yD9/I9RitdxziOP8VFmpbj484oWXH2TBB6aGjZ3OsciJVgW
      rHR3U3nqCxjHfgaWiZS/ck7jgsbsAC09Ps63TXyIuV5xsqGH4VCUxCs4OYFRLAxXoiTDzl9l
      1RBIquTJOhsDvrja1zPgxbTFs6gELUSKGEBx2ghFtEl58MeDqsgkJ9jo94awqTKOwmXg2zFh
      +LXPtYAfbTuONzBxPm63J8C3nz7IVz9xK26nDSt3Faercjhx/CShUJD83GI2Vi0ix+ZGBm5Z
      WszBMx2jCn1cCVkS8QWjPLcvHp5xvm2A5u4hSnMn5uiRJZHuviGCni58pQouxcF9Bf3k2ewc
      aNFojyai21JZNC+XBzZWkHJk70R17keQo/r40mOb8AWj5J/8GnJ7fLfQ67ajLn8M7NPnbJ0K
      YwRgT03rjHknrwf0DgU519LPmsqxZwF53ha0U0/FTXgXYVqgyy7UkIdC7zEYTOO+Zf/Gz7wh
      NMNkQWkBp4P3Y/oP4k7LJT+pikTdINFlIyXRgT88/XikstxkHt2QT83+V8mzh5iXOx+je/6o
      OKC3IDhSec6/isEJiHQvR0uPlx1HLrB5eQnf/M0BzoyYOEVobeMPR7r58NbF3LVmHtUlmTy0
      aSHP7D43bg0DWRJZuSB3TOpkQ8cgt68sI8HRPhJ0F4eFQ4jxSJGHjbYaTOEMCf4AmAbm8Z+z
      FIHFioiRkIKYVY1r8cPIiSJR+9Ssc6IjBbfThmc4zJC9lEx2I2Iips+P8xXNIUapQKZp8etX
      T08rYOp6hF2VWVWRO2aLFFQnUv5KjM4T8ZAJUeEky3hKf4SYJVGgNxJUM+nOuB1P0CAYiXGu
      1cOeTjsHQuUc8OWz7/wAjZ1DuB0qFnEenelAFOCR0iHmn/kaJYOvku47jtm4E0uPxis5mhpv
      RUSKyUWYm77EL09a0463CkU0jtZ1c7qpb4yJU9NNTjb0MD8/lbyMRObnp5GZ4sLjCxOKapim
      hapK5KS6eeCmBdy7vpxdJ1tGCYgAPHpbNcvKs2nsHLx4kLYoUXr5aOJO1umvY/O3YCOCMLKj
      WYCFYJlIehDR24x+4Q3MwUaktFKMzuPjnlcAkFTOJd3BV57v4pUjTbzRmYCUUUH1hjuwr/4E
      gjq3QXGjdgDPcIiewelTZwCIooAii+gzYCwWBWFa5YRmijMt/XHmtiv4fizLite8DXvi5ovU
      eeyNPMzJ5iDejHU45q9gR4NB0yv1YzyhFvFCFuHBAD2DAY7WdVGen4bTphCKTj1JlycPsrjt
      l1j6Fd81FgDVhe3mv4WLFR3lovV0BUUC4Z3Tfufm7qFJv6VhWjyz+xxL5mWjyCIrynNo7fHi
      DUQISzp5aQm8f3M1y+Znx6ke18znyddqMS0LAVhXXUBRdhJlUgoLCtJo6vQQbtpHUeMLuGI9
      CNM9Culh9IadGP31iKkl8USnMSqggJG/gV+dd+MLxtU/zRR4tiObjfdvpdDmxjJ0EOeOh3SU
      ADR3e6ddpeQtLCnLIj3JiU2VeWH/peytvAw3PZ7AuEKxuCyTxs6hK7bUq0fXgJ9AJEaiaqI3
      vobReTweETlvC/q55y9ZggYbWF8SwBdxoWHjpyd0ghEDmPrXDEU0Tjb24LIrKJI46WF4fl4y
      H0vZhdI7waISC2J0n8R+17+OMNEJQf+MftzpLDodfcN4hkO47Co/fP4Y+2vbRw6o9R2D/Oj5
      Y3zhAxvIS3eTn5nIlpUlSKJIWV4qmyozkPUggpxIgkOlSmkm0vp9rNjsHKSWtxUcKUh5KzEH
      m7CiPrDiCTdy2W1EKj/C0PkTwKXAO0036T67j4wD27AiwygL7kZZ/F4E+eo9xKMEoG8oOOOV
      Oarp7DnVytqqfIqzky9y1QRYMi+Llm4vvlCUzGQXrb0+yvNT6fIEME0TuyqzpjIv/nIeP92e
      APPzUwmEYywoSEOR49VbXj/WPCN9u72rn7KG76HXbect1UI7/VuEpEtnA0uyIagOluapPHty
      eFZJPcGIRoJDpTgtgZYeL5p+SRBcDoWtK8t4YF0J8jPfmtT7anTXEI3GqGn2MOALUZabisuh
      zOniYJgmeiRATeswh891jrHO9A4GeWF/PQ6bwvZDDQgIPLq5iltz/UR//3l0PYq6/s+QMhcS
      3f0NrODVRQdY4SGsiBf71n/C0iMMeIO8ccEgEs7nJjOBwqykUXUU3GKY7FPfxyCudkZ7z4Bl
      oix/7Kp3glEC0DUL+gy7InP7yjLOtPRRXZqJQDxJ+2RDD+faPCwqzWTPqVZWLMjllaNNrKvK
      xxeIkJfhJjfNTZ83SIJDRZVFkhPs+EMxdp9qpSwvhQFvGJsqz0gAOo+/TFHXS6P+ZoWHwOZG
      rrgbc6iVgczb0DWRl86GriqjLRCOIQoC3/7TOy6GScRITrBTmpsSZ3A2ogSnyHiKGgI/ff4Y
      u2s60Q2TFLedFLcDmNoMLQBVJZkjNC0TwWVX0Gqe4dwFHU3PHveeho5BDDNeu8zCouZCL/cO
      PztyUI8d+C/E9HmYg1NHcE4H5kA9esub+Bd/li8+8wZDfg1oZsexdv7k3uWARWuPj6QEOx/M
      7iC103Mp4M8y0epeQlnyKMhjrX4zwSgBmE1Ce583RE1TnKjVNC2qSjIIXGxn9cJc2vuG0XST
      lh4vty0roaVniEjMYMgfJic1gVBEo28oyOrKfEIRjUA4hq6beP0RwlFtxhN0uOU4jJNmavl7
      IG8FVtBDp1DI620y/tD0DrKToaFzkGN13dy/YcEIvfhIn6KClFWJ7u+e8Pl6s4w9Fyc/xIPS
      HGq8uN5UxojygjQ+856VfPnnuyblCc1IdvH7gSrSi1zQ0TTuPU6bQmVxOtv21SOKAhsWFSIF
      MkaUQisWQG/dP+l4Zgq9YSevD1Qw5L+0wEViOofOdfKPf7yJoYE+XHYZuXWY6BWOc0F1xSn1
      rxKjBGA2mV6XU4S09vpo7b0UNlB/maWka8A/xpny8uFLq0nnFddaembHRmY6MhgvS11wpce3
      3ugwshmlvnN2ZFFj+jMtXj3WxMZFhaQnj066EUQRdflj6G2H4ofeK2FLpDdrC3rbaHt/MBLj
      sw+u4lev1NA2JvXUoljuYZWzic0l+WTEUvnUvUv55m+PEB7nUG5XZYb8Ebo8Guk+HVWWxiwq
      ggDLSpJ4aP4wN4dqEWNesoxe5LJbQVJBD2PFguj1r8zqG00EKziAPXoQWMbl8dyxWAyz9mmc
      tb/DMg2skpsQ08svMYTYElFXfixOH3OVGNXCDP071yWs4lsQPEdHZ3cJImL1+3ktvIy0tPdz
      tEdB01vmrM9uT4C69gHSkwuvuCIg5S7HvvWrRHf9y6j6B4IjBbn8TortSahyH5f7p9KTnSwq
      y+Jrf7KZ7YcaOHK+i8HhMIIAFXIzj/I0SaIf4RyEm7exZNMX+MrHbuHZN8/T0O7B0oIkOxXU
      hGTq2wdHVNshf4QEh4osiSMWLFkSWV3sZEvkGbTtr5NxMetL730Dw5GKuvKjKFUPEnrus8w1
      JxBYLHO24VJXEIxZI+O5LddLdO+3R3IPYt52bDd/HiwT09uGmJCFlLdiTixBowRgOgkYE0EU
      4+WHDMOc9DNNwIYzZ3Ck5uJY/11i+74bX3klGaX8TjoytvCznx4k2W3HoU6nVu30oRsmde0e
      Niy6UgAAQUCZvwUpZzGhlsN0tTaSW1CC1LEX7cwfKJFf4Y7Cx9je6ka7eAZ4eNNCHKrMYCSM
      ZzhMIBwj0WXj3tVFrO56FaHlst0r4iN28le0FBejyhJfebQKcf83UA0/v4ney1ljrJrw2B2L
      GfJHCMd0yvMSqez7LerZHWNs81Z4kOjB74MgxlXIa4BUhvj79y3lhRP9RDWDLStKWB7agX7+
      MvXPiGJ6LqAsfh9YFrEj/40/ZTEnvakMDoeYX5BGVXEGijzzqNFRMz7JNfsDxR2ryjAtC28g
      MmGdK1WRmJeXOlJG6HJkJDvxh2KTVlqfDhIcKmJaMXL5nRh9Z7ECfWinf0vGhT08kHc30rzb
      2Xl0fD34atA5Dk35cChKzYVeUt0OslIT+MrrEi092ZRkWHwhqRW3HkbUw7xvuUj56jX8eudp
      RFEkEtMZCkT4x5/tGsW+8f3nvegpYdYLjIqRNwIDvHbwNOc9MrfleCj1nMDSoyRJFUD5qDGJ
      ApQN7qC0chly8QZMzwVCh1/BmsgxpYXQap7Gmin73XShhajMsVNdeakoht68AF1SL7F/iApG
      31m0xx8Em5vh1V/kP3f2c7atAQtQZZGHNi3kkVsqZywEowQgNXH2buaewQBnmvtZWZHLuqr8
      ixlNGjlpbs63DZDkspOX7qZnMMCi0kwaOwcpzkomPdmJLIkkuewYpklDxyCluSkcq++aEXPA
      W8hJc2O07ify6pdHJXGLoV4eVJ7Gm7GUl/S5J3p9K8bGCg1imTqmI51vP32A4/U9KJLILcuK
      R841zf0RWgs2sMgYQHCmYS/biGNAodsTwAJ+uO0Y929YMIZ6Rjfhed8S1iePDiYTk4tYUrSA
      odM9vNiooAYfJtfuRyreiN0zOGpRqciADKEfo6cmzk7hbcWKTB4kZwb7rxk5rmWZY9qWCtag
      rvhjtLPbwDKR59+OFfJgdp+CqJ+DXSpn270jmkRMN9lx5ALrqgsozp5egb+3MEoAyvJSZ+2l
      zUlzk5bk5FhdFxWF6Rw8085NS4rYeaSJlRW5GIbJq8eaKM9PI8GhYlNkslITGPSHqW3qozQ3
      hX5vEIctrp4kuewzFgAByE9zEnvlF+MwGABaEOPUk8ji3TN+v6mgyiJa3ctEXvv/wNQJLPoU
      DR3xXFbNMBnwhUhy2fAFoyQ7BPKy0hH1XCzLRK97CUPZMPKDmqY1YeGLXisDMWcx1kAdlgXN
      VjGPN2+i0X8hHqM/FASKwAfywACJLhtZKXFWiHJbD/dov0Cu6yQGaOdeQFlwN1MqpYIQ5/i5
      BhAkWzwkhHhtYKP7JHrTbozumvi4ZBtWeAgxowLZNJEKVtHRkIxljRbaUETD4wtdnQBkJjtx
      2ORZWYPOtfaPhNv2DAYwrfh/N68ooba5j4xkFxsXFdLcHWcJWL0wl5ZuL0kJdjYuKqChc5A1
      lXnUtw9imibRWahCqUkOHGKM6PDEpUbVaD+JdoG5jvbOTHGhnX4CLlKzuFq3s7jwM+w7P4BN
      keL1fSWR8lw3i7t+Ssqx3RgXV75YTw0lGUfZvPSTtPSFWLkgF5sqceDM2OyqwqwUnPf/O2Zv
      LbVNvfzbmzp+bfzJqRsmg8NhEl02/vKBxaTufQKh5xJ1i+VtRW/di6AmTFqZR0wqwIoFr4ka
      JDhSEOxJ6O2HiR34D4zOE1wpkLqvA+q2IyQVIBWuoTg7ccxC7XbayJwFQcIoAchKSSAnzU1j
      58wLVFwea/7Wv+vaPNRdzA66fDtvnGB+vlXCZzxqjumguiQTSbEhqK4J1zR3QgJ59mTaPDMv
      GDERREGgPD8NMVSO0X4IsFDSy/jT6lTuNZ8lIbOEf2+009AT5LbkEHmeXVz5Izv6T/Kpu4K8
      GSjnV6/UENMNVEUaRW3usMl8YHM1gjONYOZa/vN3O/FrU0/Klm4vz7x6nE9q42Sh6VGkwnXo
      9dvHJxmTbChLHsVoP4w+zRoIM4GYXY129jmi+74zJcu25Wsn+sY/s7robs7Mu43jzV4Mw8Jp
      l7m/ykZ650vEukDKX4mYWhYnH5gCo82gosCahXmzEoB3GgKwqiKXkCEjlW7G7DvP2K1dwLZg
      K6uFYg7V9c1ZQF6q20a50hH/AVUnYmop6oqPEH7p8xR4W2FoN+/N+TDny+9kQfgX44wLwCLW
      8CqvdEoMXQwDKM5OZnWehVa3nSzRQ8G8ShZmrQBg+6HGKSlFLse+xgBb87IpYbTgi6kl2Db8
      OZg6etOu0bSTtkTUZR9EqbgXQXHEazbMlpZyPMgOMLV4wUFzmg5PyySh5QU+vcBG4+qPMxSI
      kt/7InkXHkdviMZzDSQFddUnUNd8ekx9tSsxJiMs0WXjpYMTZytdr3A7VRRZ4vl99UQSyyhx
      DCJ4Ryf1GyVbaC34IClJbuo7PKPiTWYLAYsHUmqobv1PrN7TYGhYgX6MrhPxHOSLifC55UtZ
      ueVhhPoXMYdaxm1LTMrnnLyCtovOxOUpQzwa/QGVVi2Fci/Jw7Xo9TswMhbxxIH+aeUMvAUL
      SErPoUq5MJKOKCTmYd/0N4hp85GL1scThxQHSAqYJqIzLe4I08JxTtTOY1jBsRa82UJIyo8T
      kc2EV/UipMF6CqrXUpps4Dr0L4jGZc5Ey8ToOoWUVYmYUjxpO2MM/7lpbhaVZl7XdCjjISfN
      zb6adkJRjZ7BAKs+/lWyFp2IqySCwFDiYr66y6Tj8H4USWTxvCy6PH6isaujeixL8LPVfAHR
      uvzcZGF6GhGc6Zj2FIZJwpdyB7aOQdLSqpGa3hiXx0rOW84nK1dQkJmIYES5pePr4B29Ylvh
      QXwv/yM+72MzHmu7XE7s1v+k6/QbuJxOaiJFbB7qxulIRUwuQF5wJ1Z4MO7xNaJYYQ/m4AX0
      8y8iJOYhz7stXj5qFhN2DNQEBJsba4LFYEpYBrH9/4GYuXB8g4epodVtj5eknQRjBECSRLau
      KqO2uW/OOP+vNVRF4q4183hi52lCUQ23U8Vut6Fk3YYy7zYAdu44RcfAOSBulWnr9bG+qoBd
      J1tm/Z4uu8JDZUHkrvGNBoZo4+CCf+b5ox14/tCIJFygJC2Lh4Ryysz6UbZ8IakApfJ+bC4b
      77+tGnOwmeD55nHbtYe7SIj10Mf4gW0TYSgQ4T92DXCuJYf8zESWzUvHHNiDlZQJSfno514g
      +ua3LybpjIY13Il+dhtyyc1xVci8Cn+NpKAu+zDamWdn3wZgDjZPejB/iyt2Mox7SlhdkUdF
      4fhFmq9HrKvMJzPZRUlOMnnpbu5YVTbGqaddYfsXBYH33VrFLUuLUWbBLJfosvHhrYtZPm98
      Ui4LOOZN5aevN9M+ECYU0fCHY9R0RPhp5GE8WbeAPZmQlMxhfQk/izzEv22r48nXTlPf7kE3
      jAlt76IAs6l6JIkidW0eQlGNjj4fVdZppKZXiO7/Hkb3KaKHfjDu5B95p4gPTB1l0SNx1Wg2
      kO0oSz+EVLxxVGjIrGBEJ40HknIWT9nEuLxAsiyS4naw59T1TYwFcc/vuqp8fvrSCZq6vfhD
      MRo6B8lKiceVE/VjtB8iI9ZCXacPr6YiiyIPr0xjmbOV6pQQNlcy7V59Wl5oURAoTlf5eFkb
      64tUlMwFaGf+MGayapbE06Hb6IiOJewajokUrnmAhCUP8t9NpbwwMJ9Gn0p73zC1zf0cPNuB
      LsgUxc4gR8ZGrIrJBZxNvpt2z8yKWD94UwWiIOANRFiY5+am8LMog+ewhruwYn7MrpNTtmEZ
      Gvbbv4JgS8Dsrx9f/ZgAgjMV29rPoK74KKan4WLOxtVBLlyLJdngirOJmDYP2y1/NykrOEzC
      DLesPJtNS4rYfR0LgSDAfevLOdXYO5JCB3EOyhcPNLAiT0TY968YbQdJNQ3+LjmZC9UfJim3
      lMLz/06koRkRuCu5hKV3/gU7mlVONvTgDUQwTWvEViMIIIsiWakJ3LK0mI3m67hqfkKsU0Z+
      7y9QVzxG7NjPR1kytIQifEYZRMbqV5YVj7/ffcpPXcdYq4o/FON3+1sx593HvcoPELXgxTj9
      eDKPff3n2Cot5tCFPeOS2Y6HzBQnty0t4JbyBHq7VTISVWxnMtEHxbgjarrZVbEAWCbqyo8h
      5S4nduJxjI4jEA0wrnVLEEB1Ixevj6/82YvitQLmyLPs1RR2Ov6E91TsQeo6GPccF61HXfNp
      RNfUWsyEAiAKAh+5aykNHYOzSpR5O7CoNIstK0rZXzvWPu0LhAiceBpn8+4R+7bT7Gex91nE
      WBqG57LKLJ46Cjp+y2fv+waeYDXN3UN09A+PJLy4HCqtPV7WVxewemEe2qmTRBFAlGnoDXJg
      eBN+S6BaOMPybB1HwTKUyveS8lwdzUNjg8gE4r6Syfwdmm7yclsSa+//Ljm9O2htvsB+bx4t
      YhXiPpXS3F6qSzI5+f+T997RdZx1/v/rmZnbVa5678W2ZNly70nsxOkhhSSEBEggtCxlYWGB
      BRaWsrDLsrAsX3pCgIRAgPTmOIkTOy5xl2WrWLZ679KVbp/y+2Nk2bKupCvFgeX83ufknJyr
      8dyZuc/zzOf5fN6f9/vs3CQ1myK4rxLk3f8G3SdID46BAE0xU7aW8luQEouis0K1OBEWJ0K2
      oOSsQc5cjj54Fq39CMHuUwRGekELYrU7scanI6eVIWevQUosnOJkKbmi03Od897sDgpjXTjX
      ff3tk+EuRmKcg0/etpZ/+80bC/aafaeQnhjDJ25ZQ3yMjZzU+Cl9CABZSU4cY03TijvGWA9a
      hKqnPtSMCI+TmpBMaoKLdRf8bWjMz3ceeZPmnhEGPX76B4rZtunbtI4Ifvps54SJRTqvSxlc
      nV/ERzesRBKCy5cHOdnUN23/kRTvjMjdvxgeX4jq0XiGcj7MQ9XH6R6Z6Cno66HqbA+JcQ5y
      0+Jo7/PMuJG3KRIfKW6hovF5VP/U+o6BB2McQscfxbrqPoQrZc40p5yxDOznwzohWxHJSzjj
      TebF+jw6egcxDI2MpHiuXLqIVYtzIqp3S0lFYIudrJwvCELGqRis4RAWZcOCTjGrPDqYLM30
      xBiONnT/n9ELcsfY+eyd6ynIcCNJgpzUeJq6hxn3hVBkicKMBD54XSUJwSb07uop/1Y4k5Fc
      yRgXdYPJKaUouetRO46g1j+PenoHaudR9PE+HM5Y1q9YTEuPh1+/WEVd+zDH+uyc6pMYGjsf
      AxsGnO0corI4nVS3k6xEB045RN/AEIauIysWCjMTefflZVSd7ZlBWXoqhBDsOdEWUa3DH1Sx
      WxXee1UFhmGak4OZFUuIdbCxPItPlndT0voQIlJDzjmExtF6TqKkV6CPdjATN0izxFJX+Gnq
      e1XiXDacdgu6bvDasSZ+/ORhznaNMuLXGPUbdAz5OVTfjUUxGcDTrE4lBX2w8W3Z4IbsqbyW
      +FGOjueQkhhHrMM67x6BORsAhBBsWZZLMKzxy2ePvmOukNHC5bDwz3dtZOkFDoY5yU6+eG0G
      Z5uCYHFSvGQZiUlJ6PZb0NoOnn/IFieW5XchJeQR3PXtyUkg7G6E3Y3/hc+ZRaoLq51CRsSm
      4yi7meH+RZMf9w6Nz/iwz7Z2U6rVoJ7ZyZWDZ1mf6GXEcBNOX032hg1ocB5G2QAAIABJREFU
      tkSUKDNPnQNjs1Z8e4e9BIIqX7/vcobHA4x5g8iy2V/tDHTjf/pb6NFUbwOj6N5+LMvuJHzq
      L9OdM12pPKnfxrPPt2MY7WQlx/K1+y4nrGr88bWaiE38wbDGU3vqKZ3g61/4vISQsK64B7Vx
      16zCvrPhqO0KHtltCrkNenU+edtarJa3QYeeCUIIrlpVgMtu4X/+/NbfzCcsIymGT9y6lvIC
      M340AqOETjxOuOYprN5+ynTVHLC1MQSLr8K6+oM4bvwBY8cexxvUqPLnUVWXQUpiHO+64nu4
      h49jhH3o/aen0wDOwdAwPJ2EDv6Cq+IrqY69isGwky3L8nirtmNaNdkl/OQ2Poj/5IHJgpET
      cNIKzSeRfIewbvoCWUmxc7Jdo13LmrqHEUKQGOsgMdaktBuGQbh+78SKHh30wTNY134ES/mt
      +GueZ7SjlrAhE1u4lmDe1ez63XEMw3xGnQNjvFndhiKJWZWyPb4gB061U54/PeaX0sqxrrqX
      0Fs/Z75tUnLOOsYTbkBvNBe3QEhlIZ7vUbeACSHYUJ5NUtxWfvr0kQUT1hYCIaA8P5VPvXst
      6YkxAOjDrfhf+gJ678XujiqGL0i4+nHUpjewbvgE6nA7z0vv4YWjnUAf0Edti5tvfOg+bDWP
      mlmMuVZJQyN55BjfqshE2/B5EhIScdotPLWnbvKns6Bym2svBaOHiagxZOjoPSeR9vw7VxR9
      huomadYsTk5aPKnuuW2EIjqp6ypaz8mZFdgiQQuj9Z6iP2Edfxq8jBNdi1BVnSSPg42qD3HR
      lHRYlagEdztmENYVQsK69qMYYz2Ea5+JOjMkpS/DfvW32OIJ0F3Tyxix3HrZ4nmv/hDFHmDq
      BQuS451sKM9meMxPe6/nHW1vBLPaesfWcj5y48oJuRBT5sT/3D9GGPwXIeRF6zhCY/Y9PFsT
      mkLzHh4PsCjeR/KJH0Io+o2YNNaBK6cCOT6T4rE95A++TKw+zJCSxeVZXq6XdmAxZp9Mhm+Q
      tGQ340kraOkZibiBdcfY+dANK0iMdXCsoXvG5yyE4JpVeRTZB9C6T2D4RxCOeEAQrn16dufL
      CAi5svnJMScHazvxB1WCYY2R8QBnO4coykpkeCyAYcDS/CTuvqqCM51Dc8pEFmYmsKkixwyB
      Jlwj0UIY3kHwDyNnViLs8Wh99bMvREJCxGdhrXyvmVV6+bOUjb3CKnGc9KJlyEkziyDPhAU1
      Abtj7HzmjvVcv66E3796kprmvku+QbYoEsuL0rn32uVmQesChI79bu7BP3nwGLl9L2CRbp72
      J7llF4ZvnkrYYR9q3XOoDS9j1L/ACmBFDHyoFERMOuFj0TA0DeSOvdx7y/2ku628eriR/nEN
      TTewWRUKM9zcdeVSliQEGB4/yr4UjZN9kfcMxTFjLKv9V3yHznsWiJhUrOseWJCOZusIVDdO
      1xk1J4PKDx7YytiJJ8gefg7llSeoiL2GlxRpWqbrHGRJUFmcZt61Fjb1gBp3oba9ZfYZayFT
      zt2RgJK7DsM/ihEcRfcNo4f9SIoVyZGInF6BNngWva+W4K5vo555BX2wEUXooPvRe6phgvYy
      Hyy4C14SgsV5yXz9vss52dTLiwfOcKg+Crf1OeCwKVQWp3PTpkWUZidOy+0aukr45BPzOqd9
      sJptBTfx6ND5SHNRRgyF8sL47VpXFYZvakpRbdiJlFYe9TkM7yDWvuNc693B+mwv7dl3MGjN
      o3/ER1qCixSXILjjX7D3VPOhmGX8Mvt91HeeT3cKASVxAe6RnyB+rH3KhsEY7yP4+neQUkpN
      7Zxoi06STCdZM9LEhzx+rM0vkVP/UzA0NKBEqWJDxj/wZrs14luqvCCVtUuyMPzDhI7+FrXu
      2YipVsPbbyYrrDEoOevwrvg0v9vXy33XVZKUnoMR8OD70/sn70UfbERKr0DvPGrqqhZvj+4e
      L8LbFlZRZIkVJRksL0pn1BvkQE07b9V00No7aopczVGptFpkYh1WCjMT2LIsl8qSDGKd1hkt
      cfSBMxj+efYrqAFuKgqQUbqZI6e7yPBWsT27HWvPcBRqoNNhhH3MFONHDx219hm05t3EArEi
      kZ+3rmfY48fALF5dY0/lNrtEqjTAF1OeIRw8zphu56RzK4lr76b05DdwDrVHNpHTw6YcvMUV
      dYgnJRbjKliLqG2KOJhdNgW5aeeUfYWijnPPoj7s6Zez/1Q7/mAYA1OPqLIojXuvXU68Pkjg
      5X9D6zg09zMKjaM2voZjqJn3VH4Q2+BJ9KwSAoQhPg8m1CmkxHzs1/6H+SYYbkZt2Y2hBZAz
      lk9zpZ8Nb19ZaAKSJEiItXP9+hKuW1fMyHiAnqFx+kd89I946ewfo7qxl0BYRdMNYhxWFuUk
      sbw4nXVLsoiLUpFitta9WeEfZtOGHDZV5OA51EDrySpyLLCQTldhcSEXXYna9LpZyLHGYFly
      I8IaQ6ivjmgyGlJcJqOxS1AcDShoPN8aP0UJLqgaPDe+jtTEeK4IvIzi2YcCOCQfVwafQukP
      oXpOz54qUoPIBevRe09Nq3tcDD0mi76C95KTV8TSwvELvAZMxDqtbF9ThMuTg9p//IKHIZOU
      VcSdWWXYrQrVjb047Ra2LMtl64p8rL5OArv+A619FleYSBhuIqH2QTry7+H4zsPsrR9ifea7
      uHX1MiyyhFJ4BeHqPxGqOt+GKo4/Zmaxlt+FiFIy8ZJNgAshhCAh1kFCrIMleaY15rd/t4f+
      C9Jl5yQRD9d3oUiCK1bkR1XEEM6FuYYLVzKGroEaoClmAz/qsfP5gqPkUjvvc0kJediv+hqG
      9xN0nKnmudoQvt4kLsuXKYvfCaOzbzwNycqTvst5aV86MdJ9fOiqYg6/2MrFbxUDwcvdKVzh
      vqiIZeio9S9GleFRctYiSq8ldOQhs8ZxMY1ZthJMXsbPe7dQ/YqBw/Ymd19VQUVhGofqOggE
      AmQmxXDj5jKWFqYhAp+DkBe17QBIMtbKu5EW38TDfzrIvpPnQ8qBUR8bFqXAmz80zQgXAGOk
      lfSmxzg1ehcdAwpHpDjeffMD2OxW1PaDhI4+DOp5DpgRGCF48BfIWSuR0yui+o53ZAJcCFXT
      +cWzRzjTETlsCYRUfvncMbJT46NyBJeSihHO5PltXhUHQrYSeOkLaN0nKVBD/EtSOunpq2HQ
      Pi9GI5KCUnwVyDYGdDffeC08YavUwVs18Ill72JN8BEIzCDtKMn48q7h1ZOZeAMqXmRebTCL
      V0TYSCozrQkWp0kHnjV9K1Bb95uCtpIFZcmNoKkY4z1mRiUuEyV/Cy81uTl8qhnQCIY1ntlb
      z3/cu4qrjRcJtB3FKWvYWpchkj5gTv6bfkhjfQ21nWOkxueQPxKYpvXUN+zl9LE3KW/dF81T
      nRHyWBsfWtTH/hgLK6z7sfYlYeSsNfdgkdootRCGP/oU/Ts+AVp6RjhyemZxWABfMMyOg2co
      zloLmJr33YNj1LcN0NZrype7XTZKc5IoykrEsexOQm/9NOprELYYgnv+y+SzYzZBZDAAJ+sR
      drfp1hJlQldKKzcnALC/pn1KEUjV4ZWhAjZs+ifUw7+Csa6pMa89HsvS23Avv5eEtiOMTPxQ
      S/KSCYa1afZEAGsqiqAnZpq2qFK0FaHYCJ/888z37UpB6zo+WWk1EvKwX/l11IaX0HprEIoD
      KTYdjzr1reD3evA881niR08SM/FZeKAOtXkPztsf4q0OwY+faMAXDCOJdtYuyUK5qBYhBLgG
      j89vcYkEQyd99DC3ykMYw52EaxzIOWsR7jxzEQhOlY8R9vgpUvhz4R2fAA3tg1ER6Ro6hvAH
      VToHPDy7r4Gjp7umybNIQpCW6OLayjVsTCjHMRxFKtQeb25aI3UO6SpGYBThzp3Il88+CURs
      hkmZeOrjSCmLQFw3/RhJIZS1mUP9SSSqXcT7m0mOUXCmFiBnrUZKyEdIEl+6ez07d+0j2ehl
      W3IjubqgvsUgpJlLvsDszjveK5Oe9hHWeZ4wTb4VG8H0dQRXfBKLxYoYbkd0HJx27XpcHsaK
      +5EP/jdMPEbD24/vifun1AbCJ//E5pw7eNO5hBFfGEnAJnsNsSMnp+0vjLFuRnf9F39su25S
      W1Q3DA7WdnD1miL2VLfiD6rIkuCaldnkh1+e9XlGC2O8GzlvM/pQAh2uVfzl9/sYHfOxWlzP
      Vuk5rPrEb2t1YV11H9I0jdaZIYyF1I/ngaferOc3L83daJGeGMMdW8t4fFfN3JVPWbA2S/AB
      y5+I9czs2SviMrEufy/BN/971vNZV96L7htAPfta5BVLUkwxVlcKav3zkx8Pp27mm+1X0+8x
      wxBFlrhzazntfaNUN/YSDJvSJktyk3n/NcvITolDALp3gPDxRwiffsnMaGkqumKngUWcsG8l
      lFRGXnoCT+yuY9DjJz/dzbfuWcHBg4d4q2GQLjUBf9jAqsgk2DRWc4QtrnpijBGEPR5v8ip+
      0VRCj1fmRucBtthPIOxxGH4PxliEVLWk0L/p+1T7s0mJt7H05FeR+k5EfFYBaypfG7mfLu/U
      9MHn79pIVnIsDe2DpCW4KM+0En76oxGNAOcNWxzOW3/GoEjhK787TN+ImSwQGNxZ6uO23G4Q
      MkreBuS8jYh5dKu942+AzKSYuQ/C3Av85qWqqNzMNc3gQJtBuOjDPLCmE0fzC+iebjMelpVJ
      WyQlZy1aX92c5zOERHjTV6hX1hFseIUUvZMku44zJg4pPhulaCtK/mYCO7825d8lBlv49n0b
      ef5IF+P+EMuL03j1SPMUw4pzevfD4wG+8N6NJEkeAju/atIvLgiPpLCXxRxjidyEreSziMWr
      ae4e4UBNBy6Hha/+/hhtPV4M7MD5bFEvUM9SnnMs5+4ry9i+ppjXDjZzpKMK0HhodCWrHvgE
      SbYwvsfuivwAdJXM0f0UXvk1DE3FV2PMmB62WyXK85PoqjkfZ6e4nSzOdJEcb6cgowghBLp/
      mPClXFolhao2/+TgBzNJcGAkg1ve8z5TUVCIS88GnR8MDHViE6KrYHGwODeJjKSYSdGrmRBN
      zeBiHG8e5bWCddz+3g8gxrrMJmiLEykuAxQboVNP4/V6mU0L2gCq+y38+ld76B4MIbgMmwiR
      5JJ538qVbFhROplXlvPWo549b2AnZ1SSlprMh29MxzAMXj3aTF1rZD792Y4h9lc3c3XoCbT2
      Q8wUbhmBEYL7fowjbSkfv3k1ZfkpPPTC8Tktk0b9Gj9/4SQjAYPkeCcTrAMsFit2dwb422fN
      wU9uHCUZOWulWVmNADmllHu3X44ltpZTTX0kxFi4PbUO58uP4ENgWXobloo7EIoNYY+d9Zqj
      hVDsCFssDuv0Z2a1KMiyHJUIViRcsglgaCHU5j2ETz1lFmDUIMKRgC13He9fu4kfvOxFnYEu
      4bApC1KF1nSDXceauWx5HhlJeROf6QyPBxkeG8Hr2ECjVMz25H0YA5FfxW1aOj8+4cYz4eJo
      IAgYNjrH4ccv1BGXmEx5fipCgKX8NgzvIOGaJ0GyIGdWog+3IrlzQLJwpn1wRkqIbhh0NFQT
      Du1EzLHXMHwDhE89yfiKT/H7V05G7RdmGPCXN2r5h1vWcM9VS2lsamFbRRqxDhmsWQjbzBKI
      UspiwExhWyvvRmvejT50kSqFxYmcWoZc9SvuK8hC27wJ0VuF+vKD6BMp2eDrpxGuFJSibUgp
      i9E6jkR17bNBcucinEmsLLVQlpdMbauZAbRaZG7etGhBJLhzmBcZbiYYYT+hQw8S3P1fGEON
      ZmEi7MPwD6H3VJPuPUl+xXravA48F4Q4DpvClmW5GAYL9ib2BVQKMtwUZLgZGvPz+K4afrvj
      BC8ePMPeUx10D/khaTFZwRoU7SLarmLncf12zninN66D2Zbo8QXZXJGD0IKETz1B+MQfTA5L
      0IPWvIfwicdR2w4gXMlU9dtmVdVbbWugVK2acwKASWf+Y3M61a3zY93qukFn/xgf22BnfceP
      SOl8HqHYzU4uISalGy+EiMvEvu0rpqSkYTAatjCUuJbQ+BB2SUXYY5EzliG5klHrX0DrOIzW
      vBtp8DQM1GFMkUw0QJKxlGwHIaE2TPcdmBeEhGXpbci567BaFDZW5GCzKMQ6bWxdmU9aQgxD
      Hj+j3gChsIbdqkRmx86At/0GMAwD9cxOQsd+a+alIx0z2sZK2+9Zdvf3aPLY6Bkcx2GzUJxt
      NoZ86RevLvj7dcOgvm2QFSUZ/OSpwyZz8oLf1xcI8+iQRFfhJ3hf/gmU3mMYehg5bSmWyvdy
      5o+9wMzhWXP3MIGAD2nPt1FPvxghjDDQu6sJPP85ipPejyJnRgzlZEmQ4QwhxqILjEdGRjk0
      2Ev0XQHn0dHv4eT+apYNngFAPfMyliU3Ya28BzSV0JGHJrNiUsZy7Fu/jHAmM+YL8dgr1Rys
      68QbCGOzXMaitO188NplpIl+fM9+6nwhzTDQOg4jYqdrEwmnWc+RM5YjZ61Ea5tnFfjCc8Vm
      YCm5mrBqUHW2k/2n2qlvHWDMH+Ktmo7JarUsCRw2Cwmxdkqzk9i8LJflRWkR2zEvxNsPgYJj
      hI7/fk61ML2/Hnvba1Su/iCiJGPy89be0QWZ812IgVEfz+w9PW3wn4Oq6bzaaFCy9D62X/fN
      yc/N/dILs5/cgNCBn6BckP2JCC3I0r4/sDrxgxwacHNhJCSAyuJ0lpX44LCILEJ7EdqD8Qy+
      DQG2qrFUlruSMUI+2qQi3txRS33HCIFQFsmub7A6J8TmVUtwZxYjgPFAmH9/ZA91recLjIEQ
      HGoK0fjoMb5+WYjEi39jQ0fOWI4u29CHzXBJuJKREvIJHf2tSWwr3m7ytxZiSChbCZXdzZsN
      Kk+9+eKE9HtkaLrBuD/EuD9Ee5+H1441446xc+tli9m+uhCXPXJm6G1PAN3TiR4N59zQ0TqP
      wcr3TxFVkoSYkfgWLUJhjYN1HbOOK1032FvdxmXL87Bbz9/24tzkiP2251DgGkeqj07BzImX
      98e9QUrhZznU0IcvEMZhs1BZks4dV5Th9sfjO26PqgVwUMlkIav/OQzZClC2/5jnXj/C0ycs
      jKvnXXE6+qGqBV4628Bn70ykJDuJXceapwz+Kdfi8fPnExoftcYgLiQiSjJK/mbky7+A1vwm
      aut+1PaDBF/71vljLA6TvqLYptAW5oIhKXQlbeMXB+Np6js639sHTArOwy9WsaeqlftvWEHZ
      RW2ZMIMy3HxghLxRV/sM//C0ECLGYYmaCDcTYhyWqIRu+0a8+AJh03kw4MHwj/CuDQXEOSN/
      v8OmcENWH1J49gzWOQgg3lPDvRuT+O7HruLfP7KN737sSj72rlWkuJ2myUPu+rlPZHUh5W6K
      6jtngmYInq4XPFbnZFyNvM51Dozx3Uf30tY7ylu1s7dO1o068S56L4Yt3lRjszhRFt+IUrgV
      yZWClFyC2rwbLt5kh/0Yox0IV9pEuDT3pDasMRyyX8t3z1TS1Pf2dUgbu4b55m/3sONQI5o+
      dfy97TeAsLpMmesoKLfCmYiBhNcXIqiqWBSZWKeN4qzEWV9vs8GqyCzOS45KzFeSBMZgA4G9
      j6J1VYEWJCOhgE9WbOHXDSn0DJ9/2IlxDj58wwqW9JxifvkpA4abSCotJt5lo2/Yy6G6ToY8
      fhRZIi31dnL7mrCMtUQcCpqw0pZ0PXpyGRC5GBUNgmGNJ/fUzSkBP+jx89irJ/GMz746+4I6
      v2wupTLjcyxL9HKqV2CPrWS9biNG1wju+99Zw2DD24d921fROo+iNu8x065TNscC4XAj0pez
      07eKR05Z0RbE1Y2MQEjlV88dZXjMz3u2lk/uDd72BJDis5ES89F7Ts56nCFkhmKXsuvVWk40
      9THuC+K0W1mSm0xxdiJHTnctqNm+INPNuiXZvH6sBe9MBLQJFCudKC9/D9V/Ph7VfEOUSSf4
      9qoP0Zh2K30jPuJddhq7hnBamH/HGGDopkL1s3tP81ZtBx5fEFXTzRSjLLHIeSO3Ot+gUG9A
      0sOYWRmB6kzj2bE1vFxbjLPtTERP32jh8Qajfp5HTndRlDU7ETHBJZOoeOkwsnhyX7f5xq06
      xc6qLr727lJE/8wVeQDUANpAA4augi0OOWUxcspiDNWHUBwIdx5SWjmvnlF5dEct2oI6NWaH
      phv85Y1aUuKdXLW6ECHEJdgEW2OwVt5D4LVvzhrbtlrKeeh4Ms2DFz4oL01dw6S4naQlxtDe
      OzqvHmOn3cItmxeTnhTD9tWF/HbHCcIzFNOcVol3GU8i+SNsxnQVe83vWFO2Dbl8KV5/iFeO
      NCL5+kjCScI8rskAGkad/HLnm7ReZPZtGAYBXePEqJv6sRu5MjfAbYs1YoJd6L01DLvX8lpV
      IV5VRfOFSE+KmfQKmA+S402rq2gRVnUWZSdxtmMoYgZLCLgioY1rx/7Iz72fYmT8/LuroWOI
      1w7WcqU6d61CrXtuouBmoI11Y137UZTsVZN/r2vt5+FXds+7IDofaLrBgy8cJzsljiX5KW9/
      DyCEQCm+Cuua+2fUlwzFFvB46HqaByMHE/0jPgIhlczk6CuHiiyxfXUhFYWp6B2H2Tj8O7aV
      OpEjuH3brQq3VdhI1WeREVQDZgyLObE+d30eNw9+D/fICbOtMEoMWbJ56IBn2uC/GEFdYUdb
      LE8Mr8KIzUIfaCCu8UnWpPpJiLGzoiSdj920Cqd9fp7GkhCmQsI8ZQIX5SZx15VLIz6/y5bn
      cdMtt2Lb/I8MG9NrJuO6I7r+YyExWYPQQlOKcv5gmF8+d+xt2+RGg0BI5dcvVeELhi9NJVhY
      7FjX3I+cuoRwzVNoAw0TleBE5Nz1NDguo/bpRmZjW/aPeHnPxmxqrEHqe8OEtZmPTYixk5Ec
      y9HT3dS3DnC/9Q+kjx6mLDuDmqRCNF1HGCYrMSstiWvWFFGmNBJun31lMcb7zBSloROnhPCp
      XuSERZCYjxYFr11DZqe2jeYoN276RCV749J+CjCwSSr3X5HNe1LWEueyYbNIfOKm5fzv08cI
      hqNbFbevKeTatcU0dQ1TE8GPeSZkJMWysTybpZl2XnljPz39Q8RL46xLHmVN4hmkxgykpGI2
      Fss0dI6gGgIQOGwK61cvQ6ndNLvevzMJbeVHECd+hwiMIGdWImetBMw34ytHmmjuWmC33wLQ
      0D7I68daLh0VQkgKSsEW5Jx1GEEP6BpCsYM9juY99XOqRhgGeMIyH7u+jGf3N9E+6KfHKzEe
      CKPrJvMxMd7B0oJUlhWl8fCLVZNc/D+lbOSjlat44WQGHf0eVhcncV/cHqzOONybPoISGgE9
      kbCQZ+XDiNgM05C57nn0vlrTPVELI8VnIxyJc/Yij2dt41hLCQbRp/uCYY09/mUUL1eQY5Kw
      5q/FaXVhhLyEjz/Jyu5qPlWey8NnMxgcn3l1tFpkbtpYyl3blqLIEuuWZPHa0cgGGxcjOyWO
      zBiVcPXj5Na/wAfDZ8E5kfkaB/0khABkK1ucaTjSC9kdWIkWn8fNm5dQlJWE4f4kaseRi6rC
      ExASO42r2b0vgTzHB/nQ1Tm4ssuQJgpmvkCYnYcb33GJnYvx3P7Tl5oMJ0wSlDJVBUyLMqbT
      UMjOzeddQ404Gl5gxOFnOCij2RKJLVpP5sqriI2Lo2tgbEo6a8iSg23t5ZQF6hgJdbCsOJOU
      mAqM/jrCf34fIf8wUkI+UnzWjP5cWJwYvkH8z3wCw3t+42uM95gbfFus2YkWGJ1uImGLw1px
      OwMptzNceyiqe70QZ0YshG/9JA6XAyFJZnW94WWCe38IWohKxc5/XvdvPN+Tze6qFsb9IQQC
      SRI4rYKlcaNcl3iaXM8O1GdATyykouAqKvKTONkyewFKlgS3LtbQd3yOcHf17M4vWgh5rJ11
      dLA6/jTWNR/GUZpsFhRdqTjf/SuCe/8HtWWvmRoXElJ8DmNl9/HYM0FUfYxWBIsHU7mh9Pym
      u6FjiI6+yL7IF8JhU7DIMuOBEPocC6oizy46BqYr6TtOhwbIS3NHZcCd5/Thf/YfcbftB8Mg
      DUgDUIHqXcgDLyGu/BrpiYVcvaaInYcbsSoy68uyeeVIEwOjfioKUllSkI41/U78T3zINKrD
      rETL2WuQYPokUOzIGctNdbKIG3nD7Dyyu7Guf8BUeBttR8gW02CuYIv5Q59sI7yArM24P0Qg
      bDA2OE734DgOm0J2z1nkc+2OagBjtJ2BkUQEkJMaz22XLaY42YKz6qdIZ56HXhUD0MDk+1Q/
      zv1pW/lR4iaah2ZymhHckj/M2s5fo43N7K0c6XnI3h60vf9N0NuNbe1HEVYXIj4b+/ZvEj75
      J8INL09wgq7GlrUaRTmIGlIRgimFSICDtR1zrv4C2FyRiz+koml6RA/lc7AqMpXF6Ryqn/ue
      /ioToCw/hZzUuGkS5hciJ1ajsvn7aL6ZX9ta13H8T38C53t+y7vXZbLO/xLerG384UgPda39
      k5Xg2tZ+PnPLcrIvkt4WjgTs136HcNVjqC37MMJ+5LQylOKrTH3KOSq0RmAEreMwjht/iLBN
      73OwyDKSEGjzfJkrssTh+k6e3FPPmD+ELAnWxdl5r+zGpY0i4jI4Gcxn36k2kzg4FqC5c5BV
      7Y+hNeyY4WJ1knte44sZXp4r+ShvVLeblBPDTFzkpsVx6yKVlS0/R/gW6Pyo+gkfewRhcWFd
      /UHQVYIH/h/h6j9NFkeDPSexZb/Jp677B3bVjVKUmcDmivMdW4ZhcPzM7C2z59A/6qOupZ8N
      5dmsWZxJitvFkfouluQl47ApnGruY3lxOvVt0dMuLgkbdC7YrArpiTHUtgxEdKF3u6x8JPEN
      sv1RFH5CY+jDbVjTF2Otfpi9fW52N4Wn0CDG/SHGAjobSpMwuo6azvNKHNqaT6K6S5BzN+BY
      cRe2le/DUnoN+nCr2Vsbha6PERg1LUUjkMBCqsbeU+3zrme4Y+wjNlwvAAAgAElEQVTUtPQz
      MOpH0w1UTafV56TNWs6qjVfgcKfSYWRyqCUwUTGASqmKot6n5mSWWr0drF5Zyc233kKK20VS
      vJOP37yau1bHk1b1n3MqWMwJQ0PrPYUUn40+1k1o34+mMgMMA2O0g9y0RDZn+ljU+zhy2IOU
      Vo6QZEa9Qf74Ws2c0YEAVpSkk5kcR3VjLxvKcxj3hfAFw2QkxZLidjEyHqBzYIyOPg/piTF0
      zqBJeiH+KhMATBf60uxExnznNDoNXHYri3OTuW9zOqVtDyH0KHnv471Yym5GWvZeXm2C1t7p
      N6pIBhsdpxlI3MCO0XJeCl/BS40Kbxxv4URjLx5viKR4B067BbXxtegZi4aOnLMGObl02p9s
      FoWalr45VZ8vRorbSWf/xfcg6AtYKYgNkV73M9z6IGPZVzHuD7E4J4GbpJdwBOZ2h4GJJpuC
      6/jeHw5Q09yPVYaloy+gNb3OfFWZI0ILo4+0Yag+9J5TEQ/RPV1oja9jeDrR2g+h5G1Cik2n
      Z3CcHYfORuXUGQprk74K59if7X2juGPsjHgDdA2M4/EGCUy0omanxOHxBmfdC/xVQiAwaQiL
      85L55+yNDHr8eAMhHFYLSfEOpKZXCETJtwHMqmLXceTK95EYH1mO0W6z8kpgDS/Xehn2n3sA
      5iBr7R3l6Oludhw6y33XLadcm2fcbujohsGwx8+ZjiH6R33YLDIFGW6uWlVIQ/tgVOYXAHlp
      8WSnxtEYIQVoGDBoL0ApvZaE9KV8zNbP2JI44jJL0Z6crt854+WOdqKO9U8OhPBQG2rPS5fM
      pwtMxb5Zz6drTE42QzcrwpiKINHeSFvf+RD6+Jnzkz8Sjaa5e5jEWMecdYW/2gQAM/a0KPKk
      xPk5hMbnb8qtj/diERJbKnI5UNMxpZHebpUxEDxxwjujaKtuGHT0e/h/Tx7igQobZUJGGFEM
      WsWOT0nmzy8c542qlik9zJIQ5KXHU5Dh5kz70IxV6XNIinPwgWuW0zs8zp4TrdNWQUlAZk4h
      ttzP4H/qAfThZpxCIMpumbH3IhIMPYw71MHnVw7TYSlhQ0wLxqFL5/g+8S1mhkyyRLRaVUqv
      AdmK1nYAJX/LpHDVO5X6NAyT5zQX/qoT4BwMXUPvq0FtftPMr0fjYHIRhGJHPf0iWY2v8/FM
      B8/HrqLPbzJL0xNd7D/VMePgvxAj40H+XKfwxZhkHMG5QwqPs4Af7+ijrnv6w9UNg+buERRZ
      Ii8tnqExPyNjgWk/siwJctPiue+6SioKU+kf8fHyocZpSYKSnCSWFqQQPvWbSb49hkH4zCtT
      DOfmgpAshA7/ipLuapaUXA2DAdR3YujpGnLOGrPneWKFNxAE4kroSLmBkC0Fd+E9pKUkwsT1
      x9gtZho1istx2iwYGFG/XaPBX30CGIaB1naAwM6vTuTbBVJCHuY2J8ofRQi0zmOEDv0SDIMS
      Az6TVINx+08Qdjc/+svBeZXUG0csHErcxuXak7NSuw1rLL8ZvoK6gdlXFlXT6ej38MHrKhn0
      +GnoGGR4eBQ5PEaKPUhlcTobNqwmMcm08UxLcPGBa5fz0AvHGRkPIAlzgrz7siUoimRy6S+8
      fasTOa0ctfH1qO5PzlhunkOuA0k2FTTeARhaEGvl3ehF2wi17Ke1q5/jI0nsHq6gr7GGc1To
      FLeTzRW53LixlMQ4xwRHf47NvCJz7bpifIEQda0Ds2YU54O//htAVwnXPXdBsclA93SCLSZq
      x0DhTDabcCZiBiFADJ3GPlRFd/yGiPH0bDCAfaHlbFkWg3Tq9xFFtIQjgZbsuzlyIHL/8MUI
      hjUO1nXytXsvx99zGu/ux9D767EYQaxtCrJaibblc8iJJitxZUkGsXfYeOzVkzR2DtPeN8r/
      PnkQu1WhyJ3Eu0Qu2UYbCAnr6vuRc9ehth+ephg3DbIV6/oHEM5ELOW3IFwpBF743LyeT9TQ
      VTO+X3I7jzbmsLurGb9mhqMXon/Ex1Nv1vNWbQefum0t7hj7rDZLAAYG9W0D9I94KcpMZHFe
      Mp39Y8S5bMQ6rBw/28PqRRl0D44T77IDBntOtM2ZXfqbhEDTIBSsFXcQqn48soLbhZAUbJs+
      TejobzDGp0sJ9o948QbmH1L1jWmEKu4joWgj4VNPoPc3YITGEfY45PQKLEtv5+BhP7pxJupz
      1rT0M9jZiHPP13D0XSDCGwSteQ8B/zCOG36AiE2nurGX/3hs77TX+yhBeofgEPewKcPLPe+6
      gpjcEoQQ2Ld/k8ArX5t5Elic2Ld9BTnVVHyQYlLRvfOnd88Hqmbwi2ePsutYO3MNr+7Bcb71
      uz3kpsbPOQEEguXFabT3jnKyqY+slDg6+j3ccUUZ3YNj5KbGU3W2l96hcVaUZJCW4MJmlecM
      l/76E0BSsCy5Ca390IRRgkCKyzDFrPK3mOpsETZRAMgWRFwmRsCDsuQmM+c8McOllEXIOesI
      N3vnLJNHgqrp6EgoWauQM5ZjBMdBD5sqY7ZYhCTT2b97XufUNJ3uo89RMANXXu+tRW16g77M
      6/nZM0dm/bFUZHZ3x9H2bBPfuj+PWKcNpWQ7DmcCoQM/Res8ej4LIwRS+nJsGz6BnLtuynmE
      YoMFOMdEBUnhcJOHN45HP8n8QTUqvzlN13nzRBsd/R7sVoXBUR/j/hD1bQPYrQrN3cMsK0oj
      Od6JYRj4gmFS3C503Ux2zIS/Wh3gHIQQiLgslOxVGLqK4e3HGO9DaztgbvQUO8LuNtvuBOjI
      BLExnlCBbd0D0Pw6aucxBss+zmhMKbExLgJpa2gs+Bg+EYNAsL+mfd6c8hS3k6vXFGG3WRCS
      jLCYFF9hsSMm6NCvH2+ZtX/4YsgYXOU8SnygdYYjDHR7Iv+5X6a1d24uDJh9rv0jPtaVZSFJ
      ElJcFsri65GzVmCM9UI4YDq522Ig7EdYXAhX6nnhKElBaz9oajddYmjWBB7uKKPfPz8qtqYb
      kU0+LoBhmI6TYC5W3oBZ/Gzv89DcPTI5kXqHvXQPjtPSM4IkCYY8/hnDoKyU2L9NCCQkGSmh
      AGO8d6pagKGbr3NJwb79GwxosTyxu5a6AcG4N548NYY7ct+H3Wblh882Ewi7uHnzR9hx6Cxd
      e2oQooZ1S7JJiHHgn6cDeX66m1jH7JqSGUkxVM1j3EiSICE+FmZZ4A62qZzpmN+e5WBtJ6fb
      BinLT5mwjPoLoQM/xQic/yLDN4jec5LwiT+iLL4O25bPI7mSEZKMnL3G1Ou5xJmgQUs2raML
      a2O0W5UJq9NLdz3DYzMnNISAW7csefsNMQuF1lVl6mNGgBEYwduwi98fD/Nqq4MOr50Rb5AT
      TQP86mwefWlXMeoL4/EFeWJ3LV0TJW/DgEN1nbNaLEWCzSJzRWU+siyhGwZhVSMUNv8Lq9rk
      CrJ2Sda87jE/M5GkRZvM3Hik+5St7B/JmvcwDKkab9V0YOg6ocMPEdz9vSmDf+qXaKh1z+N/
      7jOmdCQg565DuKb79r4tCEFv/Bp82sKGVFpCDPnp7kt7TbNgcW4ymyty/nabYG3gdGSDgwl0
      dbRzordr2uBo7R2luWeE7GQnmwod7DjlYdR7viikGwZL8lMQgqhIUZIQXFGZT2qiix0Hz1Ld
      1EtHv2eywBXrsJKZHMuyojSWFaVRUZgaVQO+IkvctW0pljwXWsse1DOvTq2UColQzhV0ns6E
      ebbdA5zpHCLUdojQWz+bncI8Ab27iuC+H2Hb+hWk+ByURdcRPv7IJasGS0mljKdvBKJPElwI
      VdN54ObVfPuRPZc0zx8JLoeFj71rFQ6b5W83AeZqoQtiQ51haXTaLNyT1UBe019o1q+nk/zJ
      v9ksMhvKs9myLJefPHWYpllSokJARVEq44EQX/3VrikT6RyGPH5ae0c5UNNBrNNKQUYCMQ7r
      rHqdkhDcdtkSKkvSwdCxrnsAJKu5UVUDCFscctE2gqV3Eqw/ykImwLg/hP/gH5CjGPznED79
      EtYV70dy52Jd/h609rcujXy51YV1zYdwG+ksdAK4HBZKc5L44HUr+OVzR9+xvmBJEnzg6uUU
      ZJid3n+zCSBnrTbdWSK+ugWZi1aRHo6fNoCddgtLC1JJ7XAhdWiszrVzXLWj6QYOAtyR3UTu
      0dcxvP181p3ATqOUt8ZyGQ2ICWUGJukYqQkualv6oxafHfOFqG7sxaJIxDisZph0Af9fACkJ
      Lt6ztYyti2LQTvyRYONrZp1DDYKQEfE5WBZdh7L4Bmy4sCxQ2NVh+DB6Iys4z4jAKGr7IawJ
      eYj4HOxbv4r/hX+KaFsaNWQr1tX3o5RcTe5IEJfdEpHxOxdKshKxKBJXrynEFwjx6CsnL/kk
      sCgS915bydVriiY/+5tNACmxEMvK9xM69CCoF1ZWBXLOWpLX3Ml7Uv386rljkzlil93CTRtL
      +fMbtfQMpHLHqv/kj4eH8Hj9fOmmfArrf4BtqAZtonMxAbjdeIsrU8rpXfppRqQUZEmQkuCi
      uWuYP+6qWVATtkmxULlyZQEZybEMjvqwWhSKMhMoy0smZqSawPNfRe+tnSYMa4z3EOw37Ybs
      Wz5PSrxz3uxRgEzLCLI6/4Gmj5gZKSEEUuZybFu/THDP9033mflCcWBZcTfWFfcgZAvJbpny
      ghQO1c3PL9qiSGwoz5lUbbtly2KcdisPv3T8koVDTruFj9y4kisq85EuaPx/xx1iZoRhYGhB
      1LO7CJ960ixqWZwo+RuxLLvLLNoY0N5nFj68gTDBsEpFQRr/9ps3ANhUkUNempu27j4+pP0c
      6+DMlklyxnIctz+EUOwcP9PDdx99c0E6RBfCqsh8/q6NrCvLmrglUzA2sONfIhbpLoaUsohX
      4z/Erw/ML2MlSYIvbHWx9NRXo4r/L4RlxfuxXPbPdA2McbbTVOorULpIqv0F9J6M8nwCEZOK
      ZdmdKHmmgp2wuhCuFM70+vnXX++e18KyuTyTz95YhDFwGn2wyWQEWBw0+eJ48Cg0jQh0Y2Ey
      kQJYXpLOvdcspyDDPU0a8W83AS6AoQYwguMIxYqwxhIpKdzWN8qXf/kaH7hmOcfPdNPRP8a9
      l+eyakkeauu+qMr79uu/z3jm5XzpF6/Ss4BVNxKS4hz81wPbSYp3oo/14H/uH9F7o/Aum0Ao
      cxNfat5Onyf6AbO0IIV/va2U8B9um1OU+GKo6z/HYz1L2XWseTLEUGSJbWVu7i7swdq806wR
      RKouy1ZETJrZDCQk9LGeiR5p1ewFj81EKdjCK54yHt7bF1UIkx8X5stlDbj6D5p1jIvU4sL2
      FA6rS9kxtpym8egLeLIkyEt3c+3aIrauKJjRQ+D/xASIBqqmc7ZjiJzUOGxWBX/LQcTrX0PY
      YhExaWgtb855DqX8Vv5s3M4Tu+e2TZoPbtpYyv03rCB8/FGCe74/Pz182UL94n/h+/ulqFbN
      WIeV73z0SnJSY/H94W703sgNKJGgy3YesX+aV1oi1zuuXl3Ax65dBMNN6ANn0EdaTTqIbEXE
      ZiDFZaJ1HEZt2Dlz2lVIGO4CDsbfzu9qnHh8kcM0AayI7+c+14skhjuYqyYRtCbRnXs7h401
      HDk7SM/Q+NSagQCLLJGWEMPK0nTWl2eTn+42rZNmwd/NBLgYwQM/MVOAgIhJiyrkGEvdwJfb
      bpi1QLIQxLtsfP/j23C99mn0zvkrGSvlt7I/8V5++syxWVfNpDgH21cXkRTvID0xhsLAMYxX
      vhh1KrMzfj1fad6OOoPmkiJL/NcD2ynMnK6FZ4QDZr/vsUeim+AON8F1X+TVoXyONfQwNOZH
      0wwcNoXC9Dg22U+ytPPhi/Z/c0C2YlnxfmwbP4k/bMrihyeamWwWhZR4Jzbr/La1/zfIcAuA
      ZfEN+DqqCcpxxNoVjNPPzflv6kZjLvngBxj1BqmuPcN6z/w2f+dgDLdy2ZZU3LGbeXZfAzUt
      fVN6GdITY8hNi+dM+yCP7zqFgZlqLc9187HMq3B37pzzO0RcJi1596KenXmzq2o6ZzqGpk0A
      wzBQG18zm92jfbv5R7BX/Zw7b/0Zt19RjjcQQtUMHFYFa+8RAjv+hDGfwQ+ghQhX/R45uQTH
      4hvITYuOmTsb/m4nwLCUyk+9d9HRP841OR6uEi8gZlsJhUSNseQdu55TZ9pZPw/9+wthhH3I
      aKwszaCyJB3v6AidR58j6BkgpXwr9vRFfOXB1xm+QAJeNwxOtg7zS67in5cmIuqfmkF/XyAl
      F2O/5jvQbAFmz/ZE5M0ERggd+11UvgZT7mukjVD1n7Bt/swERRmMgAf/4QcXJDoMgBogdPhB
      5KyViLjMhZ3jAvzNqBBvF6ea+zl+to+eYS8vt8cSzN0+6/HKouvpkvPesevp8ahgiayNOheE
      1WXG2UIgYWA7/TjZNT+gqPVh3If/nRMnqmd02TzVNkbv4o/juOVnKGW3ICUWIpxJiLgs5MxK
      RGwaRthH4LVvkResjqj9eQ6yJEhPdFF1toe3ajroHhxD1w20/nr0gYWQ5wy0ln0Y/vPNK1rX
      MdO9/m1AH2pGbdzFpYje/27fABlJMcS7bIx6g6QnxaFc/iW0t+yIMy8iGRdsvGQrliU3Ydvy
      OcZ+tvcdu56hoAUpJw9tAWGQlFSMIdvRNR2hBU1nxQmaiD7cSrdxBoi8cdUNg74RHyUVa5Gz
      15irtBY2qRZHHkI7/GvAwBjtJH2gmbXpH+dAV2RDkLx0N4/vqqGxaxhDN3DH2rlzazlbjNp5
      9SBPub7xXtOc25VkhlLNe0w/57cDQ0Nt2Yul4o5p3XLzxd/tBMhOiWPbqkJ2V7XQOeDhn365
      H1leR7aRSYW1maVpgvyiEpTc9cgZFYCYk3L7dmBIMkrJdpPgN5/cvGyj3bWK/a+cYmQ8wKLs
      BFa5y7B3HAFDQ4rPIT2nGOoi6/cIASlu18T/i0muv6EGUFv2cWF2RVHH+PAqP1JSMW/VdEzq
      tcqSYEVJBr5AmNoLfI77R3w8srOaokXNpM7zeUxCC5upUoCwLyrj8migDzZhBEYQMWlv6zx/
      dxPAMAxqW/r5zY4TnOkYnEaf7SeJ4yTh9Fi43JXH+5YtJmaiJS/eZaed6Hj384XbZUMp2oBa
      9zxa17Eo/5Wg07WcH7zho9djDozdVS2szF/CP6z/PC59lMOBEg60hmekGJTlpZCXFj89HBAy
      wjGdXRmfnMFnN67nzIYhzkxYupZkJeK0Wfj6w29MO97jDdI5HFr4BBDSpCecEfZH3fY6J1Sf
      2bT0/6cJoBsGrx9r5qdPH5mzyOILhnnp4Fnq2wb48vu2kJrgIj/Dzanm+UuwRIP8jAQkZxK2
      K76E/6UvYpxTcZgRgkByBY/0XUHvBUUwTTc43OTh1aKV3H7ZIl588A1qWru5dctiDtV1Tqqd
      CQGFGQncsmUxe6pbaev14PWHsFkVMpNiKM1JInPFRxGDTRhe857lgstRSq5GKDJl+SmU5Z+n
      RHf2e2Z8Q/odmTA+D9GCC+/S6kSKucTU60uIv5sJYBgGR09386vnZs+VX4zm7hH+5y9v8eX3
      bWF5URrP7294R65vWVGa2YqYugTHtd8luO9/JmL5COGQYkcpuIz+3PfT/HQTMH1lr2nq4VrX
      Ud6/PJ2zFSvZtrKAWzcVcWzvq9QFM0mMc9HUPcxPnjqMxxuckr0RgMthpSQ7keuWfYdlthYU
      l9lyKiyOiNefFO+kJDuJQ3VTs0QxdhmPowDDkTDVITJKSCmLEC5zlRYWB9iiN0GZFee63t4m
      /m4mgDcQ5lfPHcW/APJaTXM/z+w9zU2bSslIjKF7Hm2N0SApzoHTZuGJ3XX4AmEKM91UbPtP
      HH2HCdc/jzHeixYOIVsdYGgIxYGUsghdts/YAaUbIBKLWZSUxZIEM3tlWAQry4uoOjjOSwfP
      zuiMaWDSpY+f6aG2VeaG9Uu47bLFxFhm7nizKYL3bS0l4BvndOcoOhKJsQ5uK4O1ZTlYGq9E
      PfkX5vUWUGxYym+Dc5PO4kROLZvTTy4aSIlFCPt8zKsi4+9mArx6tGnBTpIALxxo4IYNJWxf
      U8QjL5+4pM2AMQ4rP37y4GSRTZEFK0sz+eiWPBzDLegpFTwd2s7lCW0k1v4CgmNo3VUkpFeT
      EnMlrRESLNkp8dSG0tG7DJZYAsS7bOhIvNlpZ3/NaUJREvmCIY1n9tYz5gvy4RtXTpMmN9QQ
      Ws9JtKbXSemv51NWDy0Z8YQcGeRXXkbG4vVINgd6fBx6dzX6QJT9A0KglF6LUrBlkoAmhEAp
      uMx0knk7mSBh+hMzD3GwmfBXb4pfCHTD4NcvVkUldTcTwqpOQbqbyyvzONbQHZWvcDSIcVjw
      BcJ4LpBI1A3oGhzD4u1k8ehOJHsc1vKbSW58DHmkceIoA2twkLjSzdT0S4QmKr9CQG5qPGP+
      EC8dPMuBUx2caR9iaWEqDe2D/PrF46bM+TxgGNDWO0qMw0ppdhJCCAzDwAiMENr7Q4IHfozW
      fhBjtANLoJ8UtYP0QB327n0Ynk7ktKWmG2hyMXpX1cw8oHMQMv6MzexzvZsnDnbx/P4G3qrp
      oGdojJT0HOwj9Rie2X2JZ4OUXIxtwyeQ7HELPsc5/F1MgP5RH395o3bBlqHn4LQrbCqwU2Tp
      5mCzj+AC+1fPIdZpZc3iLBo6IsfGXtnNtnffT0zlu0lLTkC0vHFe4hAQFhtFW+6iZPFSBj0+
      JCHYuiKf0pwk3qhqQdUMNN2gb9iL1SLzZnU77VE4qUSCbhh09o+xsjSdeJcdwz9E4NVvoNY/
      P7ManhZC7z+N3l+PkrseKakEOWc9Af84xngP0sWruKQgYjM54drOD5or2dMwRke/h4FRH12D
      Y5xs6uPVqk5s7gzytdNI86VCACgObFv+CTlz5TRq80LwdxECebzBtz34AYb7ugnsfJCM7moe
      SFzCTwevYSy8sEngsgo+dU0+rZ6ZO7rCqo7uLkA47BiGgWXpbWhdVabXmJBQCv+/9s47Oq6z
      zMPPd+/caZqiMupWl2XJktxtuSa2U5wEzMbOpmwoBwiELElg95CF7LLnwO5yFsLCchaWbAp1
      4Tg4AQJkbVLccHCLa9xjyZZsdau3qbfsH9dFiopnZMW28Dx/zpk7c2fmvnfe73vf3+9djpY8
      lZ1vnbpg7RHhwKlmMpJdQ9YGBnC8rp1TDdEPfhiJtp4Bdh5t4P5bE4gcWodWu41ocnqtYR/h
      fT9BWfoldjYpbGpegSOcz9LUTmanhpA0vzkQMX06O9qSeXZzE6FR9KzBsMq6Y1aMKXewSvl9
      bO3cshVl9kfNnawJKupMigCYKGzhNrMQE/FTplTzyJIH+dm+cEzpkABy7d08mryJ/APtGJZ5
      KNJcIvrwHyQ3zYtrkNWKlDkT29IvojUdQsqcgVxyN8//8QRvvHP60nMa2/to6ugbMiQ70WXH
      wLhqiaBhwMHqZj5cpmAc/c2YpgRDD9SJnNzIGedCnn29y7Q0J5GDPT6emruQeaWmIKils5+f
      /G7TqBf/RVRD8FJDEUVLH2dqy8sY3fVcKRCF04e16lGUirWmZ9QEMSkCwOO0mRfEVSq4EtIK
      sSQuRj23hz3qXNa/M4CGTGVhGu09/lH7bS6SnpTAXaV2ljT+HGegHiMChcYWFrh87OrLZ7Ah
      XYrHweolJVhkczau1riP8M7/RuuoQQgZOdhDp6uc3SPMujIMs9JdkJWIqulUlWXzhx0Ts33b
      2jVAR/UekmK1SAx203xkK/5Q+eWHwipHatuYXzYFwzDYdrCOnv7oWiZUQ7ChLZ+nV38f9fB6
      1NrtGH0tQ7tNhYRI8CHnVGGd+RBSegVCGp+GejQmRQD4vE4yU1xUj5JrR0tFaRH28q8R6W3h
      +FsNdDa1ABq+BImnqiROHT7J0Q4bDZYS+nBjYObO/mCEzBQXt8zMY56zDuouXzx2wnwip5r8
      tDt4p7qDrr4gumEwLTeFgWCEQEjFFukktPnf0DvPAOa9Tj29hc62IH3+lSOeq8Ui8fl75wMw
      EAizfkv0KrOxCEc0+ppPMZ4NxHSjCVmquNRCIUmCzEGzHg5URzex5iJnmnros1WRuPwrWOc/
      gt52Er2z1vQvUpxISbnIqWUId4a5vvgAelkmRQBIkmBJRc5VBYDTrjBnaibCZkfxFTF3uoWj
      9T1Iusqi0BvIW9+kTAtRBki+chx3fZPT/kSefXUvLRemNx4+fZ47imUesCWjqGbBSAhBUk4p
      9y+ZQUl+B8//YT9NHX3sPNrA3pNNrJxTwMeKWhGdwyvDjt5TuOSl9KrD9+ezUlwX/j0u2ElO
      4I8vxrP4BHKSLNyeWsiuow0YhsG80iyWDBp413EFg9v34w9F8AcjJLkdCHeGKbUsXD6ucxsv
      kyIAAG6bV8iGXdW0xfglX+TuqmK8LrNzUAjBkspc0xums5rEP/1gSLej3nqc4PEN/LpuFmea
      L9uyqJrO5hqDsrkPMa9/A0agy9TG9jQSaT/NazvP09RxudcloupsPVDHTK2NGSPkuCnWEIvz
      FV5/X6exRWis9K9n4H+fQbgzkSsfxu28+j1vMC0IPUk+GEdHiM2TziPLZ7NqfhG6YTAl1TOk
      rvD+GsOVsMjSpSC/XkwaPYDbYeWzq4cXcqKhLM/HmmWlQ+6iFlkiN91LVkIEob6/wGbQe/7c
      iKZaYc3guF6KMv+zWKsewwj1odZson3Td6ltGeH5qkZ1KAMcw5MOOTGHT923knvmTsFtNbDI
      Ejluncc9v6ewaxN6Rw1a3dvoG79IsYhu6vuVyEv3klS0IPaFpJCRs+dgs1ooTHNQ5Alh8zdh
      +DswLgiRirJjS6x8XieJrvFpKCaKSfMPIIRgfmk2n75nFi/E0A+Ul+7l7+5fiNs5ct+45JmC
      cKZg9AxajAoJW0YZtrMjfz22zmMEN/0YyWYKWQzA6ivA2jLyAk3xFWIrfZTQnufhQhFJeLKw
      LX4C2o/z0YEfcGdyP+r0B0mx+LEcPD70BbQwFYHtbFRWX2iOdtAAAAukSURBVJWViyQJZk3N
      wJGTSsBXgn7++JUPuoBIykNKLiD09nfNGcsD7Rh6BKE4kVKKUcrvZVllJX8+Uh+1Pf2i8pyY
      NbwTzaQJADB/wDvnF5Ge7OLnr79LbXPXqL00dquFZTNy+cSqmXgShl/8hgHhiMqASEKvfATr
      wecQwS6QLFiKVpAw48Ms7a/nle19qIN+0BSPgwX5OuKkCgjsd38LoSTgSitjqTjJb7efuLRI
      BEj1Os1emqwKc35W07ucaR2gy1XGPJeP4K8/CcEefADHf4hwpY24IVgo1TGvNIsdR+rH/f3l
      pXtZUpGDcDiwLvgMwbe+DqEoCmsWO1JiHoHfPT6sCmyE+tD6W9HO7qQ0ZzGL8u5iR+2Vd4Ly
      0r2sXjx81Oy1ZtK6QgRCEfaebOKdE43UtXTT7w8jyxIpXgcVBWksKs+hODtpxMWjputs2V/L
      G3tP09LZj1UWTPP0c+90C0VFBQhnMpFjv6O3qZoNbYXs8k8lqMkIATlpXhaW+FiW3IRD6yZy
      7FWEzYN6y9fYXRdi51GzWhtRNVJdMmvzO5md3IUsQPJNI5K1kH/48S6aO/r55q39ZB393pBz
      G83hQs5ZSOPCZ/jOr3bFNKPgIg6rhc+vmU9Zno+uviDCUPGe/T8ch18ce8yS4kRKLUFvOTb6
      4JJB9Hun81z44xw6N3rfVm66l6ceXETeNXSDHo1JGwAX0XWDUERF08whC4oio8jSqLsmumGw
      7q0j/OZPJ4YJwD1OG08/OJfCk99BrdmKYRjoQmag+D72ee/jl5sut2OU5fn4cukplAPPohoy
      LzmfYEujF6si88m7ZlJiOYtj33/iGKhHcDFdExjeHF6TH6DBUszfztcQG78waO9bYF38JGr1
      W+htg5RTNg+Oj3wfKXsue0808sNX945o5DsaVkWmNNdHKKLScL6XsKohEFhlWOiuY5VjDxnq
      WYQWMv8ahQDZipRaijJtFeE9L5gL/ijRKj7Knxxr+OOeGjp6A2iajiQJXA4rt87K596l00h0
      2T+Qbc1YmfQBECvvnWvnn3+0ddTWisrkAF9J+PGlXB1A8+TzjP8RjjcPvegev8XLks6fERBu
      /uP8PZxsNXtjPjnPxh2t3x29aczmwbnmOaS0UkLbniFy5BUMw6A7ZT7nKp6mt7sLb92rZGj1
      pOUU4Zz9EHJaGQiBbhi8W9PCL948TG1T9xWHwCW57SiyTFvPwCjpokGCHGFtucKHSgykcC/C
      5kHyFSOnlhI++ItL/kvRIuxenA+vR3dl0djWS68/jNOukO1zj2sT44Pkxjqba8C+95rH7Ctq
      7FEZcFgZbMJn2DwE+oYvcAOuQpwrf4odwcpDTXRuO0aiy87snl+O3TEZ6iW08/s41r6IbfnT
      SFNX8fb+E/zqhIOumkOomoEszSHBXkWVbwr3W/NIxWzDkIRgVnEGOaleNh+o5c+Hz9Lc2T/E
      R0iSBKleJ3NKMunoDQwTuQxFMKBZWXdU4Myfw91VxZfuzKauOHYjASPYg9awF6V8zQ2R5ozF
      TRcAXX1jF4G6dTct+Q9S3PwKRqAb4UrDveQxlp3zUffm4Ut3UY/THMh9qK6HFK+T5aUeKk+8
      jN1XgHL6ylVbrWG/KVV0pvFWYxK/OJwwxAlZ1Qx6BkK8ufc0tc1d/P39C8lOvdz+myz3scZ3
      jNsL9tLo7KJJTcLvyCYhbz5ZeUXkpCfS1N7H10fQ+Y54PrrBS5uOMHtqBpkppmrLCPWbfp3j
      QOs4zcRULj5YbroAyEgeW0YnSRKp8x/AIa3A6GlESi5AJOby4WwdSZLYceQcTptCgsPKC68d
      oM8fwuWwsrpE5/bOQ4jAWYwoFosYGkZfK3U9Ci9vPTamDXh1Qyfrtx7jybULUGQJ7dxuQjv+
      C/38CayGRgFQABCWkBq2Yct9Etm5nHWH6mLaNu31h9lxtJ6/vnW6+YCuRbXwHZFxmoRdayZN
      IWyiWFQ+BbdzdGlgZWEaWamJyL4SLEUrkJLyEULCZrVw79JpfOtzt/PQbRUcqm6hvcdPKKLR
      0RvgV+9GqF/0Pex3f3vUmWBDEBK61c2m/Wei6ka9uNultR4l+OZXTVPc99sUGjp6Rw3BTf+C
      v+ZtTp6N3X3t8OnLd3yh2ME2PtHJ1dqVXCtuugDITvXw6XtmYxvBLjs33cujq+eOujshhMAi
      S9Q2dxEID70zBiM61WoOcs4CpMTcEY8fjOSdQsiRSU2U/U3BsMp7Z+oJ7Xkeo3/sPgYj0Il/
      9/P09McuIe0crLqzuc3Fd6zICnLWrNiPuw7cdCkQwIrZ+WT73Lz+zmlON3ViUyzMmZrBXVXF
      UZXmk9wOJCHQBjsxCPNxIclYFz5GcOOXRzeSFTLWqs8xoENflOOZDAP6G99D647SVrCzBqvW
      D8TWajDYTlwICaV8zdjDy0dATpuOnDEjpve9XtyUASCEYFquj2m5vnEdX1loTow8VNNyads8
      M8VNRNVoau8jo+g2rFWfI7z3R8PF3xY7kRmfQs1ageXC3nh05wyJWguEo7urK0aYTKmd80yJ
      6bMVZA7dtZHzFmEpvRv1+B+iewHFiXXZlxCW6D7X9eamDICrxe208sSaBWw/fJa65m5augao
      b+3hud/vJ8Xr4LE7i5jWeQbhSERKzCfQ3w0YOLMr2dxfyWvv2Ijs2szcaVlkJEenc7ApFnJ9
      TmiPrmwjo1OVEebwmeiNTISAxeU5aJ21qDWb0dvfw4gEEJYLa4ErtU1YHNhW/CNy1uwo3/H6
      Ew+AcZLidbBmWSlt3X6++uKWCzJBaO7o541NWymwbEfSglSnr+Xfj6WDAX+VU8pvDp5A1cyW
      7jf3nmZOSSZup/XSXOLRmFOSSUFxGmqNNTodrSRzy4IKtqtOTp6LbjG8qMhDce3z+Df8doz0
      TTLzscFhJduQMyqw3fKUqdq6ASq80RIPgHFy8UcOhCIEQkPz41YjHb30PqxaN+322QTDZgPb
      24fPDeti7R0IsWZZGS9vHX1iZUFmIn9zWwU2Vxjdm4PefmV5pEhIxZk3hyczPXz9p9to6x5b
      R1GUauVh6SWMY1daYwgs01YhpRRBJIBISEXOnInkK0FcpVPz9SAeAFdJWlICpXk+9p1sujS5
      pbK0CM+KjyAJwcKwTn0gAd0wSPE4+OnGQ0NSkswUF6sXl2C3yqzfcoz+QBhdN5Akgd1qYU5J
      Jg+trCA71Q0YWGd/jOCWb4xtLCUpKDMeRHiyyEbwjc+s5Gd/PMT+U83DdNUOm4XFFTk8ZNuI
      ozqKBbahoda+TcKiJ5CSPrh5C9eKm64XaKIxDIPWrgE27DpF/fleSnN9fGjR1BH1B6Gwyvde
      2c3uYw0YmK4RX354MTlpXlRNp7G9l+qGTnr6zeJaYVYieemJQyYcGlqY8O7/IXxo3cgLYosd
      pXwttiVfGOKdaRgGNY1dHK09T2tnv6nnTXEzqzidLEsX/nUPxDQBxlK+Fsed/xrTd3UjEg+A
      CcAwzBZrVdNRLBKSkEZ1Wg5FNKobOgiEIkzL8eF22mKeW2CoIdS6PxM5vB69vRojPGAKU5Ly
      zNm9hStMI9ooXzh88JeEtn0rpnMQ7gwSPv4qYqLMbq8T8RRoAhAien2rTZGpKBi32775fhYb
      SvFtWApuwRhow4gEzTm9CT6EbI36wr/IeMYfGcE+9L5W5HgAxLleCFmZkEFxxnjGHxlX0Sd0
      A3HTtULEGY7kzoz5GKE4ECMI/Scb8QCIgzxlHojYHNek5EKE6+pSuRuBeADEQZ4yHym9/MpP
      vIRAmf0xhJj8l8/k/wRxrhohK9hXPA326NRbltIPYSla8QGf1bUhHgBxAJDSK3Hc821EwlgD
      7QSWstXYV/wTYgIdmq8n8TpAnCHo/g7C+3+OVrsdfaAddBVhTUDyTUWZ8QBK4YqYt1lvZOIB
      EGdEjEjAtD3UIgibC+FM+YvI+d9PPADi3NT85YV0nDgxEA+AODc18QCIc1MTD4A4NzX/DxCk
      ep89wtafAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Products Imported Yearly' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d3Rc2XXm+7u3ckAVUEiFnAkQAEEw59S51ercakXLkjWWJc/Inpnn50me
      N/LYM/NmbI2trJFattTK6sRWR3VijiAIAkQkcg4FoFA53zt/FAARRCEUArvR4rcW1yIqnHur
      6uxz9tn7298WZFmWuYM7+D2F+H7fwB3cwfuJOwZwB7/XuGMAd/B7jTsGcAe/17hjAHfwe407
      BnAHv9dQvt83cAdrg4gkMen00TMyxaDNhdsXRBDAZNCSl24mO9VEUoIWQRDe71v9QOGOAWxw
      hCMS1zpGeONiO619E7h9wZivSzJq2VqczgN7SijNTUa8YwgACHcSYRsTsiwzNOHmmVevUt8x
      QkRa3s+oUoocrsrjsw9sxWzQ/N7vCHcMYANClmWudYzw9ecvYXf5VzRGXrqZf/P0Xgoyktb4
      7jYW7hjABwCyLCMDyDCzIC+2Mtd3jPJ3vzyHyxvb3VkuUhP1/O0X7sKabFzVOBsZdwzgfUQ4
      IjFoc9LQNUbXkB1/MEyKWUdpbgqV+WmYjfNdlDG7h7/4zls4PIE1uYfiLAtf/fwREvSaNRlv
      o+GOAbxPcHkDvHi6ldP1PUw4fdz8K6iUIgUZSTx+qIw95VkoxGi0OhKR+NqvLnCusX9N7+Xp
      Y+V86p4tv5fngTt5gNsMWZYZd3j5+vOXeOlMC+OOuZMfIBSWuNE/wTdeuMTrF9sJRyQAGnvG
      uNwyuOb39Or5dmxT3jUfdyPgjgHcZgTDEX75biNX2obnTfxb4QuE+eW7TdS2DSNJMu9e6SY0
      bQxrCW8gxMlrPWs+7kbAnTzAbUZTt40zDX0s1/N0+4IcP9tCvjWRq+3D63ZfF5sGeOpo+ZL5
      AVmWCYUj9I46aem10TviIBAKk6DXUJqbTGlOMmlJhlm37YOOOwZwGyFJMqfre/EHw3G9r2PA
      zslr3auO+iyGUbubCYeX1ETDgq+RZJkb/RP85mwbdR0jeP2hOc+/cakdi0nHseoCHtxbTLJJ
      94E/V9wxgNsIjz9I9/BU3O8LhiPUtA6twx39DoFghAmnb0EDkCSZi80D/PC1OsYdsc8LsgwT
      Dh8vnm6htX+cP3l4Bzlppg+0EWyMfepDgkAwgmcBqsJSWGjSrRUikrzgziTLMrU3hvnuy1eW
      dR+SLNPYNcY3X7zMuMO31re6prhjALcRgiggiitbDZWKdf6pBBb0/6fcfn75biPOOHMP7QMT
      /OZc62wU64OIOwZwG2HQqkgy6Vb03rz0xDW+m7lQKUSMOjUQXfFd3gBObwBZljnf2E/XkD3u
      MWUZzjT00TfqWDLi9X7hzhngNkKjUlBVmE5r73hc7zPp1Rzdlkdt2xDrNY90GhVpSQZkWebU
      tV5+8lYDsizzsaPlXG4ZQlrhDJ5y+7neNUZBRiLwwTsLfKh3AGk6ZBcIhvEFQvgCIfzBMMFQ
      hIh0+7dlQRA4XJVLaqI+rvftLMtiW0kGWakJ63RnUUqEQasiFJH42TvXGXd4mXD6+Pk7jXQP
      x7/6z0CWoa0vPoO/nfjQ7QDhiMTwhIumbhtNPTYGxpzY3T7c3iDhiIROoyJBryY9yUBxdjK7
      yjIpyEhEp1Gt+X043H5cviDhsIRCIaDXRlfZp49V8E+v1+ELLB0OLcxI4qkjmzFoVRzYksuv
      3mta0/ucwbFt+QiCgEDUHZqBjIw/GFnV2Ha3H5kP4vr/ITIASZJp6Brl5bNttPWN47klRj0D
      byCENxBi1O6hoWuM35xrw2oxctf2fB7YXYxh2g9eCWQZhidcnKjr4Vr7MDaHF68/RDgioRBF
      tBollgQtJdnJ7N6cRU3LEN5A7PuE6OT/8mM7yUxJQBAEjm3L541LHXEfRpdCdqoJi0nHz95u
      wDblxaBTo1UrsSTouH93ES+caiEYWrkRqBTiB3Lyw4eADCfLMt3DU/zwtToau8dWNZbZqOFj
      Ryu4b1chGtXy1wZZlhmb8vCzt69z7nr/sqIeApBi1qPVKHF5g3j9ISRZRqUQSTbrObglh/t2
      FWG5KZkkyzLHz7bxozeurfQjzoMoCORZzfSNOuYV1Tywp5injmzmb358mt5Rx4qv8ZG9JXzx
      4e0ATDh9XOsYob59hO6RqSirVQaTQUNuupnqYivbSqykJupvS/5gQxtAOCLxVk0nv3y3cc3o
      wQDbS6x88ZEdZCQv7XPLcjRB9MyrCyeIFoNapeDYtnyqi61EIhKJCVoyUxJIMupihkxD4Qj/
      7SdnqGsfiftasWAyaHB5AzGjNIIATx+rYMLh453arhWNr1KK/Nun97GlMI2Xz7bxTm3XkkU8
      JoOGu7cX8NihMhKN2hVdd7nYsAbgC4T4xbuNvHLuxoojFIsh2aTj33/6IJtykhd8jSzLvH2l
      i++/UksovPJDtSgKPH2snE/cVbnkqifLMsMTbv7XL86tKKs8A0GAPZuzaOy2LVhHDGDUqfny
      ozv59ks1i7prC6Ek28Jn79/KM69ejXsXyUpJ4N9+fB9FmUnrthtsyCiQLxDmB69e5eWzbesy
      +SG6Vf/3n5yhuccW83lZlrnUPMgPXr26qskP0fPLm5c66R9zLvq6YDjC8bNt/O2zp7HZPSu+
      nlIh8tjBMh4/tHnRyQ9RMp5GreRwdV7chfRatZLSnGT+4dcXVuRCDY67+OsfneJax8iyyYPx
      YsMZgCzLvHi6hZN1Pet+Lbvbzz88d5HxGFx525SXH7x6dVWHw5sx5fbzneM1hMKxx5NlmTcu
      dvDsm/UMjrtwTx/yBUEgQb+8g7sgQEFGIv/hMwf5g/ur4spKP32snOoS67Jfr1KKHNiSw8Xm
      QSZXWLcM4PQE+OaLlxmwuVY8xmLYcAZQ2zbMr080LVsFYbUYs3v4+guX5kxMWYZfvHt9zfk5
      rX3jvFXTFdMfD4Ul3q7pnLfjybLMZ+/fyr/+2F72lmdjtRjRa1UoRAFRmP4nCuRbE/nCQ9v5
      my8cY2dpJgpRJCs1AZVy8SmgVIjkpJlINun5syf3cPeOAnSaxQMEKWY9n7mvipFJ95p8RxMO
      H9944dKaLTY3Q/HVr371q2s+6jrB6Qnw97+6gNO7tmHApWCb8pJs1lGcZQGioc4fvHJ1XYzQ
      5vByZGseapVizuOhiMTxs60xcwfbSqzct6uIrUXpaNRKptx+ptz+WUOSkXH7grT02Tjb0Mf1
      rjHsbj9WixG3L7gozWFPeRb37CxEFAW0agXVxVaKspJw+0JR92n6GlqVkoxkI4eqcvncA9XI
      MvzmXNuaUSAmXT4yU0zTGeW1w4bJA8iyzFs1nQzYFveT1wOSLPPcyWZ2lWVhMek4Xd9LYB1W
      I4C+UQetfeNs35SB2xelT3v9IdKSDJTmpnD+lnpgjUrBjf4JxqauceJq94LRsHBEIuyT8PhC
      DI67uNA0wE9+W8+usizSEg2MTc0/U2QkG/nEXZUoRIEb/ROcutbL7s1ZVBWmc/Z6P1q1kj95
      ZAdpiQY0aiUpZj16jQpJlnn2t/VrukDIMrx5qYMDlTnzFofVYMMYgC8Q5vWL7e/b9W1TXs41
      9vORPcVc61ibEORCuHpjmGSznn9+vY7W3nFCEYkEvYbqYis5qSb6pxcBpUIkK9VEQ9cYk874
      aceBUISz1/tQKUXMBg0Wkw5/MIxWrWTU7mHK7ed//OwMHztWwbX2Ec409NHWP87mvFTC4Qip
      Zj09Iw72lGejVv5uUk46fLSuA/2he9jOqN1NTpp5zcbcMAZwuqGXiRX8yGuJl8+2sr8ym7FV
      RGCWg7b+CYYm3FzrGJ19bMrt50JTP597sBqLScf4lJerN4a52r50bfFSCIUlHOEAOWlm/t2n
      DtDQNcZ3j9cgy9GF559fv8b+imxSzHpUCgWXWwaZcvsJRyQ6huycbejjru35PHKgFJ1GRe/I
      1LJoHvEiEIrQPTy1pgawYQ7Bl5oG5j2WaNRSWZBKchwUY6NOvWJdzHGHl6ttw3j861eaCDBo
      c9ESI/waCEW41j7CloI0mnts1N5Y/eS/GY3dY/z9Ly/Q3GObM64/GCbJpKMgI5HWvnFGJt34
      g2HCEYlgKMLIpJufv9PI3zx7mgmHl+FJ99rd1C0YnljbaNCGMAC3L0hXjKRPbroZbyDM9k0Z
      sxEPgNLc5NkCkpm5PvtcTjIatQJBiE3OEoTf/bsVsgz1naOEwusbgQqGIwvSKXyBEM/+tn7N
      tYFm0DE4SU3LIDdHSDOSjSSbdNS1jyyad2nqtvGDV6+uuOptOfCv8c6yIVygvlFHzISNQNQP
      lmSZHaWZbCtJp2NwkqxUE5YEHUqFiFatZNLlJz3JgNPjxxcIk2zScf/uYgLBMNe7x+gesrO1
      2IrLGyQnzYRRpyYUkfjt5Y55hejdw1MoFQLrWeSk00SJaLcmjwQB3P4Qb17uXL+LAx5/iMyU
      BKwWIx5fkD96aBvffOHysjhOF5oG1rUCTK1e2ym7IXYA25Qn5pcqCAJqpYLatmGSzToutwzS
      PTxFU7eNK21DuLxBTtT1oFUpOFnXg2o6epCUoKN/zElD5xiiIKBSKjBoVXgDIU7U9dDUM0ZN
      yyAqxfxog9MTQLvGP8KtSEs08NTR8jk8GEGIsjaHxtcnIXQrhidcpCcZGBp3cbahL67o23re
      Y1qctRRLYUPsAAvRf/ttDuwuP5IkU9MyyPZNGUw6fdimPGwryaB72E5EkmjqsbGvMpvrXWMI
      AjjcAcwGDVqNkvaBCbaVZNA76mB8ykMgFGZ4wk0gGCEYIyurVilQKxVrSr67FUVZSRzYkkNG
      spHzjf043AGKspJo6Bxdki6xVpBlOHe9n1yrecnE160QBAGVUlw1ReRWKBUihZlrq2a9IQzA
      tYBPOXGT4sCE08fbV37HWLx5oky5/bxb2z3nvWev/86Hfu/q3OcWkwkUBdicl8LQGh/GbkZ1
      cQYKUaQkO5mS7OTpe/Lwozfr1+2aseDyBthfkYMlzjrmZJMOk0GzII9qpchNN5NhWduquA3h
      AunW2eWIDwKHtuaum0pDWpKBioLUeY9fbB6cRwUQBQGdRrlgVEsUhDmHebVKgeaWJNJifCAZ
      uNYxQnaqKS7e0KacZO7eXhAzkLAaHNuWj+b38QywVJVWVkoCm3KSF/XNBYG4t/JYUClFynJT
      2L4pY9VjxcK9OwsxG+Zy4CVJ5mxD37zXHtqay57N2aQlxfaL862JsytmslnH3dsLqC6xolT8
      bmZWFqQtGhZu6BxFr1WxpSBtWfevVio4tDWXg1W5s7vXWiAnzcQ9OwrX3Kg2hAGkmPWLltQV
      ZiaBLC/KVlQpFeRbY/NI8tLNyz7YWkw6tGoln7ynEr12beuIU8x6LAk6XjrdwqlrvUw6fciy
      zJTbz+D4XN9fp1bi9AQ4ea2HSZefh/aV8NC+EswGDffsLORQVe6c1+elJ/Le1W4uNQ9SlGnh
      o/tK2FqcjgCU5Ub1PPdXRqvQbv4uAqEIgzYnn7pny7I+70P7SshJjX6fX3pkB4Y1+I50GiV/
      /PB2fIEQAzYnY1OemOezleCD5FssiOxUE3qdCo8vdkGGLMtEJBlJlnlwTzEOTwC1SkGCTk3P
      yBTJJj0mg5rhCTd7yrNo7R2nOMtCWpIBXyBEslmP1x/C5vCyOTeFt650MjoZO9u7KScZQRAo
      sCbyuQe28n9eqSUSWX1eQBQEIpLEt166jCxHQ7xZqSa+/NhOZFmep8MZmi7wF0WB9EQDHQOT
      CIJAnjURvUZFXrqZkZsSUv5gGJNeg93tJ91i5M3LneyvzEGpiEbSRqc8lOWmMDLpQqtWzlGJ
      6xtz8NF9m/jLT+7nGy9cjkm7UIgCyWY9zT02vvS1V0m3GLl/VxH/8vHdfOuly/Puf7lQKUW2
      lWTw0ulWekcc+IIh1CoFVouRY9sKOLglB6NOveKCmQ3BBjXo1Jxp6GPKHZtXXpRlwRsI0do3
      gVGv5lLzIAUZiZy53ke+NZFwROJyyyBmgxa1UoEvGCY9yciky0dN6zCyLNPUbcPlDSKKoFIo
      YtIdBODRg2VkT+tdFmQkIknymhz2DDr1vGiX0xugf8xBUoKOK21zlaElWUanUbGjNIORSQ/5
      GYkY9WraByZJSzJgm/IwNO4mEI5QnpdKa+84O8sysVoMDNic7C7PpnfEgc3hpXfUQYJOMyu9
      3jvimCPDnm9NpLokA6vFyN6KbPSaqHyKKAokm3RUF1vRqJX0jzoYd/rw+KOiAxebB8izmnnk
      wCbqO0fjFgXWaZRYk410DEwyYHPim84+B4IRJhzR2uKhCTdleSkr3o03TEnkT99q4LmTzTGf
      S08yMDo9YWf+n5mSwOa8FK60DpGWZCArJYHWvnFSEw2YDBo6BiaxmHQkGrW09o2ztchK59Ak
      Zbkp1N4YjrnKGbQqnvnLR+Z82eGIxOsX2/nFO40rKhlUiAJ37yhgwumjtm2+/LlaqWBPeRZn
      YpwBlgOlQsSk1zDpWjmP6v5dRfzp47tm/55p8tE76iDRqMUfDPPXPzoVk6+v0yj5///kHjQq
      BT996zo1rYNLMmnVSgVVRWnoNSrONfYvyioVBDi4JZevPLF7RQfkDWMAPSNT/D/ffut91Zm8
      e0cBf/bknnmPy9Oy4T/+bT0tPePLLtPMtyby9LFytm/K4L//9CwNnaPzXqNUiGwtTo9pHLcL
      9+4sZGdpJrU3hinPS2FTbjLffOEynUN2EnRqMpITFlXk+OOPbuej+zchyzJdQ3bONfbT1G1j
      zO7G7QsiyVFDybAYKc9PZV9lDkqFyN8+e3pZXTBVSpG/+Ph+9lZkx/3ZNsQZAKJRgJ2lmVxs
      nk+Kux1QKxU8sLs45nOCILApJ4X/8odHqOsY4fmTzfSOTBGW5GgHyJvsQSD6gyWb9ZTlJhMK
      S0w4faQnxZYl16gUFGdauNo2HJcsYpTPJCAtsHoKsOzxxuwe/v5X5wmFJd6t7YrKO/aNR+XQ
      Q74lk4IzB1ZBECjKslCUZcHtC86Wtrq8QRJ0au7aXsA9OwtRKkReONWy7BawobDExeYBdpZm
      olyiwu1WbBgDUIgiTx0tp75jBF+cvuRa4HB1HkVZC2chBQHCksSV1iEGbS40ahVHyrPYVZZJ
      /5iTc439DI27CATDBMMSwxNuhifcvHm5k0SjlmRzVAbl5gkrCnBgSw7VJVZeOtsaV0lgeV4q
      qUmGmLXTqYl61EoFg8ukLLh8wdmsbkSSGbHPZXsap88vsXY+hShQkm2Z85gky7xb28XxM62z
      7s3QhJt/fuMaOo2Kw1vz6IpTjnHA5sQfCmNUxidstiHCoDMoykrigT2xV+H1RFKClk/cVbFk
      25/2/knONPThDYRweQNc6xjBFwhz9no/3dNtUGOtulNuP11DUxi0KiwJOoy6qHTjQ/s28el7
      q8hJM8WdDEzQa3B6AujUSu7bVcijB0vJTk3gaHUeh7fmLTtqIooCn7irArMh2kZVrRSpKkon
      J82MKAoYtCoeP1xGZWHsPMHO0kz0GhXPn2zmR29c49z1Pmx2Dyfreub59oFQhBN13fhD4QXF
      ARZCOCKtSDliw+wAEA0VfureLTT32mjrm7gt19SoFPzpY7sWbR00A0mW5/wILm+QZ16rw7WM
      GuaoJHmQsrwUPnNvFdmpCZgN2llXpqoofdkHYaNOTVleCuFwhCmXjzG7h+7hKfKtiYxNeWjt
      m0ChWJ4BpCUaqCpK57/98d38+M1r9I44eKe2CykSbe7t8Yf48Zv1mA0aFKKAIAgoprPGOzZl
      sKMsk//2kzOzxUwKUaA8P5WxBegm4w4f4YhEelJ8zbstCTpUyvhLJTfUDgBRX/zPn9yD1bL+
      3c0VosDH76pkZ2nmsl6/KSeZfZU5aNVKdBrVrM5+PLjRN8GVtiHMBi3i9IQC2L05a9ljGHVq
      jp9p5flTLQiCwJTbTzAcwebwkmzSs6UwbdkhyT3lWfSPOfnWi5e50jbE2JSHyPTkn4Ekydhd
      fiKSjEIU2LU5i6xUE+MOL8fPtM6p5ItIMo3dYwsGM6wWI2qlgi2Facuu/RUEqCxMm0fzWA42
      nAFANEH0n/7g0LoagSgKfPreKh47VLpsHoxWreRjR8vJSTNRkm1ZUcRqxj/uH5tbC7CrLJOM
      5OV93pFJN1NuP/5gmM4hOz0jDnyBMEPjLs409PH2la45RMKFoNeqMGjV/NcfnZo99C6FQCgy
      6+aYjVpGJuZXh8ly1Ehvzb6b9Boe2FOERqWgoiCNqgXcqluRnWLiUFXuipJhGyIRFgtmo5a9
      5Vn0jDhmcwBrhQSdms/ev5VHD5YiLrPdZzAU4Wu/usCr52+QkZyAbcq7YOJuOWMlJeioyE+d
      /VFVSgUqpUhtnNGg1cBqMXKtfWRWhCseBMMR0hMNjDu9MeP4VUXpPHF4Mx5/CJcviFqpIDM5
      AYcnQF37MIPj0XqE4Qn3gkrfAGaDhkcPlVGSlYxKKcZtBBsmD7AQfIEQr5y/wa9PNK0J/7wk
      28KXHt1JYUYS3FQ2udQX29Y3zl9+7x0AijKTmHD6VmwAENX6+fefOohGrZi9vjcQ4r/+6BQt
      cXaYWQm06ijLdCXJvRkIAug1qnkTWKUU+dIjO1EoBI6faaXf5oxJJxGEqOHL0zSXmw1JqRBR
      KkRkWUapEDHo1Nyzo4CnjpSjiIOpu2F3gBmolNHtcvfmLLz+IGMLVI8tBoHoSlJRkEZxloVr
      7aOcvNbD5eYBWnrHmXD6kAGtRolSMX+VkWWZUETmXGNUYqSqyEr7wOSqdHGUShGTQc2r52+g
      16pJmw5dVuSncqKuZ82LTW6GSimSlZKwaF3EcqFVK7EmGWe5QEa9mu2bMrjeNcZrF9qZcsdW
      pp7BDMdLFATK89M4Wp3H/spskhJ0tPdPEJZkQmEJjz/E9a4xRIVARX7aslmjGyoKtBjyrYl8
      6ZGd5Fs7uNQ8iN3lZ9LlW9AYBCEaOdBrVfgCYfzBMPUdI1y9MT/jKgoCRp2awswk7tlRwI7S
      THQaJYIgRHtq1ffyi3cacfuCJBq1WBK0qxbtDQTDvHLuBp1Ddjz+EKU5yahVCjJSEvizJ/fw
      v5+7QGCVnVtiQRDggd3FXG4ZXJPx3L4gn71vKwadCm8gjD8Y4uWzbXEbV0SSaeuzkW8188Th
      zfynZ96L6Qq+e6WLj+7bNNvwbylseBcIoivwhNPH916+Ql37MBFJxqhT87Gj5ZTlpmBzePH4
      Q0jTUYpkkx5BgJN1PVxsHohL5U2pEKkoSOUz91ZRnGVhcNzJX3zn7TlRFZ1GiSTJq1KPK86y
      sKM0g3eudGE2aFEpRSacPjQqBXnWRJBlrrQNrxktGKKf7akjm6kqTuc/P3NizZTdHthdxJce
      3cnwhJv//MMTq9YLvW9XEVdah2Lym4w6NX/35XvJTFle5diHZgc4U99Lbdvw7Mrr8gZ541IH
      +ypyKM1NmX2dLMu09k3w/Vdq6R6yx32gDEck6jtGGRo/xx/ctxWPPzgvpBgIhuPqMBMLuelm
      tOpoof6tgmAzGVy9RoUMcSeNYsGk1/D5j1RzeGse71zpWlNZw+7hKbyBEN966fKaiOW+U9uF
      YgEfx6BTYY6jqcaHwgBkGXpHHfPcDoc7wITTS0SS+Olb17lrez56rZpvPH9p1TW9UXn0WnaV
      zo/Pa9RKyvNTV0xgU4gCtikPp67Nz5beDG8ghFGnprIglaZu24p2A5VSZEdpJh8/VkFBRuJs
      3mAtMeX2897VHpq716ZGWJJkZEFGEJjLsxLg4X2l6ONoePihMABBYJqjP/cLMehUjDu8XGga
      4Oz1aD2BNxBas4J2lzdITdsgmclGhifdyHJ08j68v5Q95Vl0DdmXTei6GYkJWhq7x5YVd3f7
      gkiSzP/68j28frGd651jy1JmS9CpkQFrspH7dhWRPz35YemI10pw/EzrmoZvZTmaaXZ4AoxM
      upFlmaeOlPPQvpK4yiY3fBRoBqlmAz0jjtlCFr1GSXaaifdqu+kYtLOjLDPq/qxxCDEYipBu
      MfLEoTJKcpJ57GAZOelmbFMe9Fo1nYOTcckXJhq1qBTiorHvW2FzeDlUlctD+zZxpDqP6mIr
      lgTdbCmpSiliNmopzkriUFUeH923iXxrIrVtQ0w4fFxsijIpkxKi6g/D4y4utw7F+U0sDFFc
      +10FINWs54kjm6lpGSIYjuD2BdlRmhFXccyHZAcQSEsy8O8+eYD6zhEcngCFmUm8dqGdpult
      d9zhpW/UsS5JpK4hOwe35PDkkc187+UrvHe1B4jyiHLTzVEW6DIOxEkJWh47VMaLp1riur4k
      yVxqGaSiIA2jTk1ueiJtfRN0DtnniFRFIy9RdubwhHvWvQqEInQMTs5q7hRkJKFSiHOqwlaD
      9YhWQVREePS1utl+ETf6J/jZ29f586fm12wshA+FAczAqFdjMmho6ByjY2ASlUIkPcmAIIDP
      H1qXDiMQpS+8V9eDXqviZF3v7OOBUASPP8STR8p5p7ZrUVXp7DQTf/zQdgw6NT9763rc9zAj
      GtvYPcZ3j1+JSXUORySudYzQ0DVKWqIBUQBJjhpq2k31CFmpCWSmJKyqNeoMxOkWTuuh7B0M
      R5h0zj1UxysT/6ExAFmWOVHXw3deqplduQQBjlTnc9e2fP7huYvrev0Bm5OT13pjHMT9HKjM
      4fDWXC42D3KtfZjRSQ/+UBhREDAbtVQXW7lrez7ZqSY6h+zIK9inJCk6+f/22TNLEt0kSWZk
      0k2iUcvO0kxO1HXzP392jn/99F72bM5Cq1bx0L5NfOd4Tdz3cSsqC1LxhyLrYgACAlkpJnpH
      p2bPX/sqs7nSOsSllgE6BiZx+0LoNEryrYnsLs+iutiKQauaPed8aAzA7Qvy3InmOdu2LMPZ
      hj6yUxLWvLv6rZAkGX8wOqlvNoJ0i5FEoxajXs3jh8q4f1cRZxp6Od3Qy+ikB4fbz5W2Ican
      PDy4t4Rksw6dRkUoHN/9qlUi33rxclyF51NuP43dY0QkGW8gRNfgJKU5ybh9Qbz5Q9cAACAA
      SURBVPZVZPPm5Y5F2ycteU9KBR+/q5Jfvte44jEWgyBAeX4KohCVxlGrlLxd00XH4OS81/aO
      OjhV30tOmolP3F3JgcocBEH48BiA0xNgyj1/lQlHJGpvDN+WpnoJOjXHtudz6lovESna1WVL
      YRrvXu3mru0FBIIhvn38CvUdI3PuZ8Lpo2/UwaWWQQ5V5ZFq1sdlsIIQ9e+HYzAvl4JtyoPF
      pCMn1UT38BT/+ptvEghGSNCr2b05i8kVcpoEAT5xdyUVBamzh+v1wOn6PnyBEFXFVt6q6VxS
      fqV/zMk/PneR4QkXTxze/OExAKNeTYJBg/cW/fiZbom3Ax5/iL94oJq7txcwZveQmmTga7+8
      wKTLh93l41LL4KLKyYFQhHdqu+KW+Mi3JsZddzCDiCSztSgdlVLkrZrfaat6AyHeuNTB/buK
      qL0xxMgCOkmxoFYq+NjRch49WDorH3O6vnfpN8YJk17Dp+7dwun6Xl49f2PZHLBQWOIX7zRi
      0ms2Zj1ALJj0Gh7eXzrv8WPbC5aUVlwrBEMRmrrHeP5UCy+fa+Pd2m5SzHqSTTpO1PUsWzbc
      6w8tuwYhQa/m6WMVcU3QWzFoc3Kmfn61WTgi0Tvm4K8+e5i95dnLWkgyko38m6f38tTR8ln9
      1K3F1kWV/VaK0txkDmzJweEOxE2AjEgyP36zfmPvALIs4wuEGbW7GbN7SDRqePRgKW19Exi0
      KvZWZHO0Op+vP7++B+AZ+INhfvh63SzRq2d4int2FrK3IptnfxufsrNCENhSnEZr7/iCIdTs
      VBNfeXL3qu971O4hsEAWedLpw6TX8PihMtKSDDR0jOD0BQmGol1sZgR6s1ISOFKdz8GqXDQq
      BcFwhKA/glqpoDAjkeJsC+0D833zlUIA7t1ZxJn6PvrGVhat8vhDG9cAvIEQb9V08m5tN4M2
      5xyfOtGopbrESlluCiqluK4+6M0IRSJzOsrIQNewfV511/LGkijMSOLpYxW8c6WL5l4b41Ne
      1Kqoxumusizu3lFAolFLZ4xDXzxINGoJhiMxG9sl6NT8+M16LrUM4vWH0KqVbM5PoTwvlc4h
      O48dLCMj2UiCPipPOGp389qFdhq7x/D6Qui0KspyU9hXkU3XkH3NzmJleSlUFKTyd788v6px
      NqQBDI27+Przl2jrG19QZeFkXQ9XWof4o49sIyfNNC86sx7ISjXRP+qYo5Nj0KpW3NSirX+C
      z9xXRYbFyN88e5rINMN09+YsHj9UNhvKSzHrUYjCiidXVqqJfRXZ/PpE85zvSKtWolUrOXGt
      Z1auxRsIUds2zPWuMYKhCHfvKKDUkIwsy1y9Mcw3X5yvHdo1ZJ8lqa2kneutSNCr+fyD1UQk
      md6R+b3j4sGGOwNMuf387bOnozWqS7zW7QvyrZcuMzzhxqhbWyXnWyEIcM+OqPyI2ahBrVJQ
      mJnE/buKVyyeO6O189uaTrqnmwRKkszxM61z+PRGvZrS3JVLkW8vsfLU0XI+92A1KWb99C5j
      5itP7MYbCMUU11KKIoer8mjrm2DM7mHU7uF//+rCghPc4wvh9AQwTcurrBQKUeBPHt5BaW4K
      4YiEewHB5OViQ+0AkiTzT6/XLVvQaeY9b13pIsmoxeldv+6FySY9VYVp0T65ow6u3hjGqFNj
      1KmXLUFyK9QqBQLMaxAYDEfwB8NIsoxANNt6364iWnqXV7h+M9KSDOwsy8ThCdDaZ8MbCBGJ
      SNhdflp6bQuGFXUaJSqVyK9PNBGOSHina3sXQzgikZWSQL41MaYM5FLQaZT80YPb2L8lB3m6
      Smy1jUo2lAHc6J/gQmP80ogeXxCzXo1SIa6LtqhAtFlFolHL935zhVPXoiG/hs5ReobjrzmY
      QYpZT+eQncLMJBL06tnzhdVi5GLTABMXvIhitHyxJCeZ6mIrde3L72IvCgKfvmcLapWC//j9
      9+i5yZ1weAK8eqF9QamRZJMOS4KOkiwLkiRxpW155LnBcRf/+JUHePV8G29c6lhWQ22BKGu1
      qjCdll4bzb02KvLT2LbJSlqiPmYH0eViwxiALMtcbh1ccQWU2x+iJDuZlt617VsFkJmSwL07
      C5lw+rhwS0NvpzdIgn5lYVinJ+ruaVVKHj9UxuC4i7obIwxPuPnZO7/jC82Ud1YVpWO1GOf0
      BVgIoiBQXWKlfWCCwXHnnMl/M4KhCBaTbo5rk6BXM2L30HWmFa1aSa7VvGyeVSgcIRAK89n7
      t3JwSy7v1HZzoak/Jm1cIQqU5aWwe3MWjV1jvHu1e3YBO9PQx76KbPKsiTF7SC8XG8YAJFmm
      YxVhNKcnwBc+UsS4w7Mmxd4z0GmUfOLuyqgUit0T86B9cEsup671xqWwkJWSgCgIuLxBXATp
      H3PSP+aMWQYoy9Fs8slrPVQVpZObbqa+Y2TB8GmCXs1jB8voH3Pw6oX2RQ1UBh7etwlJluke
      mSIrJQGnO8CblzuQibpnHQOTy+YvKUQRvUY1K5RbmJnE5x7cysiEm4FxFx5fEKVCJMWsJzfd
      jFGn5o1LHVy9JZsfjkicb+zncFXevIYe8eB9M4BwRGLU7mbK5Z/dwvRaFRaTDqvFOE+HU5Lk
      WdrrSpFs0nHfriJePN2yrK13KagUIo8cKGVfRTRJlGzWs7M0c9YFgqjaxEP7Ssi3JvL9V2qX
      FanRqBR86dGdDI476bc50WtUdA7Z6VuCnSnL0Ng1xlNHy3nicBmXmgdp7rFhd/nRa5WkJRnR
      qZU09dg4frYVS4KOJw5vZmTSzflFOs87PAE8/iBOTwClGJUiuVle2mLSYTZql+XX56aZZ3VG
      IUpl16iU5FkTo7XOtyAYinC9czTm9xaRZNz+4PRO0jXv+aWwY1PG7TWAcESiY3CSt2u6aO0b
      Z8LpJRSWZrc1hSigVikw6tTsKsviYFUupTnJs1Ikq21Q/duaTmpah5DlaNH8anxHnUbJIwdK
      eeLQ5llNSqVC5IsP7yDRoOVy6yBKhcj2kgwaOkfRaVQc217AybqeRc8hJoOGLz68g815KSgU
      IipltAh+uYfGiCRz4moPR6vzqSxMo2NwElEUSDEbeOxgKc+8Vjdbl+vyBtm2KYOj2/K42DwQ
      M9ojCPDm5Y45K6xaqcBi0hEOS8jAzrJM8tMTaeweW1COHaJu12M3hW+XAxl50e8rHJH4zH1V
      jEy6aIyj5DLPaubLj+28PRVhEUmisWuMH7xylZ+81UDXkB2nN5q+vtllkGVmIwrtA5O8W9tN
      +8AEFpOO1EQDzT22BX3VpaBRKRBEAduUF1EU+PhdFYzZPXj9ofh094m6J5//yDbu3100ryuJ
      WqUgyaRj0ObkRv8Ezb3j1N4Y5lLzIN3DdnTTsXVRgHBkbsx9X0U2X3pkJxMOL794t5H6jhGC
      wQiSJDM2tXyqgzcQQqdR8av3mugddeD2BRmacNHSN47tFt0ko07Fx++qxGb3zoZaZyCKAgpR
      nHfuikgyOrWKXWWZtPaNc71zjCPVeWSnmmjuscUOmypEnjxSzn27C+PiZomCwMikm6ae+Q04
      BAEOV+WxszST3eVZ2J3+JYueBKC62MpffvIAqYmG9d0BZDlKEf75O428ealjRQfYuvYRGrvH
      uH93MZUFaZyIoXe/HGzOS+Xh/Zv41YkmkKGlx4YoCORZzQRCEUYm3YuuXgKQbNZzqCqXe3cW
      kjHto98MWZa53jXG1351ISaDUpaj6XeVUuTBPSWU56Xg8AYwaFTkpJvJTjVxoq6HZ169Orvi
      picZ4m76IMtQE0M2xDblIcmom+P+7d6chSgIfPGRHRRnWzh1rRe7y0dWqomy3GReOtMacwV2
      +QL0jTmQ5WhYdnjCzfaSDIKhCCfreqJ1ukQnaU6amY8fq2BvRfaSEvO3QhQFjm3Lp/bGEDf6
      554Bi7Ms3LW9AFEUMOk1/KsndrGvIpvfnGujpW98zu8pEKVMP7RvE/srs9FNF86vqwFMuQN8
      44VLMcWm4kEoLPHq+RuU5aaQYtbHLa2hVIg8cmAT2zdl4PYF+eaLl+f8qNtLrHzuwWqae2wM
      jDmjasqhCKFIlB4QjkTQqJSYDRrsLh/1naOAgDXZMOcH7R9zLjj5b/08r124wdbi9DldZ0Lh
      COcb++e4G7Yp74pCt7HWWFEQ+Mx9W+gZmaJ/zElZbgpKhcg/PncJ25QHhUIk32rmY8fKqSxI
      o2vIzvEzbQte465tBRRnWWjrm+DV8zcYsbsJhyXMRi37K3M4Up1PcbYFS4J2SbdHkmWcngCj
      k25G7Z7Z3VmSZURRoLIgjUAwgsMTwKRXs7XYysP7N5F+k0CySqlgb0U2eyuysbt8dA9P4fEH
      0alV5KabSU3Uz7uPdTMAbyDE916uWfXkvxmtfeMYtKq40/5HqvOoKkrHHwxz/Oz8Fa2uY4RP
      3rOFzz2wNcqJ8Ye51DLIK+fbcPmCRKYzjhNOH51Ddk7X95GWpOfenUU8uLcEgzYqhf7ciaZl
      c+cjkszP37lOeX7qrIyHMF0+eDMUCoEUsz6uiipBiPrlTm9gzvvyrYlUFaVzeGsel1sGefa3
      DQzY5tI0GjpHeaumi9LcZD55dyXpFsM81wii/KHKwqgE4XtXu+fsKpNOH+eb+nH7gvzbj+9b
      dPIPT7g4d72f+s5RhsZdTDi9iybzov0SogS+xu4xdFoVJv387HJSgm5ZHLB1MYBwROKfXqvj
      YvPayOvdDI8/hEGnIhyWliw0F4Roh5IvPrwDlVKB2xeMKQsuy1F+0aacZBSiyHt13Tx/snlB
      ZQZJlhmZ9PDzd67TMzLFFx/egSDA+ab4knTdQ1N0DExSVZQORIMAH9lbQtd0MbtCFNhbkcO+
      imy+8cKlZUeuUsx6thano1YpOFPfS0SSKchM4umj5SQatbxb2833Xr6yYNG7JMu09I7ztV9d
      4Ni2fKZcfuw3GbZeq+KpI+UAPH8ydkRNlqGha5S3ajp56kj5HHp3OCLRPjDBcyebaeq2xRXC
      lGWwu/xcbhmkpmUQnVY1y43KSTPF7WKtiwHUtAzy3tXu9RgaiKoM3L2jgJ7hKdr6Y3eKMRs0
      PLx/Ew8fKJ2NHuk0KlKT9PPCqaIgYNCpcPuC1LUP8+sTTcuabBFJ5tz1fsxGLVWFaXG7KtJ0
      d8kZA3B5gzjcfsrzU5FlSDHrOLAlh7LcFHZsyuTs9aU7xIiCgF6j4tsv1uDw+BFFkYKMRB47
      WEpuupmOQTs/fL1uWYoPDk+ASy2D/MmjO7l6Y5hRu5tAMEJlYRoHtuRwqXmQCefC7qgsQ23b
      MA/tK8Ggje5sXUN2fn2iicstg6tmhspEaydO1vVwsWmAo9V5fPKeLSS+n8pwwVCEn759fV1L
      EMMRiaZuG3/7L47RN+qg9sYwIxNuguFo1nJzXirbSqwkm3Rztl+NKlqp9I/PXZpddQQBqkus
      fPf4FSwmHf5gOK4cgSTLnLjajW+FMuIOT2A6yz3E939Ty6TTy8xXN2Bz0tg9RmZyAger8iie
      TKJzcGFqhShERbUGbqGHX5+OwP27Tx3gxdMtcXVtH55wMzTu4o8+Us0zr9Vxur6XjsFJatuG
      yEkzLfk7O9x+QmGJUDjC6xc7eO5k0xzK+FrBHwzz5uVOrneN8Ucf2cb2TRnLKipac3HcE3U9
      fP35i3GTslaCP39qD3dtL4j7fW194zx/qgXblIeH9m0iO9XEt168jMcfxOGO3e1wKWSmJCy7
      4utmfPreLRi0Kn78Zv2iLp0gwK6yLDQqBXXtI3NyGIIQJePtKc/iWvtITLKgAHzmvipePN0S
      l+gWRM8ODx/YxLdfrJlHlw6Ewov+1qU5yfzFJ/fz4zeucfb6wsm2tYQoCDx1tJynj5Uv2Tds
      TXcASZK50Nh/WyY/RBM0KzGAoiwLOo0Sty9Iz8gUP32rgXSLgYxkIzUrVETz+kPzpBmXgkD0
      wLic5h7R0OYgTxzezF999hCtfROMTrrx+IMYdGp2lWZitRg5t8Akk4Gm7rG4Jz9Ew6c1LUPz
      FoaIJKGbFvBd6PPlpJv5zks1cZH0VgtJlnnuZBN2l48//uj2RTvIr2k9wNiUh+aetSebLYRB
      mwt7DG7MUlCIAge35PLgnmIau8am25QuTTVYDP5geFZZbblIMuk439S/7GYXshzV2NRrVDyw
      uwizUUtzzzjv1HTxrRdrePFMK+pFVjz1ChWrJUnGYprvV2elmHj8cNmCjNGcNBPN3WO3dfLP
      QJbh7StdfPflK0QWOe+sqQHYprxLcsLXEh5/MKYGzFIQBIHdm7N48kh59HCYZuZQVe5scmQl
      iEQkPrpv07KZn6IoUJiRhMMdH78pIsm8euEGJ+p6eOFUM+MOL6GIxKTLx3u13bNhwluRbjGw
      ryI7rmvNQKEQefhAKVuL02cfS9Cp+cx9VTx6sIzPf2Qbeelm1EoFClHAbNCwvzIbrVrF0Aqk
      WtYSJ+p6eP5U84JJzjV1gQZWWJy8UsgyDI/H/wXLskxb/wRv13QxZndTmptMZWEanasQgdJq
      opLo/+rx3XzjhUuLuhoqhcjTd1WsuJb3Stsw3cNT83YOSY5yMvdX5FDXMUIgGEYQBLJSEvjs
      A1spykwi0aiNW+cnI9lIQ+cok9MNOkpzk/nSozvJTE5AEATu313EvopshidchMISZqOG09d6
      Ob+C2o31wPMnW8hNT2Rvedb6JsJWy9ZcCewrEG2qaR3ia7+68Lv4c9cYF5sHKMxMopeVGXG6
      xUhSgharJZskk46fv319Xj9cQYgKz378WAU7SjNmm+rFC68/dpkiRHeiT9+7hUcOlDJgc6LX
      qijNScZi0iHL0Xarb1+JjzkpigLfPX5l9u+GzjG6huxkpZiizwsCiUbtbPixrW+cVy+0r+iz
      rQeC4Qjff6WWTTnJJJvmJsfW1ADWo9pqKSzG34mFYCjCs2/Wz0u+uLxBRic96LWquMKEEHWp
      9mzOQqkQGZvyMD7lIc9qRpIlJp0+dBoV5fmp7N6cRWFmEnqNinBEWvH3JYoC6UmGmCu51WJE
      oRAZtXvoGJxk0uXj1LUeLCYdFflp3LuzkJrWoWXvAiXZFjwx3NrfXu7kUFXevMdD4Qj/9Hrd
      ivn564VJp4+fvdXAV57cPWcXWFMDWI0PvVLEW201ancvyCWKSBLbiq2cW4QbHwv5VjNluSn8
      8LU6LjYNMOnyzYsGjTu8+ANhEvQacqdVKiwJ2hUdvA1aFU8e2cwPXr06p7hHrVTgD4b5s6+/
      ETOk+vrFDrRqJdmpJlzewJIx/KyUBAozkrgUo2HeQjH2U/W9CyYn32+ca+znoX0lFGVZZh9b
      00OwxXR79HduRopZH9frtWol4gJF6nqNio/fXcmmbEvM52PBbNCwrSSDH75Wx+sX2qMtVWPM
      K7vLz29rOvmfPz87Wz9bnr+8Tui3YkYX6KG9Jeg1SgoyEimwJiIj0zlkXzSf4A+G6RicRBCE
      BRUaFKLAnvIsvvzYTlSqKMHsZghEKSYdA5NzQqD+YJg3LnbctjB4vPAHw7x2oX2O17Cm9QCi
      IPD2la5119+ZgVql4MnDm+MyPL1GRdegfZ5WjwAcrs6nIj+VgswkJp0+Jpy+BT9LlOZr4ui2
      At6r6162MK3LG6Shc4zcdDPl+amcaeiNu2/BA7uLcXkDnGnoo9/mZG9FNg2do3H1DpZkGVmG
      P3ygmvK8VBSiiFat5KF9JewozaRneIq3aroYmnCRaNRyYEsuwrQKXDgic6V1iLeudPHbSx1o
      NUoKM5Koax/m5XMLs0c/CBiZdHNoa95sG9U1NQClUqSufSRm3ep6oCgziSePli9bRxOi/vrm
      vFRc3iAalRLVNNdeJprwOX6mlbPX+wmFI1jMOpKMOjJTjBh1aswGDVaLkeJsC0e3FXD39gLe
      qumMS6YFoitR17CdA5U5pCQaaJqWKF8KClHg7h2F9I44+PWJJp46Wo5eq+JS88CKSjwj030C
      Pn5XJR5/kKFxF4WZSbx0uoX+MSe+YBivP0TvqINQOMK/+Oh2Wnpt9I85kWVmawHqO0axWoyc
      aehlwLY2/dfWC+GIRHqSYbZz6JpTId672s03Xrh0W7bBrzy5m3t2FK7ovdHqswg1rUN8/flL
      Cx7aEvRq/vNnD5NvTUSSo8psWnW0Y/wzr17ljUsdK77/I9V5/KvHd3P1xjDfOV4zR1HuVqhV
      Cj51dyUPHyhl0uljZNJNUZaFr/7ziXmFIvGiPD+V//Dpgzg8fr7xwmVuLODD7yjNpHYB+ZO8
      dPNsgcwHHZkpCXz733wEURDWXhluf2UOOanmtR52HrJSElac2IGoCyOKAj9/5/qiEQuXN8hP
      3mpAoRB55fwN/uzrb/D/fvdtrt6IygOuBi09NiZdPvZWZPMf/+AQJdmWeUJPWrWSbSVW/r8/
      PMLjhzejVIikJRmoKkqnb3Rq1ZMfoLnHxrjDS4Jesyipz+dfOMk5NuXZEJMfogGJ0WnpmDU3
      AK1ayceOla/1sHMgCPD0sYq4+sHGQtfQ/LNALLQPTHK5ZZAXT7fg8AToG3XwT6/XrVrn0uEJ
      zBLoSnOS+evPH+ULD22jOMuCyaAh2aRjc14K+ytzyE03cetmvdI+xLFQe2MYnUZJaqIh5vMC
      oNOqSU2MHXSYoTtvBARDkVktoXWpBziwJYfrXWO8XdO5Ll0Zj1bnc2hr7qr72S7XXw2Ewtim
      PAg3FRoGQ5EVi3TNIByRcHmjdOjGbhvfntYxvRkTTh917SP8n9/Ucs/OQh4/WEa6xYAgCDEr
      tVaK7iE7GpWSh/aWcKN/fJ7mZlGWhT+4bwu+QJivP39pVnxLIQocrc5nyuNfky7wtwvrtgNA
      VPzoDx/YSnlB6pqPXZxl4Y8/uj3uyp9YUC+z2DxaPJ/IU0c3k2jUUpCRGHdD5lgQhKjqwun6
      Xv7Xz88tGkkKRyTevNTBf3zm3Vn5D88iLkm8mKFuVBWn87GjFaQlGtCqo3XQu8sy+dPHdpJv
      TaQ8P5X/8cW7+fOn9vBHH9nGVz9/lC8/tnPNWqGmJuo5WJU7r6gl7aadJ56Cl4Uws3uvmzq0
      UafmP3z6IFuL0tesO0h1cTp/9dlDa9bxpTQ3ZVkRJL1WhcsbpLnHhkalIDMlgQxLwqoTf2qV
      guZeG9944fKyaSQTDh//46dnqO8cRb0AC3Ol9zJoc/L939Tyyvkb2Kf7raVbjHx0/yYKMpJm
      d1yLScdd2wt49GApVUXpqJQKnJ7VN8LWqZVU5KdxrX0EQYgm9pJNOhSiQGluCoIQ7aVclpuy
      6rZXM1GzddUF0qiU7NqcRUSWaR+YWPEhSRDgnp2FfOXJPTELoFcKvVbFkM21ZD/c/PRE3r7S
      Rd+YE48/RP+Yc7ZAfzXVTTqNivb+ibji9xBVlWjqHiMtyTivqH2lyEkz815dNzWtQ7OS6OGI
      xITTR2P3GPnWxOmey7En3usX21fdiTPRqCUYiZCVkoDZqKUoy4LFpCPZpIsqZQvRJt8mvXq6
      nezKkZNmYl9lzvorwxl1av7wga1sK7byi/caudE/sWz+jigIFGdb+NjRcrZvyli1FPYMZFnG
      5QtS3zFCUVYS7QOTDE3EPg9UFaXP6hvdjAmnj9w0M6IoxM1HmkEwFFlWB/lYGJvyxt1MbzGM
      2t0LnilsU15+daKJwswkFKJIU4+NG/3jqFVKqgrTKMqaH71aCTz+IJUFaVxtH6YsJxlBgM7B
      SfIzopKJOo2S7uEpctNXH2XUqKfV/FY90jIwo0S8pTCN691jXGwaoLF7jKFx17wEkCCASqEg
      NVFPWV4KBRlJdAxOUt85SuimQ6deoyJBr8GkV5OaZCDZpMNk0GDSa5Y8HA9PuPmvPz4163Ob
      DRr2VWTTPTwV9Q2FKN/93p1FPHaolL965r2Y4+RazWjUStoH4ue+rISWfCuGxt2rlngEpvWO
      Fr+XriE7jd02zl7v42LTwCyRb4aXZFwDt9QXCNPSN05VYTrN0yrem7KTqe8cwahT4/AEqC62
      MmZ3r5ptkGiMsgduqzaoQiFSXWylutiKNxDCZvdgd/lp7rVR3xHVhXH5olGRkUn3dIZ1eeoS
      Oo0Sg1aN1WKkoiCVzXkpVOSnxfSTf/le45wDp8MTQK1S8Hd/ei9OT4BLzYOcru9Fp1GiVioo
      yrLQMTi3VkAAqgrTcWcEGbW749r+E/RqSrItKy6/nEE4IlGWl7KiZhM341BVLu8uoeIRCIZ5
      7cINGrvH5riyHn+IF0+3kJZkXPjNcWB00j0boQG42BytKZjx2S/HIOatBJaE6EH6fVGH9gVC
      dA5McuZ6H1dvDM+TK1+OZMf8MaNqDuMOL43d0QSVQhSoKkpnX2UO1UXppE37sLEYmH2jDkx6
      zXRPLwc9I1O8U9uF2xckIsnzVuzEBC1D4y66huxsLUqnvnN0WUZgtRj53IPVXGpefbGIJMts
      yragEIUVlx3u2ZzFg3tLON+0OJ1CoRCjupsxFl63L4ROfftrQVYKURTISEkAbrMBOD0B3qrp
      5FxjPz3DU+tOmotIMnXtI9S1j6DXqDiwJYcDW3IozUme5+9uzouGbEVB4N6dhUQkCacnwAun
      WpBlmX2V2RRlWTh+phWXN4jd5ef42dbZ9ytEAbVSgVIh4gvMF9w1GzXs2JTBw/tLyc9I5GTd
      2ugmhSMSX3liN3/z7Om48wLFWUn8y8d3odeq2JSdPLvaxkKySR/9vRYw8sQELbYNkgfQTZP3
      4DYYgCzL2N1+fnM22jj6/agag6hU49tXunjvajepiQY0KgWhiIRCjJLjPnF3JRCNzZfnp1Ka
      m8JzJ5qo7xxFJhp5qe8YWTDqE5FkIlIEjVrB03dV4AuE8fiD6DUq8qyJlOUmY7UYZ6Xe1yqE
      qVYpsZh0fPXzR/nO8RqutA4tSaxTiAJbCtN5/HAZI5NuNCol9+wooGNwMmYyS6tWoteoFjxr
      iILAoapcxuyeRflMHxTkpJpnqeDrLI7r5/WL7bxxseN9m/i3YoYBKQAG9BDeiwAAHktJREFU
      nYonD5fz0L6SOdIZgiCgVESZl05vEI8/yKjdQ2vv+JLju7xBrrWP8NXPH40ZpXF5A5xt6ENc
      g0QeQGaKcVZTdEtBGqU5ydS2DdM7OjUvm6vTKFEqFBh1KoYnXPzdL84TkSSUChGzQUNSghZJ
      kvEGQgRDEVTKaKcWlVIkLEnct6uQVy+0zzu8l+Yms78yh75R54oaVdxuHKjMmf3/ummDnmno
      45fvNi6rX9X7gWh7nxC/eLeRfpuTz95fNU9MNTVRzxce2kZr3zj/5Z9OLHvsGwMTnKrv5YHd
      RbMRqYgkEYnINPfY+NGb9Wwrsa76M+g10SbUsizj8gYZsXto6bGhVil4eH8phZlJ0zuWjMMd
      4HRDLwM2J64Yi9HMzqZWKshNN3Foax65aWZaesdp6BolEpEQBIEthWn0jjrw+IIoRJGMZCNb
      CtMYnnCztzyL9+q6VxwWvh0w6tQc2LKOBjA84eJ7v6nl2vugBbMSBMMR3rvazbX2Eb7w0W3s
      u0nDfmYnOH/9/7Z33tFx3eeZfm6ZDgww6L2RIECQIAkSYBNlUiySYlkirS5Zjr1rW7as3bjE
      ybE3ezYnyclm49hO9XptR9mNY1vuspotq1mi2KtYQIIgQdQBBmUwg8H0dvePC0Acos1gAIIo
      z38EyeElcL9f/d737YwJs5gORYH3zrWzd5Nq2nXskpXXjl+ltcdJOBJFEkUKMlPJz0yJW0gz
      EWsrssnLSCESVfjh6+d58/T1sU3q9W4Hnz/QwF11ZZy60s1P3m6kzzF9yEYwHOGa1UE4qvBH
      D25m/44qirLNPPeqGm4CatTUH96znm77MC+81zRiF6/672ekGm7rnqAtNYUxA92s3QSPJoV/
      46dHabHO3F5kvvAFw5y4bKXf6aW2IifGUu8nbzcmZE8OEA5HuauunB+8do4fv3mBXoeHUDhK
      JKoQikS53D6AIJCwGmwUURTITjdx6HwnHl+Qt8+04r3hFCcSVRBFyE4z8S8vnIzr5b8Rp9tP
      R98QtRU5/PLdSzG35eppm4eTTd0xF3mOYT+SKCTdJDhX6DQSn31gU4yMdlYEMb5AiF8fusJP
      3764YHrCp2JFgYUvP7qNwmzV9+aZb76SsMGTXitxz+aVvHhoaolgolkHoL78N15eiYKATiuN
      O8bcsDKXSFSZsW5BENSEy2vWwXEzlUYSJzyuzjQbSE/RJ+WxNFfcs3kFz+yvj7koTXon5g+G
      +c6LpxbNyw/Q0u3gz/71ba50qDe85hl0H2plmTfj9N+pq8yLu2FQENR28KJs89jXFEUh15IS
      052qlSX0Ok1SDg2KokZUTWQwO1n4hF4n88k/2JB0oOFsk5Nu5PHda8d1CSRVAE63n797/gjv
      vt++aF7+UZxuP3/9H+9xurmH1SP60UQQBOLq84lEFXauL+WJvWun9PUUUPPCCjJTGXB6qK8u
      INWgRRIFKosz+dMntvPhLZWU5JhZWWjhyX21iMx8iTWK2xekKNtMaW4asiQiSyIVBRaeOVBP
      riVWPCMIcNeGMtaW5/DIrpqk28VnC61G4tMf2YgldfxANuMlkGPYx9/95AiNCURTLkR0GokH
      7qjipcNX4m5cE0WB3XVlvH2mLa7Lvsd2r0GWRLoHhtFpJFq6HTjdfqJRBZ1WJs2oY2NVPg3V
      BfzVvx8kqih889m7CYWi9A95WFmYgUGnIRKN4vYFkUeSHb/2vbeS2mSPUluRw+cPNNBmc9Jt
      H8blCeD2BbH2D3O1y45GljAbtdy1sZyHdq5Gp5EJhSN862fHpswfvhWMJoI+umvNhK3vM5qn
      QuEIf/+zY4v+5Qd1FH/12FXK8y00dUx/DwCwfkUu925ZyaELnXE5pL1ytBmPL4QA7GtYwV99
      ajdef5B33m/n7TOt9Ay6eeVoMwfPtVOYbeaB7avISFXDP/IyP+jBkUSRNJM6yvXbnEk3yY3i
      GPaj18nYXT5eONg07nONssgn7t3AHbXFY0sMjSzx+QP1DLn9NN5Cx/CbuauujAfvXD2p7iPh
      AvAFQvzvX58aO/paCnj9IdptTsry02m3Oadc7tWUZfPFR7aSatRSnp/O5Wkuz2RJxDNyYaUA
      xxq72L+jih/87vy4fqEhd4DOPhcub4DCbDMFI/0sExEOq/cOs0EoHOHVo1f51cHLE57xD3vV
      5M3C7FTK8y1Eowp2lxdr/zAf2b4KfzB8yzfFkiiwt76CT9+3ccpb94T2AIqi8NLhKxw6P31W
      1WLDFwzj84d4dNcaCjLHdz6ajTqe2LuW//bUDtJT9EiiyFP71k35zR8NxZNuGJ0MOpkXDjZN
      2SzX1uPkO78+NeVxo1YjJZwvPBlRReG149emvODyB8P86I0LhMIR3jpznT//t3f4mx8d4p9+
      cRyPP0j+BN+zuUIUBT5+zzo+dV/dtC0nCc0AJy5bef6txXPakyi9Dg9XrYP87ef20etwY+0f
      JhKNkmMxqakzWjnmlGFNeTZffnQbz716ZlzHa4pBy8f21Y6kzUu8evQqWlliX0PFtEenoCYw
      nrtmo6G6UDXa6nZgG3STnqJnZWEGllQ9lhR90iotUGeTeJZTTR0D/O5ECz9640KMZaJvMDym
      uXj/mm1GJl7xIABFOWY+85GN1K7IjUs2GfcmuMc+zJ99/+2EL4QWGwLwxN5aHr2rJm5XikGX
      j6ONnVyzOohGo5TmpbOlpnDMXjwaVeixD6PTylxq6+ebPz0a1+d+eGsle+vL+d5Lp2nq+OC4
      M9di4g/vXc/F631JGXeNUpqbNq1sFNQZrTDbPKnhb21FDoqi0O/0MjDkndUgRb1WZs+mcp7Y
      U5uQYXJcM0AwFOG5V88u+Zcf1HX6z99pZMPK3DF7venIMBu4b9uqSX9fHHlxgIRUYu02J1//
      8ZFx/Va9Dg//8qsT7N9RhUmvmVEu2Cg56SbqKvPiKgBRFPBO4VTh8gToc3q4Y20JezaV8+Kh
      Js639E2aMTYdApCZZmRrTSEf3lpJfmZqQjaZEGcBvPN+W9LqpcVEKBzluVfP8pefumvWL3zS
      JnFsnohr1sFJj2Z9gTCX2vrZUlM048xmWRK5Z/MK6qsLeOXo1WnzDLLTTRRmpTIwQRg5qGIg
      k0FLZ98QLdZB/vix7fgCIY5ftnKyyTomSZ1qZtDKEhlmAxUFFhqqC2ioLiA1CaOEaX96dpeP
      59+8OON/YLHS3GXnjVPXuX/75CP7TFhZmBH3qK2RpSnvJmx2D5+4dwPtNueMTmHKCyxcauvn
      Uns/eRnTO1A8cEcV6SYd51t6xz1XikFD/5CX1hE3hzabk2yLia01RdzdsIK99RUMewI43X56
      7G7sLi8eXwh/KIxeI5Nq1JJjSSHXYiItRZfUS38jUxZAVFF44eDlW+b2vJBQFPjZ241sqyki
      axK7wJlQkGVm98ZyXj7SPOWfqynNBoFpUzmz04184ZGtfO/l0zTepOedDFkS2by6EOuAi9Mj
      rRSpRi0VBRauT1BIoiiwubqAgswU7C4fm6ryOdtsIxyJIooCmWlGDuyo4rUTHzgFBkIR2nqc
      bK1R/V1FQSAtRU9aip7SvPTpH3KWmLIbtMfu5nsvn7ltu/vmm0AogqIobFyVP2ufKQhQXZpF
      W49z0lvc4hwzX3p0K4FQZEz/PBHVpVns3VhBeoqe9SvziCoKvYPuKWeNnHQTH/3Qah7fs4ZX
      jjSPxUVpJJH//vE7yUwzMuwN4A+G0GlkMs1GREGgz+HhdydbOH7JOmKfrmDUa7l78wo+85GN
      1JRlYxt0c7VzEAXVTeLBnavJnSUx/UyZcgZ4+fCVWbtNXKy8daaVA3dWJ5xUczOKouALhAmE
      wnj8IR7eVUOOxcShCx14/SG0soTZpGPrmiIe2rkas1HPPQ1a3jnbNqHoyKCTeehDq3G4/bxz
      to1Lbf04hv3qKGvSo9WIhMJRQuEIOq1MTrqJDLPay3+yyUpjax9pJh2DLh+SKLKrTm3AK8lN
      Y/+OKkLhCOdbevnOr09NKIOMRBVc3gC/OXoVk17DwztreGRXDUadhnfPtVOSm4Yl1YCiKEl7
      vCbDpAXQ6/BMa5WxjHpL/PqJFp7cVzvjv3+prZ8TTVYuXu9jYMgbM0KPiu3TU/VsqiqgvqoA
      nUZGENTTpT99cvuEx6Cf+IMNDLjUfq2JPH8yzQY+tq+WukrVcOxMcw/fffn0uIDArDQjz+yv
      p64yD2nE/EorqzaK/+fF09NqgIPhCD9+4wKWVD31VQWcuGyle2CY7oFhLrf18+XHtqn2mfNU
      BBPeAyiKwvNvXuSnv2+cj2dacBRkpfL1z+2Ne2OmKApef4jXTrTwxqkWeh2euGWEsqTKED+8
      tZLdG8vRa+UJL8IudwzwjeePTLl81Wkl/uI/7SLTbOSPv/36pLrtuxsq+PyBhrGXVFEU/vLf
      3+VMc/yqvwyzgXUVubzzflvM1yuLMvjbz+4dK65bzYQzgNsXHPegy0xO98Awxy9Z2Vs/fVpN
      MBTh9ZMt/PpQ07jb4XgIR6J09rn47kunefHQFZ7aV8v22mJqyrKpKVOtXdy+IM+9Mv3eLRCM
      8P1XztBQVTClacGRi108tW8daSO6iDabk3PXEusFG3T5ONI4vjPUNqi6vM2ezW9iTFh2Vzrs
      9DkTk9Atdd6Loz/K6fbz9ecP89xvzs7o5b8Z26Cbf/jFcf7x58cJ3NB1+v41W9w/v7YeJ0cb
      pzbpCoYjMZegjW39M7rFnWiWWz0S0DdfjJsBFEXh8MXOJdvvM1POtdiwu3zjkshHabM5+edf
      Hh9nsZgs4UiUd8+1Yxt085XHt5NjMXG1azDun19kxAZlKmRRjGkvGJhh8RZlmynPT+f4JSvh
      aJRVRRl8+r66eRXOjCsAfzDM2ebZi95ZKigKnGyycu/mleN+r8fu5m9+eGhOLWKudNr5Xz86
      xJ9/cmfMbBAP5fnpDLn9BCexaa8uyYw55ZqpE7ROI/HMgXoe2rmaYChCUbY5xo9pPhj3r7fZ
      hnAk6Vq8VDl3rZd7GlbEnGi4PAG+/cKJW+KP1NLt4J9/dYLyEdu/eKmvKiQ9Rc8bp66PmzkM
      OhmDXsNf/L93STFo2bOpfMatzbkZKWhlieKcuQ9RjJdxBdA4xcXKMlPT3GnH5QmMbRajUYUf
      vnE+6TTJRDjV1I2iKGhkMa7gDZ1W4nyLDUkUKclJU+WO/iBmo46S3DSuWQc5fOGDzevRxi4O
      7KjCoJXxJTDTCAJsri6Y1zP/iYiZyxRFiVv2t8x4XN5ATNvIxda+uJ0hZgsFuNiq9u7Ew871
      ZeRnprJ1TRFFOeaxwI+iHDP5manjvFDDkSi/OX6NLTWFCT1Xeb6F+uqChP7OrSBmBvD4Q1yz
      Jp87u1QJhiK09jgpz7cQCKkKqdnseY8XfzCMQathdWnWlJLMjavy+MxHPpAMypLIycuquW5X
      n2vSza7XH2LrmmL6nN5pe5FAFf/80UObk85UmwtiZgDHsC8uEfcyk9MyMoCcbbZxzTpzT55k
      ae1xcODOah7euRrTTSa9aSYdH9tXy588fkeMZHBFYQbrVuSQYdZzR20xGZOcaIHqs/OVx7ZR
      XzV1H1R+Zgpfe2oHZbewwS0RYmYA26BnuQCSRLVAVP1GE/ETnW1CkSinr3Tz+QMNPLSzho7e
      IYY8fiypBkpy09CNhM7dSEaqnq88vp1hbxBLqp5DFzpobO0fZ+2ystBCSW4aGlnia0/dyYnL
      Vt463cr1HgehcARZUl2lt68t5p7NKzDqNLfd2n+UmAJwDvuWz/+TpM/hwe7yxViBmE06qkuy
      6LEPT5lMLwoCZpNuTBUmCgLrV+YSCke41D6QsOvy6eYehjwB0lP0VJdOrF5zuv00dQxwrWuQ
      PqeHQDCCViORlWakLC+NXXVlHDrfMXarvKLQwn99cMuYW5wsiWxfW8y2NUV4AyG8frVLNMWg
      TVidNR/EFEDv8u1v0rh9QRpb+2K6aAsyU+nqd1FZmIHd5UNAXaeLI41u3kAIjSyhlSVWFmZw
      6oqqvpNlEY0sEgxFqMi30N7rREBAEFTnan8wjEEnE4kqCKh9+TcKzu1DPjp6h8YFSyuKQle/
      i5cON3OssZNhX3DCgU8QVAv2svx06irzWFueQ2VRxoRreUEQMOm1mPSzk+F8q4gpgNlwEFjq
      ONz+MU/RUQRBlQPKskhNaTabVuXT3uuk1+Fha00RB8+3U5KTNuGG0pJiQCNJ2F0+HrijivMt
      veyoLUGnkXjrTCsVBRbabUOsW5HDoMvPW6evx8QzXe92sG5F7tivA8EwLx1p5pfvXprWnUFR
      1IOR5k477TYnwXCEyqKMpL4/txsxBZDoDWI8mPQatq0pxuH2caa5J64lllGvQZbEGRVkdUkm
      GWYjxy91TXoCk5VmnDMP+2hUGXeSpijqEWmLdZD1K/M4fLETrz9EQXYqRy91kZFqoNs+TK/D
      Q3Z6rN+mNxDiqnUQjy+IIIC1f5ghj58L1/vQaiSudNjpsQ8TDEeoLslCp5XwBz9ogrtxyeX1
      h/j2Cyc5fLEj4aVuIBThhYNNdPa6+MLDW0g1am/bdX0ixCjC3jrdSvfAxIHRM8WSYsA+rE77
      Rr0Wo14zllGVnqLHGwipXxNEMtOMyJJIikFLukmN67GkGgiEwsiiiEaWEAS1392o16jJ4uEI
      Rq2GYDhCrsWExWzgYmsf4kj/ikYWQVFT6yNRhbzMFGrKsunoG6IgM5VoVEk4qX06QuFoTCdm
      OBKhd9CDLximz+GhuiQTlzfIkMdPmknH9W4njmE/Xn+IYDhC/ap8OvtcRBUFlzuA3eVDiSoE
      QhHcviCioGYDXGztp6IgHYNWg0mvUb9PkkSqUTfWp5+WomNXXRmBUJhv/fQYR5NMp+y2D9Pc
      aWfb2uIpzXwXCnPeiCGIqv13JBJlYMhHfXUBHn+QdtsQkWhUTRUxG7AP+UgxaDHoZDr6htBr
      ZPbvqCLFoOP0lW76h7yY9BqGvUEqizLQa2W6B4axpBqwjoi1s9NNXOsaxBcIU5aXzqriDNps
      Q0QiUbLTTfQ7PWMBeTWl2dy5vgT7kJef/f7SrP6fA6HYmdTp/mAm8wXDvH22bezXNyc79ju9
      uH3d6smLwlhbSjiqjL3UN26wT1yOdeswjOgDRvEHwyiKwi/fvcyJptnJ2G1s6+eHr5/n6fs3
      LvhZIKYAJvKBTxZFgcvtA3T1u6jIt3CqqZuBIe9IWqJ6inDqSg/5GSlEowqyJCAKApIkYBv0
      cLWrA0kUSU/Rk2k2MOwd5GrXICkGDW22IYqyzWNX8t32YdatyKXN5kQU4UxzD5IoUpyTRo7F
      yJDHj2PYh14nI0siRy52TpuQPhM0kpTUrJKMc9rN7QkKcLVrkJcOT+82lwhvnrrO5tUF1FXO
      nh56Poi5CNPNUnTnjTjdfqwDLoKhCM2ddnzBEKIoqKO8VsY26MYfCNHSPYiCQqvNSUfvENes
      Dhpb+0g16rAOuFSDVesgvQ43vQ437b1D+AIhuvpdY626g66RUw+Tjt5BNbKz3+klEApzsbWf
      a9ZBNLJEe4+TxrY+olGFWQjIGcdEPvSjlOamsbo0K8YPdC4xG3W88N7lWbcjDIbVPUFogRsm
      xEgiv//yaV45enU+n2fBo9NIrC3P4fQELeWpBi11q/Lo6HXR5/AQjkRQUPtrtLI0duGUYtCO
      nMCo6/1AKIIkqjOjgqoTDoQiaGUJBXWpJI587WZ2rCvhWGPXtKZWM0ESBb757D2U59+et7zx
      ELMESp8k9maZ+Ekz6VlRmDFhAXgCIURRpCw/HZc3wIN3quHcB891sKkqH5c3QCSq0GFz4vGH
      2FFbTERRuNJhZ/3KXFqsDlYVZ5CRauC98x2U51vo6ndRVZyJ0+Pn92faxr3o9iHvnLz8oIpp
      TjVZF3QBxCyBcmbR4GmpkmE2sP6Gc/cbkUXVfcFmd1OWm45t0M2hC50EwxHOXu3hQksvHb1D
      CCPLo9YeJxev96HXyrRYHVzrGiQcUfj92TZEUeBql53L7f2cbu4hGlEwGWIvqGRJZK4v9pPJ
      ILsdiJkBstJNM0otXOYD8jJSKMtPJy8jZZwIJhKNsqYsm0g0yplmG4Ko2pNcuN6HJAqEIlE1
      3V1Qb2vrVuXTMzDM6eYezEYd3kCIxtY+irLNnLhspaoki9WlqhDe4w+Oa10uyjYnnRE2HbZZ
      iGCaT2IKICNVj14rJ+UmvNTJSjeSYtCyqSqfV2/aT0WiSowA/fSVyaWnggCvn2gZ0+uO6gyu
      dqmnYKCeck3FnetLOHJhbjO6EhHF3I7ELIFyLSmTxl8uEx81I01n++orMOhmfs2iKMzYNhzU
      Brzta4pnLSVmMjRz/PlzTczTi6Kw6Ho9biV6rTzWylCeb+GOtcXz9iy7N5ZTkJVKpnlu93VT
      aQYWAuPKd/UkbbPLTE+OxUTODdm5j961hhTDre+OzLWYOLCjCmDOT2gqEhTg326MK4D66oLb
      JuB4obFhZV5MYEZuRgpP378JzS20/dNpR0Oh1ZF50zSKrWTZNIvO2PPBuJ+M2aijIHPy+M1l
      JqeuMm/c13asK+beLeO9guaKx3evjRGfl+Wlz5kcMT8zhVUlmXPy2beKcQUgSyLba+dv7bpQ
      MZt0Ey4fJVHkP3+4jn31FXM6s4qiwP4dVezfURWTjigKAg/tXB1XYmIiCALcv30VxttQ6J4I
      4wpAEAS2rC6c9eyrxc6H1pVM6nogigJP37+JB7ZXzfqLCGp4xZN71/Lxu9eN89kUBIEtNYWz
      GuIBUFWcxe6N5Qu+G3TCxemKggxWFi7szc2tRBIF7lxXOuWf0WokPnHvej63vx5zAkF405Fr
      MfGFR7bw8M6aSbt5dRqZzz6wKWaDngxpKTqe/WjDbWlzkigTFoAoCuytX3Grn2XBsqY8h4o4
      BgxpJHXxW8/ezZ5N5UnNsgadzL6GCv7n03u4c13ptCNxjsXEV5+8g7yM5Iogw2zgTx7fTnGO
      OanPuV2YNCg7FI7w2W+8spwNPA2CAM8eaGBfQ2IDRjSq0Nrj4N1z7bxztm3apBX4IBf3jrXF
      7GuooDDbnNCSSlEUrP3D/NOvTnBlBg6AJblpfOmRrZTnpy/4pc8oUybFv3b8Gt958dStfJ4F
      R3G2mW/+l7vRaWY+mkeiUS619XOyqRub3U3/kJdgKIIsCRj1WrLTjFQWZVBVkkVFgWXG7syj
      hMIRfnv8Gr89dpXuOHp5stON3LN5JfdvX7Xo9oZTFoDbF+Sr331zSi+bpYwoCDz70Ya4kmES
      QVEUwpEokiTOyaZ5FJcnwLkWG2eabVzvdmAf8hIIqzoDS6qeinwLdavy2LAyb9G2yExZAAAH
      z7Xz9z8/lrAp01JgTVk2/+OTOxf8qDhacJERhZwgCEiiMCJbXRxLncmYdi7dtqaIVUUL+7Jj
      LtDKEo/tXrvgX35Qj0o1soReK2PQadBr5REHjsX98kMcBaCRJZ6+f+Oi+EHPJvsaKqityJnv
      x1gmSeLaTVUUWHhkV81yj9AIhVmpfGxv7YLwvlxmauIqAEEQuG9bJTUj6qOljF4r8/QDmzDN
      Q5fnMrNP3OdpBp2GLz+2jewlrBsWBYEn9qydVPO7zMIjoQPlrDQjX3x4a1JKp4XMjnUl3Let
      cklsDpcKCd+orCnP5pn99UjS0noJNq7K57MPbJoT97xl5o+EC0AQBHZuKOOJ3WtvmbvZfLOi
      0MIXHt4yL+quZeaWGd+pP7hzNU/sWfxFUJ6fzlef3DEuZGKZxcG0N8HT8dLhK/zojQuLMlus
      rjKPLz2ydSz3d5nFR9IFoCiq180//uL4oikCQYAtNUV88eEti6LnfZnJSboAQC2C9t4h/uHn
      x8b53S809FqZj36omod31iTddbnM7c+sFMAoQ24///H6ed48fX1Bpk0WZqXymfs3LnjP+2Xi
      Z1YLACASiXLsUhf/97fv0z9J0vjthiQJ7NpQxhN7apf0Rd9SZNYLYBSn288PfneOwxc6b+u9
      werSLB7eVcPGyvzl3p4lyJwVAKhKp7YeJy+818ThC53jEsfnk8w0Awd2VI94eC5vdJcqc1oA
      N9Juc/LLg5c51dQ9b+7TkiSwsjCDD60rZV9DRVIyxmUWB7esAEAVgnfbhzl9pZvXT16nq//W
      SC0NOpn6qgL2bKpgdWnWsrZhmTFuaQGMMirBa+1xcuKylXMtvfTYh3F7g7OSaKLVSGSaDdSU
      ZrN+ZS51lfmkGLVzqq9dZmEyLwVwM4qiMDDko63HQavNSYvVgd3lxen2M+QOxIRO34gkChh1
      GtJT9WSnm8i1mKgosFBRYKEo27w80i8zLbdFAdyMoihjaevBUIRQJIrXFyR0Q9ibUafBoJeR
      RRGtRkKnkZdPcZZJmNuyAJZZ5laxfNe/zJLm/wMuGPKNh3RrnwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Products Imported from G7' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAVzUlEQVR4nO3da2xcZ37f8e85cyfnwuHwfqd4ESlTlGTZkmzLa8uy1+tsmkW3QJNsgKBA
      iqBv2vRV0xd9YaB5lVfF5gK0SDYBggbtNgiSTbbJxrvu2pYsxbJl3UWJpHi/zgw5nBvnds7p
      C9ra9Yq0JT5nSEnn/wEEiRz7f56ZOb9zfZ7zaJZlWQjhUPp+N0CI/SQBEI4mARCOJgEQjiYB
      2EeVYpaxWzeJb+SVa60vz5PMFCjlUqRyZRta5wwSgH1j8I9//X3Wiya53OZX/+dr4/zth3d3
      fPnSD7/PX/3kI+ITF7kwuW5jO59u7v1ugGOZ6yynI3zz2GG0Sorv/dEfY+oaz515lbV4kabC
      NJWOXs598DHa5gaH+lt57+MEz0Q2+F//cIkXj/dz6PAw779zgX/5a/8aT22MmGuD+bUK1Bf4
      4V/+KR/fi/Ptb5zk7z+axpNZpaMjiqfhGNb8R9xdSvPGr/1bnu9v3O9PYl/JHmC/6EFcZpzU
      Zolccg6tcZQzo83MJTKUymUymSyWZdE59CzPDbfQ1jPA8LFT9LWEae4/wmtnXuf9dy8Q7juF
      RwPQOHbsEJc/uUklHWehVENnzMNGtkDfkRc52NPKmTdfw4wvMLlS5MzZMzSFvfv9Kew719tv
      v/32fjfCmdz09zTy3rvv42ocpsma516+jtdOjrA4fhUibfT0dBGsDdJQFyLcNkB59gZWpIVY
      LEZrNMjFn57jG79yFp+uoQEN3UMErDzt/cN4s3FCrQc40NNNpK6exroaYk0teP31HO6LMDGf
      pLO3j3CNs0OgyZ3gJ1Q5z1xyk47mGJq23415clU9AKZpomkamnxL4jFU9XMAy7KQnYx4XMlJ
      sHA0CYBwNAmAcLRdBcAyDYrFEgBGpUQun8cwLQzDACwq5YqdbRSianZ1J3hhepzx5SxnXnyO
      a5fOU9I8+Ou78RoFOmMeptJeDve32d1WIWy3qwB0HBgiUxwDIBDws5EqEKsNkLh7i8VEA6+e
      fhbTNDEMQ64AiceaYl+gCpmimxdOjHBlLE6kpZdwfp3UZoVYjQdd1zEMA03T0HU53RD2KpUN
      FhMZpRq7CsDkzUtMzyYo4qch4ubipTF6hkZwV4q0DXYxPrVIfX83cutLVNNiMsPv/ME/KtWo
      +p1g2QOIapleTvE731ULgKyVwtEkAMLRJADC0SQAwtEkAMLRJADC0SQAwtEkAMLRJADC0SQA
      wtEkAMLR5Mlw4olVp2f5Tu07SjUkAOKJFdLz/FLNPyvV2NUh0GY6yfWxe1v/3ojz4bkPWFrP
      kUisYZll5heWlRolxF7ZVQByhQqYW2OCb92+y9GTL9AY8hKPJ5i+fR13uN7WRgpRLbs6BGpo
      aiae3HoEd3ZjlUvn36eurZ/N5Slm9ChvHvLIkEhRdZYND1/YVQBSiWXi8TixplYamzsI1NWT
      TGWItBzgYMji9kyC4Z5GPDIkUlSR4XFTUqyxqwAYlTLt7W2UKwYDw4dYXEpw6NBBqJSpqfHj
      SquN0xRir+wqALGWTmI/93N3T+3WP7xb5cLhsGq7hNgTclwiHE0CIBxNAiAcTQIgHE0CIBxN
      AiAcTQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIgHG1XAZibuMX/+/ATACyjyE9/8ANmNtLc
      vXuPUmaFq3dmbW2kENWyq+7Qnf2HyJa3JslbnZ8i3NiOjkVmbYlLCR8nXjiOZVmYpolpmgD3
      /xbCLqahvk6pPRWikuXDi1dx67Du9dHg9ePKFymb4NZB07ZmCZPRYKIadE19FrpdT5J3Z3yR
      In6+9au/Smp2mnJ9A/n4GqOHo1wbm2L0mQPomoZlWTIkUlSFoasHQCbJE08sI3GX/F98W6mG
      rJXC0SQAwtEkAMLRJADC0SQAwtEkAMLRJADC0SQAwtEkAMLRJADC0SQAwtEkAMLRJADC0XYV
      gEoxx9TcEgC51ApXrlwnXSiRTmcAk2Ryzc42ClE1uwpAfDXB+vrWSp7ayNHVUcfE+BwLC8ss
      T9wkbXptbaQQ1bKrATGtnd2ksltDIptbW5iavEdnVy+Tl88x66rn6321MkmeqLp9myTPMCoY
      hoFhmEzeHaeld5Cg302ipZdO9ybT8Rw9TUGZJE9U1b5Nkjd79zqpVI5bE/N4jE2uf/oJDR39
      tLY2U1cXZnl5BQgqNk2I6ttVAHqHj9F7/6euB15vaWnZfYuE2ENyXCIcTQIgHE0CIBxNAiAc
      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
    </thumbnail>
    <thumbnail height='192' name='Products exported from Countries' width='192'>
      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
      r0O3x2sU/z/z4WBzDw8+JQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 10 goods exported from India' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAWTUlEQVR4nO3dx3MjaZrf8S8SCe8Ieu9Z3nX57q7u2dVIMbMjRWj3IB02QqHrXvZ/6JuO
      e9rYCJ10XIU2FLMzq+mZ6S7XZFkWq2iL3pMgQYCEJWwaHdpM95RjF0GyuvL5nBBk4n3fTPKX
      +eYL4IHNNE0TISxKOeoBCHGUJADC0iQAwtIkAMLSJABiD0rMjI0xObuMZvxwzSS1tc7Y2ARb
      yV1+iqspEgCxB3H++PlT4lP99E9u/eA3g//vDyRsGv/6z/+bREF7c1OmwezEBAX9Tz9am+hn
      aClJObXB8+V4hcf+euqh9iZ+suyqA7dTIZ6J8r/+56+p6jnPX//8OuCk5/Q5QqvjDI+OMXzr
      D+Tstfzy4wYGnm7wFz//SyYe3qHn3CkefnWfs9f+Hem5ebLRIR5EQhilPM36HNPGFk2f1DG+
      FWLszm8o6Aanblzj4b/cxu01uPI3/50LHeGK75dcAcSe5HfTONuucK3Njr/pHL/69NJ3vzP1
      EvObOXzlCHq4m59/9AG1TT30tvqYHp/CXtPNhRPHqWrp4y+vn8MwDEzT5OKnv6TaVaL35Dmu
      fPQxIbeKnk+R97Xxi49Ps7mxRVVTH39x9QT5fPlA9sv+2WeffXYgLYv3ii/YxPlzPbh9YUrb
      s4yupOnraAZbhof3n9J7+WdcOHUCPbFC2nDTXO1kJZLk3LVPqbPFiaaLNDe10FRXg82moOQ3
      uDu8zIWL1zh5rJPpZ8M0dnbgq26j05NkeKXAJx9fxuNw09hUjTdUTdDrrPh+2eSVYHEUMlvL
      lAPtVHtsRzqOIwuAYRgoiszAxNE6sv9AXdffvJEQB0xOwcLSJADC0iQAwtL2GQCT7Y0lFtZj
      mKbJ+vwE/fces1vSWZ+f4NGzSTSjSDyeoZhNEEtmKzJoISpln68EG2gaFEp5MA2cwXouVyWZ
      nFoBxUF3rcZSJEYpZbBZitN56nxlRi1EhewzAHYaGurYWd3GZlPwqDrzEZPupgDbpRL+oJPE
      VpyVmRmquk/ic9rRdR3DMDAMg1KpVJm9EOIt7TMAGlsbG8RiCRprq3g+NkN7dzeoEF+MkN8q
      E2jtoeP4JVzE2Uzs0ljtw263Uy6XcTgcldkLId7Svt8MV9QVmmvD6KaN9rZmioUCvlAtp3rb
      SRYVWuuqyPt03M5adovyorN4txzZK8FyBRDvAlkGFZYmARCWJgEQliYBEJYmARCWJgEQliYB
      EJYmARCWJgEQliYBEJYmARCWJgEQliYBEJYmARCWJgEQliYBEJYmARCWJgEQliYBEJYmARCW
      tu8AGLpGWdMBE10rUSiWME0TrfzNY0x03cA0DHTdqMCQhaicfdcFmh0dIuWo5crJdoYeDJAr
      avR+cI2158MUNI0TFy+QiBTwqwkId9BWG6jMyIWogP2XRSntMrm6TV9biNn5JCf6XDy6H6em
      K0xrSGUllmRpbI7q7uNcOtuLafypMpzNdrTfDiJExb4l0mZTKZVzlDJlHEEvhXyRoquI3eGm
      tfcUhVycombgVhUURUHTNFRVvqRSHK19/gcWefpokM3dIk7PFfz2HA8nNK5cu8Ta5DDj83Dx
      8ikS9gLhVi+x7RRtjWG+Pe/LFUAcNakMJyxNlkGFpUkAhKVJAISlSQCEpUkAhKVJAISlSQCE
      pUkAhKVJAISlSQCEpUkAhKVJAISlSQCEpUkAhKVJAISlSQCEpUkAhKVJAISlSQCEpUkAhKVJ
      AISlVawwj2nozIwPEU3pnLt0kdjCONEMXLpyksRWkaC7QMb001QjleHEu6NiATD0IumSk0vH
      3cwsbGJ3hDnTbbIeiVHKQKy4w/Fz5yvVnRAVUbnKcIodVcswOJmgpakXPCoujwM9m2B1ZpZQ
      Vx9Ou4Ku/6k0YqlUqlT3QryVCk6BSuTyOn6vQsGE3eUFoqZGz9mztJ/wE3QmWYkm6Wiswm63
      S2Es8U6oXGU406RULFDSTLw+D3qpSMkAr8eJrpnYFdAMUFU7NqQynHg3SGlEYWmyDCosTQIg
      LE0CICxNAiAsTQIgLE0CICxNvqRLvHeKuwUyW8k9bSsBEO+d+MImT/75qz1tK1MgYWkSAGFp
      EgBhaRIAYWl7uAk2mXpyDzPUiOquoq+t9uBHJcQh2cMVIM39+0NsrKwz+mT64EckxCHaQwD8
      9PbUMfJsmI4zvQc/IiEO0R4CUKJc9tDcUkM6lT74EQlxiPZwD+Dh53/9N+i5VT4fiB/8iIQ4
      RHsIQJ6b//p7dkples5/cvAjEuIQvTYA+fQm/XcHKSoqbreKqZcPa1xCHIrX3gM4PVWcu3SJ
      gFJgY2ODRDp/WOMS4lC8NgB2h5vGZjez0xFa61swy/qrNzZNNhYn+eqrfpIFjbnxpww8fEpe
      yxOJJNjd2WRjO1Pp8QuxL68NgFYuUCh6ufjRZXKZNVDtr9zW0Iqsbxf4+MZHuIspco4Qp7tC
      rEe2SCbSzC1tEA75Kr4DQuzHa+8ByvkEv/vNH8maTlo6znPueMsrtzXMEonNdb66G6OqqpNA
      rQ/3DyrDHZPKcOJQ6NprZip/5rUB8ASb+M//9b8wNTbM4OMHbO3a+du/uvLSbe2ql/qGajSb
      DYfHSXxlgS1Tp/PMGdpP+Ak4kqxspehoCEllOHGg7K+Zqfy51xbGyu4s8/nvH9N17jy9HS0E
      /V4Um+0VW5topSK5goY/4EMr5inpNnw+13eV4cq6icOhSmU4caDWx5b2/IEYqQwn3js/JgDy
      dmhhaRIAYWkSAGFpEgBhaRIAYWkSAGFpEgBhaRIAYWkSAGFpEgBhaRIAYWkSAGFpEgBhaRIA
      YWkSAGFpEgBhaRIAYWkSAGFpEgBhaRIAYWkSAGFpFQ2AWc7y+3/7I3m9xOjgPW7d6SddzLK0
      FCOxucRqTL5fQLxbKvZF2aZpsrK4hM8XIJ9O46ht42qvQiQSJbO1y7bDxvkPOjBNk28rsRiG
      UanuhfjOj6n0U7EA6LkYI9Or2MsFItE6nB43iqKCmWc3ncAZrsGGDdM0vguBBEAchCMJgN1d
      xSc3rrP4fJLGlnoWRoZYmTO4cP0SZtlPjS/LYmSbnpYaFL4++6tqxboX4juKsveZvVSGE+8d
      qQwnxB7JHKSC0r/5LVostu921KZGgr/6VQVG9OPdW7jLPw78Q0Xa+h//6R/oqO6qSFsHRQJQ
      QblHjynNz++7Hdepk0cWAKuRKZCwNAmAsDQJgLA0CYCwNAmAsDQJgLA0CYCwNAmAsDQJgLA0
      CYCwNAmAsDQJgLA0CYCwNAmAsDQJgLA0CYCwNAmAsDQJgLC0ygXANImvL/Lk2QQlwyS+vsDY
      9DIGZVKpHFohSyKTq1h3QlRCxT4TbBgGeV2ht0lhYmIZTcvR4CuztOGkkNCwaXGaes9Uqjsh
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Top 10 imported products' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAWe0lEQVR4nO3dSXMbeZrf8W9mYgcIENx3UdwkUSJFUntJ6qmqjp6epd1tO+wIH3yYy8yb
      mEtF+BXY4YsjfPAL8Ey0O9xd7u7SWpKqJEolUqQokQR3ggQ37PuSOQep5eoRJbFUKZJV+XxO
      CgD6PwkQP2Tij/w/qRiGYSCERakHvQFCHCQJgLA0CYCwNAmAsDQJgDBVfGOViYlJNuOZP7+j
      UmD22VOeh5YoVQ7PvIsEQJhq7NrnbJV0/vc//+bP7yhs8PvrT4gtPubXN8f3NFY+EWF2aevP
      bvs/v/2/AMw8mSRnwvbaTBhDiFcUVJwuF5oCj2/8mvFwjo9++rf0BcBf28LFnw7yP//HH7iR
      eMyD58ucuPxLNp9cw902xOlWg/vPN6npGmFt+jFXh46wmvVx7Z//F/6AH39bD7dv3qSmuY+1
      qXFQk3z5MISieTnmyxPSXaS2df7h7/8jjj1+tMseQJjKMMrEoil++atfEFlP8bNf/XuO1nle
      3R9fWcRWU09ocY1zP/lLupuDDAyeJhtZIhTe4OrP/y3HO5o4/8lf0xqwoxsGnpo2/uaTc2TV
      ak6e7OfSUC+GrhOObHH+07+hXo2Tyiuc/eRnNLrguxxhaZ999tln5r8MwqoU1U7f4DD1PgeN
      jQG+unUbd0MnQa+DpZlxllMaf/WzK3S11jA7t0xD2xEy2yuowXY+uXyWsbs3MfytHGnw4XPZ
      sLvdTH11nShBPr56nho1w+xmmfbmWgYGTzL59R3qjl2itzVIVV0jPruN+sZ6NGWP2yu/BIvD
      rcLy0hodR9o/yOgHFgBd11FVOQITB+vA3oGVSuWgSgvxinwEC0uTAAhLkwAIS5MACEuTAAhL
      kwAISzPtXCBdzzJ6+wG5SpHG3jO4s6usxsucPXuS2FaOak+FWMlOS13ArJJCfG+m/xC2OjOJ
      Fmxic2uHzjob61k7ehbKuS16Bofw2DUASqUSdrvdzNJCfGemng2qlzLsFB0cc9hIedy4fV6M
      2CZroXncrV24bBqVSgVd19F1nWKxaGZ5Ib4zEwNgsL0epq65FYdHIfZ0mdhahZZjp2jVq/A7
      EixFYnQ2B9E0TfYA4lAw8RDIoFQsotqdaIpBIZclV4KA302pqGO3KRTLOg6HHQU5BBKHw4Gd
      DCcBEIeBTIMKS5MACEuTAAhLkwAIS5MACEuTAAhLkwAIS5MACEuTAAhLkwAIS5MACEuTAAhL
      kwAIS5MACEuTAAhLkwAISzM1APlUlKmnU2SKOomtMNPzq+iUSaVyVIo5EumsmeWE+N5MWxNs
      6BWeTDzlSO8xKKaZXtqgzlNhft1OKV7Eru8QaD9uVjkhTGFeAIwcyZ0Ez8vPOdLRS01DPW31
      PuaXI6zOzuFt66XH75KuEOJQMS0AiuIk2NTMqZOtfDMWwe61U60kwFNDW89pjGKEaKZIjdch
      XSHEoWFeWxTFRk9nPQ/HVhk+N0JmPcRiDEYG6ojHigR8tWwlsxheB3u8fJMQH5x0hRCWJtOg
      wtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLS
      JADC0iQAwtIkAMLSzFsSaejcvf7/KGkejg2MsDz1kES2yODFC8TWMgTdKbLOJrqag6aVFOL7
      MrErhEGhXKa6vokqrUJ1WzdDDR7mVzfZWFoh2dDGueHgq44Quq5TKpXMKi/EezFxUbzC+Usf
      U0yvMjm7iS9go1zKo9gc1DR1UCzEKVZ0nJqCpmkYhoHNZl55Id6HaYviDaPE04ejbGfK9I+c
      JTo/yUaqzMiFIWKRLHX+ChsZjc7WOhRkUbw4HKQrhLA0mQUSliYBEJYmARCWJgEQliYBEJYm
      ARCWJgEQliYBEJYmARCWJgEQliYBEJYmARCWJgEQliYBEJYmARCWJgEQliYBEJZmagCMco5b
      126RKRWZHh/l5u17pItZVla2Se+ssbIZN7OcEN/bHlalG0w/ukulqgm7O0Bve/3ujzIMIsuL
      6NjIp1MUXUHOdThYWdmglKmwvZGkf3iIb6/APKDVmEK8socAJLn31Te09w2SSEfeHIBigieh
      dZx6ka1oCofDjs3hxijvsB1ewVnXjE1VMYz/3xalXC6b/HSE+G72EAAfvd0NjI6PcflX/+mN
      j1JUJ/0nelmensHt8xKZmeDOXJn+c+dA91HrzTC3skVvR/3LIBiyKF4cuD0EoEix6KS1rY5U
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Trade_off' width='192'>
      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
      H5OzQMLVc/H/3UjoZOlCSUUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Yearly Change in Exports for Products' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Yearly Change in Importing of Products' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Yearly Trends based on Country' width='192'>
      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
      psNhNfL8owAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Yearly import based on country' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
